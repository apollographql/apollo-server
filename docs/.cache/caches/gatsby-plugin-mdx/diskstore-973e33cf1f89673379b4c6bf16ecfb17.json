{"expireTime":9007200901521028000,"key":"gatsby-plugin-mdx-entire-payload-3a59d07e93ab23ffd0b4a7f0295f191b-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import {ExpansionPanel} from 'gatsby-theme-apollo-docs';","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":57,"offset":57},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Before you create a custom schema directive, ","position":{"start":{"line":4,"column":3,"offset":61},"end":{"line":4,"column":48,"offset":106},"indent":[]}},{"type":"link","title":null,"url":"./directives","children":[{"type":"text","value":"learn the basics about directives","position":{"start":{"line":4,"column":49,"offset":107},"end":{"line":4,"column":82,"offset":140},"indent":[]}}],"position":{"start":{"line":4,"column":48,"offset":106},"end":{"line":4,"column":97,"offset":155},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":4,"column":97,"offset":155},"end":{"line":4,"column":98,"offset":156},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":61},"end":{"line":4,"column":98,"offset":156},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":59},"end":{"line":4,"column":98,"offset":156},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Your schema can define custom directives that can then decorate ","position":{"start":{"line":6,"column":1,"offset":158},"end":{"line":6,"column":65,"offset":222},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"other","position":{"start":{"line":6,"column":66,"offset":223},"end":{"line":6,"column":71,"offset":228},"indent":[]}}],"position":{"start":{"line":6,"column":65,"offset":222},"end":{"line":6,"column":72,"offset":229},"indent":[]}},{"type":"text","value":" parts of your schema:","position":{"start":{"line":6,"column":72,"offset":229},"end":{"line":6,"column":94,"offset":251},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":158},"end":{"line":6,"column":94,"offset":251},"indent":[]}},{"type":"code","lang":"graphql:title=schema.graphql","meta":null,"value":"# Definition\ndirective @uppercase on FIELD_DEFINITION\n\ntype Query {\n  # Usage\n  hello: String @uppercase\n}","position":{"start":{"line":8,"column":1,"offset":253},"end":{"line":16,"column":4,"offset":395},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"When Apollo Server loads your schema on startup, it can execute custom logic wherever it encounters a particular directive. For example, it can modify the resolver function for a decorated field (for the schema above, it could transform the ","position":{"start":{"line":18,"column":1,"offset":397},"end":{"line":18,"column":242,"offset":638},"indent":[]}},{"type":"inlineCode","value":"hello","position":{"start":{"line":18,"column":242,"offset":638},"end":{"line":18,"column":249,"offset":645},"indent":[]}},{"type":"text","value":" resolver's original result to uppercase).","position":{"start":{"line":18,"column":249,"offset":645},"end":{"line":18,"column":291,"offset":687},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":397},"end":{"line":18,"column":291,"offset":687},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Defining","position":{"start":{"line":20,"column":4,"offset":692},"end":{"line":20,"column":12,"offset":700},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":689},"end":{"line":20,"column":12,"offset":700},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A directive definition looks like this:","position":{"start":{"line":22,"column":1,"offset":702},"end":{"line":22,"column":40,"offset":741},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":702},"end":{"line":22,"column":40,"offset":741},"indent":[]}},{"type":"code","lang":"graphql:title=schema.graphql","meta":null,"value":"directive @deprecated(\n  reason: String = \"No longer supported\"\n) on FIELD_DEFINITION | ENUM_VALUE","position":{"start":{"line":24,"column":1,"offset":743},"end":{"line":28,"column":4,"offset":877},"indent":[1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"This defines a directive named ","position":{"start":{"line":30,"column":3,"offset":881},"end":{"line":30,"column":34,"offset":912},"indent":[]}},{"type":"inlineCode","value":"@deprecated","position":{"start":{"line":30,"column":34,"offset":912},"end":{"line":30,"column":47,"offset":925},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":30,"column":47,"offset":925},"end":{"line":30,"column":48,"offset":926},"indent":[]}}],"position":{"start":{"line":30,"column":3,"offset":881},"end":{"line":30,"column":48,"offset":926},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":879},"end":{"line":30,"column":48,"offset":926},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The directive takes one optional argument (","position":{"start":{"line":31,"column":3,"offset":929},"end":{"line":31,"column":46,"offset":972},"indent":[]}},{"type":"inlineCode","value":"reason","position":{"start":{"line":31,"column":46,"offset":972},"end":{"line":31,"column":54,"offset":980},"indent":[]}},{"type":"text","value":") with a default value (","position":{"start":{"line":31,"column":54,"offset":980},"end":{"line":31,"column":78,"offset":1004},"indent":[]}},{"type":"inlineCode","value":"\"No longer supported\"","position":{"start":{"line":31,"column":78,"offset":1004},"end":{"line":31,"column":101,"offset":1027},"indent":[]}},{"type":"text","value":").","position":{"start":{"line":31,"column":101,"offset":1027},"end":{"line":31,"column":103,"offset":1029},"indent":[]}}],"position":{"start":{"line":31,"column":3,"offset":929},"end":{"line":31,"column":103,"offset":1029},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":927},"end":{"line":31,"column":103,"offset":1029},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The directive can decorate any number of ","position":{"start":{"line":32,"column":3,"offset":1032},"end":{"line":32,"column":44,"offset":1073},"indent":[]}},{"type":"inlineCode","value":"FIELD_DEFINITION","position":{"start":{"line":32,"column":44,"offset":1073},"end":{"line":32,"column":62,"offset":1091},"indent":[]}},{"type":"text","value":"s and ","position":{"start":{"line":32,"column":62,"offset":1091},"end":{"line":32,"column":68,"offset":1097},"indent":[]}},{"type":"inlineCode","value":"ENUM_VALUE","position":{"start":{"line":32,"column":68,"offset":1097},"end":{"line":32,"column":80,"offset":1109},"indent":[]}},{"type":"text","value":"s in your schema.","position":{"start":{"line":32,"column":80,"offset":1109},"end":{"line":32,"column":97,"offset":1126},"indent":[]}}],"position":{"start":{"line":32,"column":3,"offset":1032},"end":{"line":32,"column":97,"offset":1126},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1030},"end":{"line":32,"column":97,"offset":1126},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":879},"end":{"line":32,"column":97,"offset":1126},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Supported locations","position":{"start":{"line":34,"column":5,"offset":1132},"end":{"line":34,"column":24,"offset":1151},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1128},"end":{"line":34,"column":24,"offset":1151},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Your custom directive can appear ","position":{"start":{"line":36,"column":1,"offset":1153},"end":{"line":36,"column":34,"offset":1186},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"only","position":{"start":{"line":36,"column":35,"offset":1187},"end":{"line":36,"column":39,"offset":1191},"indent":[]}}],"position":{"start":{"line":36,"column":34,"offset":1186},"end":{"line":36,"column":40,"offset":1192},"indent":[]}},{"type":"text","value":" in the schema locations you list after the ","position":{"start":{"line":36,"column":40,"offset":1192},"end":{"line":36,"column":84,"offset":1236},"indent":[]}},{"type":"inlineCode","value":"on","position":{"start":{"line":36,"column":84,"offset":1236},"end":{"line":36,"column":88,"offset":1240},"indent":[]}},{"type":"text","value":" keyword in the directive's definition.","position":{"start":{"line":36,"column":88,"offset":1240},"end":{"line":36,"column":127,"offset":1279},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1153},"end":{"line":36,"column":127,"offset":1279},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The table below lists all available locations in a GraphQL schema. Your directive can support any combination of these locations.","position":{"start":{"line":38,"column":1,"offset":1281},"end":{"line":38,"column":130,"offset":1410},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1281},"end":{"line":38,"column":130,"offset":1410},"indent":[]}},{"type":"jsx","value":"<table class=\"field-table\">\n  <thead>\n    <tr>\n      <th>Name /<br/>Visitor Method</th>\n      <th>Description</th>\n    </tr>\n  </thead>","position":{"start":{"line":40,"column":1,"offset":1412},"end":{"line":46,"column":11,"offset":1547},"indent":[1,1,1,1,1,1]}},{"type":"jsx","value":"<tbody>\n<tr>\n<td>","position":{"start":{"line":48,"column":1,"offset":1549},"end":{"line":50,"column":5,"offset":1566},"indent":[1,1]}},{"type":"heading","depth":6,"children":[{"type":"inlineCode","value":"SCALAR","position":{"start":{"line":52,"column":8,"offset":1575},"end":{"line":52,"column":16,"offset":1583},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1568},"end":{"line":52,"column":16,"offset":1583},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"visitScalar(scalar: GraphQLScalarType)","position":{"start":{"line":54,"column":1,"offset":1585},"end":{"line":54,"column":41,"offset":1625},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1585},"end":{"line":54,"column":41,"offset":1625},"indent":[]}},{"type":"jsx","value":"</td>\n<td>","position":{"start":{"line":55,"column":1,"offset":1626},"end":{"line":56,"column":5,"offset":1636},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The definition of a ","position":{"start":{"line":58,"column":1,"offset":1638},"end":{"line":58,"column":21,"offset":1658},"indent":[]}},{"type":"link","title":null,"url":"./custom-scalars/","children":[{"type":"text","value":"custom scalar","position":{"start":{"line":58,"column":22,"offset":1659},"end":{"line":58,"column":35,"offset":1672},"indent":[]}}],"position":{"start":{"line":58,"column":21,"offset":1658},"end":{"line":58,"column":55,"offset":1692},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1638},"end":{"line":58,"column":55,"offset":1692},"indent":[]}},{"type":"jsx","value":"</td>\n</tr>","position":{"start":{"line":60,"column":1,"offset":1694},"end":{"line":61,"column":6,"offset":1705},"indent":[1]}},{"type":"jsx","value":"<tr>\n<td>","position":{"start":{"line":63,"column":1,"offset":1707},"end":{"line":64,"column":5,"offset":1716},"indent":[1]}},{"type":"heading","depth":6,"children":[{"type":"inlineCode","value":"OBJECT","position":{"start":{"line":66,"column":8,"offset":1725},"end":{"line":66,"column":16,"offset":1733},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1718},"end":{"line":66,"column":16,"offset":1733},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"visitObject(object: GraphQLObjectType)","position":{"start":{"line":68,"column":1,"offset":1735},"end":{"line":68,"column":41,"offset":1775},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":1735},"end":{"line":68,"column":41,"offset":1775},"indent":[]}},{"type":"jsx","value":"</td>\n<td>","position":{"start":{"line":69,"column":1,"offset":1776},"end":{"line":70,"column":5,"offset":1786},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The definition of an ","position":{"start":{"line":72,"column":1,"offset":1788},"end":{"line":72,"column":22,"offset":1809},"indent":[]}},{"type":"link","title":null,"url":"./schema/#object-types/","children":[{"type":"text","value":"object type","position":{"start":{"line":72,"column":23,"offset":1810},"end":{"line":72,"column":34,"offset":1821},"indent":[]}}],"position":{"start":{"line":72,"column":22,"offset":1809},"end":{"line":72,"column":60,"offset":1847},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":1788},"end":{"line":72,"column":60,"offset":1847},"indent":[]}},{"type":"jsx","value":"</td>\n</tr>","position":{"start":{"line":74,"column":1,"offset":1849},"end":{"line":75,"column":6,"offset":1860},"indent":[1]}},{"type":"jsx","value":"<tr>\n<td>","position":{"start":{"line":77,"column":1,"offset":1862},"end":{"line":78,"column":5,"offset":1871},"indent":[1]}},{"type":"heading","depth":6,"children":[{"type":"inlineCode","value":"FIELD_DEFINITION","position":{"start":{"line":80,"column":8,"offset":1880},"end":{"line":80,"column":26,"offset":1898},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":1873},"end":{"line":80,"column":26,"offset":1898},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"visitFieldDefinition(field: GraphQLField<any, any>)","position":{"start":{"line":82,"column":1,"offset":1900},"end":{"line":82,"column":54,"offset":1953},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":1900},"end":{"line":82,"column":54,"offset":1953},"indent":[]}},{"type":"jsx","value":"</td>\n<td>","position":{"start":{"line":83,"column":1,"offset":1954},"end":{"line":84,"column":5,"offset":1964},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The definition of a field within any defined type ","position":{"start":{"line":86,"column":1,"offset":1966},"end":{"line":86,"column":51,"offset":2016},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"except","position":{"start":{"line":86,"column":52,"offset":2017},"end":{"line":86,"column":58,"offset":2023},"indent":[]}}],"position":{"start":{"line":86,"column":51,"offset":2016},"end":{"line":86,"column":59,"offset":2024},"indent":[]}},{"type":"text","value":" an ","position":{"start":{"line":86,"column":59,"offset":2024},"end":{"line":86,"column":63,"offset":2028},"indent":[]}},{"type":"link","title":null,"url":"./schema/#input-types","children":[{"type":"text","value":"input type","position":{"start":{"line":86,"column":64,"offset":2029},"end":{"line":86,"column":74,"offset":2039},"indent":[]}}],"position":{"start":{"line":86,"column":63,"offset":2028},"end":{"line":86,"column":98,"offset":2063},"indent":[]}},{"type":"text","value":" (see ","position":{"start":{"line":86,"column":98,"offset":2063},"end":{"line":86,"column":104,"offset":2069},"indent":[]}},{"type":"inlineCode","value":"INPUT_FIELD_DEFINITION","position":{"start":{"line":86,"column":104,"offset":2069},"end":{"line":86,"column":128,"offset":2093},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":86,"column":128,"offset":2093},"end":{"line":86,"column":129,"offset":2094},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":1966},"end":{"line":86,"column":129,"offset":2094},"indent":[]}},{"type":"jsx","value":"</td>\n</tr>","position":{"start":{"line":88,"column":1,"offset":2096},"end":{"line":89,"column":6,"offset":2107},"indent":[1]}},{"type":"jsx","value":"<tr>\n<td>","position":{"start":{"line":91,"column":1,"offset":2109},"end":{"line":92,"column":5,"offset":2118},"indent":[1]}},{"type":"heading","depth":6,"children":[{"type":"inlineCode","value":"ARGUMENT_DEFINITION","position":{"start":{"line":94,"column":8,"offset":2127},"end":{"line":94,"column":29,"offset":2148},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":2120},"end":{"line":94,"column":29,"offset":2148},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"visitArgumentDefinition(argument: GraphQLArgument)","position":{"start":{"line":96,"column":1,"offset":2150},"end":{"line":96,"column":53,"offset":2202},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":2150},"end":{"line":96,"column":53,"offset":2202},"indent":[]}},{"type":"jsx","value":"</td>\n<td>","position":{"start":{"line":97,"column":1,"offset":2203},"end":{"line":98,"column":5,"offset":2213},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The definition of a field argument","position":{"start":{"line":100,"column":1,"offset":2215},"end":{"line":100,"column":35,"offset":2249},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":2215},"end":{"line":100,"column":35,"offset":2249},"indent":[]}},{"type":"jsx","value":"</td>\n</tr>","position":{"start":{"line":102,"column":1,"offset":2251},"end":{"line":103,"column":6,"offset":2262},"indent":[1]}},{"type":"jsx","value":"<tr>\n<td>","position":{"start":{"line":105,"column":1,"offset":2264},"end":{"line":106,"column":5,"offset":2273},"indent":[1]}},{"type":"heading","depth":6,"children":[{"type":"inlineCode","value":"INTERFACE","position":{"start":{"line":108,"column":8,"offset":2282},"end":{"line":108,"column":19,"offset":2293},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":2275},"end":{"line":108,"column":19,"offset":2293},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"visitInterface(iface: GraphQLInterfaceType)","position":{"start":{"line":110,"column":1,"offset":2295},"end":{"line":110,"column":46,"offset":2340},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":2295},"end":{"line":110,"column":46,"offset":2340},"indent":[]}},{"type":"jsx","value":"</td>\n<td>","position":{"start":{"line":111,"column":1,"offset":2341},"end":{"line":112,"column":5,"offset":2351},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The definition of an ","position":{"start":{"line":114,"column":1,"offset":2353},"end":{"line":114,"column":22,"offset":2374},"indent":[]}},{"type":"link","title":null,"url":"unions-interfaces/#interface-type","children":[{"type":"text","value":"interface","position":{"start":{"line":114,"column":23,"offset":2375},"end":{"line":114,"column":32,"offset":2384},"indent":[]}}],"position":{"start":{"line":114,"column":22,"offset":2374},"end":{"line":114,"column":68,"offset":2420},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":2353},"end":{"line":114,"column":68,"offset":2420},"indent":[]}},{"type":"jsx","value":"</td>\n</tr>","position":{"start":{"line":116,"column":1,"offset":2422},"end":{"line":117,"column":6,"offset":2433},"indent":[1]}},{"type":"jsx","value":"<tr>\n<td>","position":{"start":{"line":119,"column":1,"offset":2435},"end":{"line":120,"column":5,"offset":2444},"indent":[1]}},{"type":"heading","depth":6,"children":[{"type":"inlineCode","value":"UNION","position":{"start":{"line":122,"column":8,"offset":2453},"end":{"line":122,"column":15,"offset":2460},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":2446},"end":{"line":122,"column":15,"offset":2460},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"visitUnion(union: GraphQLUnionType)","position":{"start":{"line":124,"column":1,"offset":2462},"end":{"line":124,"column":38,"offset":2499},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":2462},"end":{"line":124,"column":38,"offset":2499},"indent":[]}},{"type":"jsx","value":"</td>\n<td>","position":{"start":{"line":125,"column":1,"offset":2500},"end":{"line":126,"column":5,"offset":2510},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The definition of a ","position":{"start":{"line":128,"column":1,"offset":2512},"end":{"line":128,"column":21,"offset":2532},"indent":[]}},{"type":"link","title":null,"url":"./unions-interfaces/#union-type","children":[{"type":"text","value":"union","position":{"start":{"line":128,"column":22,"offset":2533},"end":{"line":128,"column":27,"offset":2538},"indent":[]}}],"position":{"start":{"line":128,"column":21,"offset":2532},"end":{"line":128,"column":61,"offset":2572},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":2512},"end":{"line":128,"column":61,"offset":2572},"indent":[]}},{"type":"jsx","value":"</td>\n</tr>","position":{"start":{"line":130,"column":1,"offset":2574},"end":{"line":131,"column":6,"offset":2585},"indent":[1]}},{"type":"jsx","value":"<tr>\n<td>","position":{"start":{"line":133,"column":1,"offset":2587},"end":{"line":134,"column":5,"offset":2596},"indent":[1]}},{"type":"heading","depth":6,"children":[{"type":"inlineCode","value":"ENUM","position":{"start":{"line":136,"column":8,"offset":2605},"end":{"line":136,"column":14,"offset":2611},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":2598},"end":{"line":136,"column":14,"offset":2611},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"visitEnum(type: GraphQLEnumType)","position":{"start":{"line":138,"column":1,"offset":2613},"end":{"line":138,"column":35,"offset":2647},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":2613},"end":{"line":138,"column":35,"offset":2647},"indent":[]}},{"type":"jsx","value":"</td>\n<td>","position":{"start":{"line":139,"column":1,"offset":2648},"end":{"line":140,"column":5,"offset":2658},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The definition of an ","position":{"start":{"line":142,"column":1,"offset":2660},"end":{"line":142,"column":22,"offset":2681},"indent":[]}},{"type":"link","title":null,"url":"./schema/#enum-types","children":[{"type":"text","value":"enum","position":{"start":{"line":142,"column":23,"offset":2682},"end":{"line":142,"column":27,"offset":2686},"indent":[]}}],"position":{"start":{"line":142,"column":22,"offset":2681},"end":{"line":142,"column":50,"offset":2709},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":2660},"end":{"line":142,"column":50,"offset":2709},"indent":[]}},{"type":"jsx","value":"</td>\n</tr>","position":{"start":{"line":144,"column":1,"offset":2711},"end":{"line":145,"column":6,"offset":2722},"indent":[1]}},{"type":"jsx","value":"<tr>\n<td>","position":{"start":{"line":147,"column":1,"offset":2724},"end":{"line":148,"column":5,"offset":2733},"indent":[1]}},{"type":"heading","depth":6,"children":[{"type":"inlineCode","value":"ENUM_VALUE","position":{"start":{"line":150,"column":8,"offset":2742},"end":{"line":150,"column":20,"offset":2754},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":2735},"end":{"line":150,"column":20,"offset":2754},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"visitEnumValue(value: GraphQLEnumValue)","position":{"start":{"line":152,"column":1,"offset":2756},"end":{"line":152,"column":42,"offset":2797},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":2756},"end":{"line":152,"column":42,"offset":2797},"indent":[]}},{"type":"jsx","value":"</td>\n<td>","position":{"start":{"line":153,"column":1,"offset":2798},"end":{"line":154,"column":5,"offset":2808},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The definition of one value within an ","position":{"start":{"line":156,"column":1,"offset":2810},"end":{"line":156,"column":39,"offset":2848},"indent":[]}},{"type":"link","title":null,"url":"./schema/#enum-types","children":[{"type":"text","value":"enum","position":{"start":{"line":156,"column":40,"offset":2849},"end":{"line":156,"column":44,"offset":2853},"indent":[]}}],"position":{"start":{"line":156,"column":39,"offset":2848},"end":{"line":156,"column":67,"offset":2876},"indent":[]}}],"position":{"start":{"line":156,"column":1,"offset":2810},"end":{"line":156,"column":67,"offset":2876},"indent":[]}},{"type":"jsx","value":"</td>\n</tr>","position":{"start":{"line":158,"column":1,"offset":2878},"end":{"line":159,"column":6,"offset":2889},"indent":[1]}},{"type":"jsx","value":"<tr>\n<td>","position":{"start":{"line":161,"column":1,"offset":2891},"end":{"line":162,"column":5,"offset":2900},"indent":[1]}},{"type":"heading","depth":6,"children":[{"type":"inlineCode","value":"INPUT_OBJECT","position":{"start":{"line":164,"column":8,"offset":2909},"end":{"line":164,"column":22,"offset":2923},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":2902},"end":{"line":164,"column":22,"offset":2923},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"visitInputObject(object: GraphQLInputObjectType)","position":{"start":{"line":166,"column":1,"offset":2925},"end":{"line":166,"column":51,"offset":2975},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":2925},"end":{"line":166,"column":51,"offset":2975},"indent":[]}},{"type":"jsx","value":"</td>\n<td>","position":{"start":{"line":167,"column":1,"offset":2976},"end":{"line":168,"column":5,"offset":2986},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The definition of an ","position":{"start":{"line":170,"column":1,"offset":2988},"end":{"line":170,"column":22,"offset":3009},"indent":[]}},{"type":"link","title":null,"url":"./schema/#input-types","children":[{"type":"text","value":"input type","position":{"start":{"line":170,"column":23,"offset":3010},"end":{"line":170,"column":33,"offset":3020},"indent":[]}}],"position":{"start":{"line":170,"column":22,"offset":3009},"end":{"line":170,"column":57,"offset":3044},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":2988},"end":{"line":170,"column":57,"offset":3044},"indent":[]}},{"type":"jsx","value":"</td>\n</tr>","position":{"start":{"line":172,"column":1,"offset":3046},"end":{"line":173,"column":6,"offset":3057},"indent":[1]}},{"type":"jsx","value":"<tr>\n<td>","position":{"start":{"line":175,"column":1,"offset":3059},"end":{"line":176,"column":5,"offset":3068},"indent":[1]}},{"type":"heading","depth":6,"children":[{"type":"inlineCode","value":"INPUT_FIELD_DEFINITION","position":{"start":{"line":178,"column":8,"offset":3077},"end":{"line":178,"column":32,"offset":3101},"indent":[]}}],"position":{"start":{"line":178,"column":1,"offset":3070},"end":{"line":178,"column":32,"offset":3101},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"visitInputFieldDefinition(field: GraphQLInputField)","position":{"start":{"line":180,"column":1,"offset":3103},"end":{"line":180,"column":54,"offset":3156},"indent":[]}}],"position":{"start":{"line":180,"column":1,"offset":3103},"end":{"line":180,"column":54,"offset":3156},"indent":[]}},{"type":"jsx","value":"</td>\n<td>","position":{"start":{"line":181,"column":1,"offset":3157},"end":{"line":182,"column":5,"offset":3167},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The definition of a field within an ","position":{"start":{"line":184,"column":1,"offset":3169},"end":{"line":184,"column":37,"offset":3205},"indent":[]}},{"type":"link","title":null,"url":"./schema/#input-types","children":[{"type":"text","value":"input type","position":{"start":{"line":184,"column":38,"offset":3206},"end":{"line":184,"column":48,"offset":3216},"indent":[]}}],"position":{"start":{"line":184,"column":37,"offset":3205},"end":{"line":184,"column":72,"offset":3240},"indent":[]}}],"position":{"start":{"line":184,"column":1,"offset":3169},"end":{"line":184,"column":72,"offset":3240},"indent":[]}},{"type":"jsx","value":"</td>\n</tr>","position":{"start":{"line":186,"column":1,"offset":3242},"end":{"line":187,"column":6,"offset":3253},"indent":[1]}},{"type":"jsx","value":"<tr>\n<td>","position":{"start":{"line":190,"column":1,"offset":3256},"end":{"line":191,"column":5,"offset":3265},"indent":[1]}},{"type":"heading","depth":6,"children":[{"type":"inlineCode","value":"SCHEMA","position":{"start":{"line":193,"column":8,"offset":3274},"end":{"line":193,"column":16,"offset":3282},"indent":[]}}],"position":{"start":{"line":193,"column":1,"offset":3267},"end":{"line":193,"column":16,"offset":3282},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"visitSchema(schema: GraphQLSchema)","position":{"start":{"line":195,"column":1,"offset":3284},"end":{"line":195,"column":37,"offset":3320},"indent":[]}}],"position":{"start":{"line":195,"column":1,"offset":3284},"end":{"line":195,"column":37,"offset":3320},"indent":[]}},{"type":"jsx","value":"</td>\n<td>","position":{"start":{"line":196,"column":1,"offset":3321},"end":{"line":197,"column":5,"offset":3331},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The top-level ","position":{"start":{"line":199,"column":1,"offset":3333},"end":{"line":199,"column":15,"offset":3347},"indent":[]}},{"type":"inlineCode","value":"schema","position":{"start":{"line":199,"column":15,"offset":3347},"end":{"line":199,"column":23,"offset":3355},"indent":[]}},{"type":"text","value":" object declaration with ","position":{"start":{"line":199,"column":23,"offset":3355},"end":{"line":199,"column":48,"offset":3380},"indent":[]}},{"type":"inlineCode","value":"query","position":{"start":{"line":199,"column":48,"offset":3380},"end":{"line":199,"column":55,"offset":3387},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":199,"column":55,"offset":3387},"end":{"line":199,"column":57,"offset":3389},"indent":[]}},{"type":"inlineCode","value":"mutation","position":{"start":{"line":199,"column":57,"offset":3389},"end":{"line":199,"column":67,"offset":3399},"indent":[]}},{"type":"text","value":", and/or ","position":{"start":{"line":199,"column":67,"offset":3399},"end":{"line":199,"column":76,"offset":3408},"indent":[]}},{"type":"inlineCode","value":"subscription","position":{"start":{"line":199,"column":76,"offset":3408},"end":{"line":199,"column":90,"offset":3422},"indent":[]}},{"type":"text","value":" fields (","position":{"start":{"line":199,"column":90,"offset":3422},"end":{"line":199,"column":99,"offset":3431},"indent":[]}},{"type":"link","title":null,"url":"https://spec.graphql.org/June2018/#example-e2969","children":[{"type":"text","value":"this declaration is usually omitted","position":{"start":{"line":199,"column":100,"offset":3432},"end":{"line":199,"column":135,"offset":3467},"indent":[]}}],"position":{"start":{"line":199,"column":99,"offset":3431},"end":{"line":199,"column":186,"offset":3518},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":199,"column":186,"offset":3518},"end":{"line":199,"column":187,"offset":3519},"indent":[]}}],"position":{"start":{"line":199,"column":1,"offset":3333},"end":{"line":199,"column":187,"offset":3519},"indent":[]}},{"type":"jsx","value":"</td>\n</tr>\n</tbody>\n</table>","position":{"start":{"line":201,"column":1,"offset":3521},"end":{"line":204,"column":9,"offset":3550},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Implementing","position":{"start":{"line":206,"column":4,"offset":3555},"end":{"line":206,"column":16,"offset":3567},"indent":[]}}],"position":{"start":{"line":206,"column":1,"offset":3552},"end":{"line":206,"column":16,"offset":3567},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"After you define your directive and its valid locations, you still need to define the logic that Apollo Server executes whenever it ","position":{"start":{"line":208,"column":1,"offset":3569},"end":{"line":208,"column":133,"offset":3701},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"encounters","position":{"start":{"line":208,"column":134,"offset":3702},"end":{"line":208,"column":144,"offset":3712},"indent":[]}}],"position":{"start":{"line":208,"column":133,"offset":3701},"end":{"line":208,"column":145,"offset":3713},"indent":[]}},{"type":"text","value":" the directive in your schema.","position":{"start":{"line":208,"column":145,"offset":3713},"end":{"line":208,"column":175,"offset":3743},"indent":[]}}],"position":{"start":{"line":208,"column":1,"offset":3569},"end":{"line":208,"column":175,"offset":3743},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To accomplish this, you create a subclass of ","position":{"start":{"line":210,"column":1,"offset":3745},"end":{"line":210,"column":46,"offset":3790},"indent":[]}},{"type":"inlineCode","value":"SchemaDirectiveVisitor","position":{"start":{"line":210,"column":46,"offset":3790},"end":{"line":210,"column":70,"offset":3814},"indent":[]}},{"type":"text","value":", a class that's included in Apollo Server as part of the ","position":{"start":{"line":210,"column":70,"offset":3814},"end":{"line":210,"column":128,"offset":3872},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/apollographql/graphql-tools","children":[{"type":"inlineCode","value":"graphql-tools","position":{"start":{"line":210,"column":129,"offset":3873},"end":{"line":210,"column":144,"offset":3888},"indent":[]}},{"type":"text","value":" package","position":{"start":{"line":210,"column":144,"offset":3888},"end":{"line":210,"column":152,"offset":3896},"indent":[]}}],"position":{"start":{"line":210,"column":128,"offset":3872},"end":{"line":210,"column":201,"offset":3945},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":210,"column":201,"offset":3945},"end":{"line":210,"column":202,"offset":3946},"indent":[]}}],"position":{"start":{"line":210,"column":1,"offset":3745},"end":{"line":210,"column":202,"offset":3946},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In your subclass, you override the ","position":{"start":{"line":212,"column":1,"offset":3948},"end":{"line":212,"column":36,"offset":3983},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"visitor method","position":{"start":{"line":212,"column":38,"offset":3985},"end":{"line":212,"column":52,"offset":3999},"indent":[]}}],"position":{"start":{"line":212,"column":36,"offset":3983},"end":{"line":212,"column":54,"offset":4001},"indent":[]}},{"type":"text","value":" for ","position":{"start":{"line":212,"column":54,"offset":4001},"end":{"line":212,"column":59,"offset":4006},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"each location","position":{"start":{"line":212,"column":60,"offset":4007},"end":{"line":212,"column":73,"offset":4020},"indent":[]}}],"position":{"start":{"line":212,"column":59,"offset":4006},"end":{"line":212,"column":74,"offset":4021},"indent":[]}},{"type":"text","value":" your directive can appear in. You can see each location's corresponding visitor method in ","position":{"start":{"line":212,"column":74,"offset":4021},"end":{"line":212,"column":165,"offset":4112},"indent":[]}},{"type":"link","title":null,"url":"#supported-locations","children":[{"type":"text","value":"the table above","position":{"start":{"line":212,"column":166,"offset":4113},"end":{"line":212,"column":181,"offset":4128},"indent":[]}}],"position":{"start":{"line":212,"column":165,"offset":4112},"end":{"line":212,"column":204,"offset":4151},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":212,"column":204,"offset":4151},"end":{"line":212,"column":205,"offset":4152},"indent":[]}}],"position":{"start":{"line":212,"column":1,"offset":3948},"end":{"line":212,"column":205,"offset":4152},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Apollo Server includes ","position":{"start":{"line":214,"column":3,"offset":4156},"end":{"line":214,"column":26,"offset":4179},"indent":[]}},{"type":"inlineCode","value":"graphql-tools","position":{"start":{"line":214,"column":26,"offset":4179},"end":{"line":214,"column":41,"offset":4194},"indent":[]}},{"type":"text","value":" version 4. To use another version of the library, see ","position":{"start":{"line":214,"column":41,"offset":4194},"end":{"line":214,"column":96,"offset":4249},"indent":[]}},{"type":"link","title":null,"url":"../installing-graphql-tools","children":[{"type":"text","value":"Using a different version of ","position":{"start":{"line":214,"column":97,"offset":4250},"end":{"line":214,"column":126,"offset":4279},"indent":[]}},{"type":"inlineCode","value":"graphql-tools","position":{"start":{"line":214,"column":126,"offset":4279},"end":{"line":214,"column":141,"offset":4294},"indent":[]}}],"position":{"start":{"line":214,"column":96,"offset":4249},"end":{"line":214,"column":171,"offset":4324},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":214,"column":171,"offset":4324},"end":{"line":214,"column":172,"offset":4325},"indent":[]}}],"position":{"start":{"line":214,"column":3,"offset":4156},"end":{"line":214,"column":172,"offset":4325},"indent":[]}}],"position":{"start":{"line":214,"column":1,"offset":4154},"end":{"line":214,"column":172,"offset":4325},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Example: ","position":{"start":{"line":216,"column":5,"offset":4331},"end":{"line":216,"column":14,"offset":4340},"indent":[]}},{"type":"inlineCode","value":"@deprecated","position":{"start":{"line":216,"column":14,"offset":4340},"end":{"line":216,"column":27,"offset":4353},"indent":[]}}],"position":{"start":{"line":216,"column":1,"offset":4327},"end":{"line":216,"column":27,"offset":4353},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here's a possible implementation of the default ","position":{"start":{"line":218,"column":1,"offset":4355},"end":{"line":218,"column":49,"offset":4403},"indent":[]}},{"type":"inlineCode","value":"@deprecated","position":{"start":{"line":218,"column":49,"offset":4403},"end":{"line":218,"column":62,"offset":4416},"indent":[]}},{"type":"text","value":" directive:","position":{"start":{"line":218,"column":62,"offset":4416},"end":{"line":218,"column":73,"offset":4427},"indent":[]}}],"position":{"start":{"line":218,"column":1,"offset":4355},"end":{"line":218,"column":73,"offset":4427},"indent":[]}},{"type":"code","lang":"js:title=DeprecatedDirective.js","meta":null,"value":"const { SchemaDirectiveVisitor } = require(\"apollo-server\");\n\n// Subclass of SchemaDirectiveVisitor\nexport class DeprecatedDirective extends SchemaDirectiveVisitor {\n\n  // Visitor methods:\n\n  // Called when an object field is @deprecated\n  public visitFieldDefinition(field: GraphQLField<any, any>) {\n    field.isDeprecated = true;\n    field.deprecationReason = this.args.reason;\n  }\n\n  // Called when an enum value is @deprecated\n  public visitEnumValue(value: GraphQLEnumValue) {\n    value.isDeprecated = true;\n    value.deprecationReason = this.args.reason;\n  }\n}","position":{"start":{"line":220,"column":1,"offset":4429},"end":{"line":240,"column":4,"offset":5034},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This subclass adds two fields to the executable schema's representation of a deprecated field or enum value: a boolean indicating that the item ","position":{"start":{"line":242,"column":1,"offset":5036},"end":{"line":242,"column":145,"offset":5180},"indent":[]}},{"type":"inlineCode","value":"isDeprecated","position":{"start":{"line":242,"column":145,"offset":5180},"end":{"line":242,"column":159,"offset":5194},"indent":[]}},{"type":"text","value":", and a string indicating the ","position":{"start":{"line":242,"column":159,"offset":5194},"end":{"line":242,"column":189,"offset":5224},"indent":[]}},{"type":"inlineCode","value":"deprecationReason","position":{"start":{"line":242,"column":189,"offset":5224},"end":{"line":242,"column":208,"offset":5243},"indent":[]}},{"type":"text","value":". The reason is taken directly from the directive's ","position":{"start":{"line":242,"column":208,"offset":5243},"end":{"line":242,"column":260,"offset":5295},"indent":[]}},{"type":"link","title":null,"url":"#defining","children":[{"type":"inlineCode","value":"reason","position":{"start":{"line":242,"column":261,"offset":5296},"end":{"line":242,"column":269,"offset":5304},"indent":[]}},{"type":"text","value":" argument","position":{"start":{"line":242,"column":269,"offset":5304},"end":{"line":242,"column":278,"offset":5313},"indent":[]}}],"position":{"start":{"line":242,"column":260,"offset":5295},"end":{"line":242,"column":290,"offset":5325},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":242,"column":290,"offset":5325},"end":{"line":242,"column":291,"offset":5326},"indent":[]}}],"position":{"start":{"line":242,"column":1,"offset":5036},"end":{"line":242,"column":291,"offset":5326},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To add this logic to Apollo Server, you pass the ","position":{"start":{"line":244,"column":1,"offset":5328},"end":{"line":244,"column":50,"offset":5377},"indent":[]}},{"type":"inlineCode","value":"DeprecatedDirective","position":{"start":{"line":244,"column":50,"offset":5377},"end":{"line":244,"column":71,"offset":5398},"indent":[]}},{"type":"text","value":" class to the ","position":{"start":{"line":244,"column":71,"offset":5398},"end":{"line":244,"column":85,"offset":5412},"indent":[]}},{"type":"inlineCode","value":"ApolloServer","position":{"start":{"line":244,"column":85,"offset":5412},"end":{"line":244,"column":99,"offset":5426},"indent":[]}},{"type":"text","value":" constructor via the ","position":{"start":{"line":244,"column":99,"offset":5426},"end":{"line":244,"column":120,"offset":5447},"indent":[]}},{"type":"inlineCode","value":"schemaDirectives","position":{"start":{"line":244,"column":120,"offset":5447},"end":{"line":244,"column":138,"offset":5465},"indent":[]}},{"type":"text","value":" object:","position":{"start":{"line":244,"column":138,"offset":5465},"end":{"line":244,"column":146,"offset":5473},"indent":[]}}],"position":{"start":{"line":244,"column":1,"offset":5328},"end":{"line":244,"column":146,"offset":5473},"indent":[]}},{"type":"code","lang":"js:title=index.js","meta":null,"value":"const { ApolloServer, gql } = require(\"apollo-server\");\nconst { DeprecatedDirective } = require(\"./DeprecatedDirective\");\n\nconst typeDefs = gql`\n  type ExampleType {\n    newField: String\n    oldField: String @deprecated(reason: \"Use \\`newField\\`.\")\n  }\n`;\n\nconst server = new ApolloServer({\n  typeDefs,\n  resolvers,\n  schemaDirectives: {\n    // Object key must match directive name, minus '@'\n    deprecated: DeprecatedDirective // highlight-line\n  }\n});\n\nserver.listen().then(({ url }) => {\n  console.log(`🚀 Server ready at ${url}`);\n});","position":{"start":{"line":247,"column":1,"offset":5476},"end":{"line":270,"column":4,"offset":6040},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"When Apollo Server parses your schema SDL to create your executable schema, it automatically initializes a separate ","position":{"start":{"line":272,"column":1,"offset":6042},"end":{"line":272,"column":117,"offset":6158},"indent":[]}},{"type":"inlineCode","value":"DeprecatedDirective","position":{"start":{"line":272,"column":117,"offset":6158},"end":{"line":272,"column":138,"offset":6179},"indent":[]}},{"type":"text","value":" for ","position":{"start":{"line":272,"column":138,"offset":6179},"end":{"line":272,"column":143,"offset":6184},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"each instance","position":{"start":{"line":272,"column":144,"offset":6185},"end":{"line":272,"column":157,"offset":6198},"indent":[]}}],"position":{"start":{"line":272,"column":143,"offset":6184},"end":{"line":272,"column":158,"offset":6199},"indent":[]}},{"type":"text","value":" of ","position":{"start":{"line":272,"column":158,"offset":6199},"end":{"line":272,"column":162,"offset":6203},"indent":[]}},{"type":"inlineCode","value":"@deprecated","position":{"start":{"line":272,"column":162,"offset":6203},"end":{"line":272,"column":175,"offset":6216},"indent":[]}},{"type":"text","value":" it encounters. It then calls the appropriate visitor method for the current location.","position":{"start":{"line":272,"column":175,"offset":6216},"end":{"line":272,"column":261,"offset":6302},"indent":[]}}],"position":{"start":{"line":272,"column":1,"offset":6042},"end":{"line":272,"column":261,"offset":6302},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"You can give your ","position":{"start":{"line":274,"column":3,"offset":6306},"end":{"line":274,"column":21,"offset":6324},"indent":[]}},{"type":"inlineCode","value":"SchemaDirectiveVisitor","position":{"start":{"line":274,"column":21,"offset":6324},"end":{"line":274,"column":45,"offset":6348},"indent":[]}},{"type":"text","value":" subclass any name. It doesn't need to match the name of the directive it's used for (you can even use the same subclass for multiple directives).","position":{"start":{"line":274,"column":45,"offset":6348},"end":{"line":274,"column":191,"offset":6494},"indent":[]}}],"position":{"start":{"line":274,"column":3,"offset":6306},"end":{"line":274,"column":191,"offset":6494},"indent":[]}}],"position":{"start":{"line":274,"column":1,"offset":6304},"end":{"line":274,"column":191,"offset":6494},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Running directive logic on an executable schema","position":{"start":{"line":276,"column":5,"offset":6500},"end":{"line":276,"column":52,"offset":6547},"indent":[]}}],"position":{"start":{"line":276,"column":1,"offset":6496},"end":{"line":276,"column":52,"offset":6547},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If Apollo Server has ","position":{"start":{"line":278,"column":1,"offset":6549},"end":{"line":278,"column":22,"offset":6570},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"already","position":{"start":{"line":278,"column":23,"offset":6571},"end":{"line":278,"column":30,"offset":6578},"indent":[]}}],"position":{"start":{"line":278,"column":22,"offset":6570},"end":{"line":278,"column":31,"offset":6579},"indent":[]}},{"type":"text","value":" parsed your SDL string into an executable schema, you can still execute directive logic by calling the static method ","position":{"start":{"line":278,"column":31,"offset":6579},"end":{"line":278,"column":149,"offset":6697},"indent":[]}},{"type":"inlineCode","value":"SchemaDirectiveVisitor.visitSchemaDirectives","position":{"start":{"line":278,"column":149,"offset":6697},"end":{"line":278,"column":195,"offset":6743},"indent":[]}},{"type":"text","value":". This method takes your executable schema, along the same form of directive map you provide to the ","position":{"start":{"line":278,"column":195,"offset":6743},"end":{"line":278,"column":295,"offset":6843},"indent":[]}},{"type":"inlineCode","value":"schemaDirectives","position":{"start":{"line":278,"column":295,"offset":6843},"end":{"line":278,"column":313,"offset":6861},"indent":[]}},{"type":"text","value":" constructor option:","position":{"start":{"line":278,"column":313,"offset":6861},"end":{"line":278,"column":333,"offset":6881},"indent":[]}}],"position":{"start":{"line":278,"column":1,"offset":6549},"end":{"line":278,"column":333,"offset":6881},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"SchemaDirectiveVisitor.visitSchemaDirectives(schema, {\n  deprecated: DeprecatedDirective\n});","position":{"start":{"line":280,"column":1,"offset":6883},"end":{"line":284,"column":4,"offset":6985},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Transforming resolved fields","position":{"start":{"line":286,"column":4,"offset":6990},"end":{"line":286,"column":32,"offset":7018},"indent":[]}}],"position":{"start":{"line":286,"column":1,"offset":6987},"end":{"line":286,"column":32,"offset":7018},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A custom directive can transform a resolved GraphQL field's value ","position":{"start":{"line":288,"column":1,"offset":7020},"end":{"line":288,"column":67,"offset":7086},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"before","position":{"start":{"line":288,"column":68,"offset":7087},"end":{"line":288,"column":74,"offset":7093},"indent":[]}}],"position":{"start":{"line":288,"column":67,"offset":7086},"end":{"line":288,"column":75,"offset":7094},"indent":[]}},{"type":"text","value":" it's returned to the requesting client.","position":{"start":{"line":288,"column":75,"offset":7094},"end":{"line":288,"column":115,"offset":7134},"indent":[]}}],"position":{"start":{"line":288,"column":1,"offset":7020},"end":{"line":288,"column":115,"offset":7134},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Example: Uppercasing strings","position":{"start":{"line":290,"column":5,"offset":7140},"end":{"line":290,"column":33,"offset":7168},"indent":[]}}],"position":{"start":{"line":290,"column":1,"offset":7136},"end":{"line":290,"column":33,"offset":7168},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Suppose you want to convert certain ","position":{"start":{"line":292,"column":1,"offset":7170},"end":{"line":292,"column":37,"offset":7206},"indent":[]}},{"type":"inlineCode","value":"String","position":{"start":{"line":292,"column":37,"offset":7206},"end":{"line":292,"column":45,"offset":7214},"indent":[]}},{"type":"text","value":" fields in your schema to uppercase before they're returned.","position":{"start":{"line":292,"column":45,"offset":7214},"end":{"line":292,"column":105,"offset":7274},"indent":[]}}],"position":{"start":{"line":292,"column":1,"offset":7170},"end":{"line":292,"column":105,"offset":7274},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This example defines an ","position":{"start":{"line":294,"column":1,"offset":7276},"end":{"line":294,"column":25,"offset":7300},"indent":[]}},{"type":"inlineCode","value":"@uppercase","position":{"start":{"line":294,"column":25,"offset":7300},"end":{"line":294,"column":37,"offset":7312},"indent":[]}},{"type":"text","value":" directive for this purpose:","position":{"start":{"line":294,"column":37,"offset":7312},"end":{"line":294,"column":65,"offset":7340},"indent":[]}}],"position":{"start":{"line":294,"column":1,"offset":7276},"end":{"line":294,"column":65,"offset":7340},"indent":[]}},{"type":"jsx","value":"<ExpansionPanel title=\"Click to expand\">","position":{"start":{"line":296,"column":1,"offset":7342},"end":{"line":296,"column":41,"offset":7382},"indent":[]}},{"type":"code","lang":"js:title=index.js","meta":null,"value":"const { ApolloServer, gql, SchemaDirectiveVisitor } = require(\"apollo-server\");\nconst { defaultFieldResolver } = require(\"graphql\");\n\nconst typeDefs = gql`\n  directive @uppercase on FIELD_DEFINITION\n\n  type Query {\n    hello: String @uppercase\n  }\n`;\n\nconst resolvers = {\n  Query: {\n    hello() {\n      return \"Hello World!\";\n    }\n  }\n};\n\nclass UpperCaseDirective extends SchemaDirectiveVisitor {\n\n  // Called on server startup for each @uppercase field\n  visitFieldDefinition(field) {\n\n    // Obtain the field's resolver\n    const { resolve = defaultFieldResolver } = field;\n\n    // *Replace* the field's resolver with a function\n    // that calls the *original* resolver, then converts\n    // the result to uppercase before returning\n    field.resolve = async function (...args) {\n      const result = await resolve.apply(this, args);\n      if (typeof result === \"string\") {\n        return result.toUpperCase();\n      }\n      return result;\n    };\n  }\n}\n\nconst server = new ApolloServer({\n  typeDefs,\n  resolvers,\n  schemaDirectives: {\n    upper: UpperCaseDirective,\n  }\n});\n\nserver.listen().then(({ url }) => {\n  console.log(`🚀 Server ready at ${url}`);\n});","position":{"start":{"line":298,"column":1,"offset":7384},"end":{"line":350,"column":4,"offset":8571},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</ExpansionPanel>","position":{"start":{"line":352,"column":1,"offset":8573},"end":{"line":352,"column":18,"offset":8590},"indent":[]}},{"type":"jsx","value":"<a href=\"https://codesandbox.io/s/github/apollographql/docs-examples/tree/main/custom-directives/upper-case-directive?fontsize=14&hidenavigation=1&theme=dark\">\n  <img alt=\"Edit upper-case-directive\" src=\"https://codesandbox.io/static/img/play-codesandbox.svg\"></img>\n</a>","position":{"start":{"line":354,"column":1,"offset":8592},"end":{"line":356,"column":5,"offset":8863},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This code ","position":{"start":{"line":359,"column":1,"offset":8866},"end":{"line":359,"column":11,"offset":8876},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"replaces","position":{"start":{"line":359,"column":12,"offset":8877},"end":{"line":359,"column":20,"offset":8885},"indent":[]}}],"position":{"start":{"line":359,"column":11,"offset":8876},"end":{"line":359,"column":21,"offset":8886},"indent":[]}},{"type":"text","value":" the resolver of an ","position":{"start":{"line":359,"column":21,"offset":8886},"end":{"line":359,"column":41,"offset":8906},"indent":[]}},{"type":"inlineCode","value":"@uppercase","position":{"start":{"line":359,"column":41,"offset":8906},"end":{"line":359,"column":53,"offset":8918},"indent":[]}},{"type":"text","value":" field with a new function. This new function first calls the ","position":{"start":{"line":359,"column":53,"offset":8918},"end":{"line":359,"column":115,"offset":8980},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"original","position":{"start":{"line":359,"column":116,"offset":8981},"end":{"line":359,"column":124,"offset":8989},"indent":[]}}],"position":{"start":{"line":359,"column":115,"offset":8980},"end":{"line":359,"column":125,"offset":8990},"indent":[]}},{"type":"text","value":" resolver, then transforms its result to uppercase (assuming it's a string) before returning it.","position":{"start":{"line":359,"column":125,"offset":8990},"end":{"line":359,"column":221,"offset":9086},"indent":[]}}],"position":{"start":{"line":359,"column":1,"offset":8866},"end":{"line":359,"column":221,"offset":9086},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Example: Formatting dates","position":{"start":{"line":361,"column":5,"offset":9092},"end":{"line":361,"column":30,"offset":9117},"indent":[]}}],"position":{"start":{"line":361,"column":1,"offset":9088},"end":{"line":361,"column":30,"offset":9117},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Suppose your schema defines a ","position":{"start":{"line":363,"column":1,"offset":9119},"end":{"line":363,"column":31,"offset":9149},"indent":[]}},{"type":"inlineCode","value":"Date","position":{"start":{"line":363,"column":31,"offset":9149},"end":{"line":363,"column":37,"offset":9155},"indent":[]}},{"type":"text","value":" custom scalar, and you want querying clients to be able to specify a string format for the returned date (e.g., specify ","position":{"start":{"line":363,"column":37,"offset":9155},"end":{"line":363,"column":158,"offset":9276},"indent":[]}},{"type":"inlineCode","value":"dd/mm/yyyy HH:MM:ss","position":{"start":{"line":363,"column":158,"offset":9276},"end":{"line":363,"column":179,"offset":9297},"indent":[]}},{"type":"text","value":" for a string like ","position":{"start":{"line":363,"column":179,"offset":9297},"end":{"line":363,"column":198,"offset":9316},"indent":[]}},{"type":"inlineCode","value":"10/03/2021 14:53:03","position":{"start":{"line":363,"column":198,"offset":9316},"end":{"line":363,"column":219,"offset":9337},"indent":[]}},{"type":"text","value":").","position":{"start":{"line":363,"column":219,"offset":9337},"end":{"line":363,"column":221,"offset":9339},"indent":[]}}],"position":{"start":{"line":363,"column":1,"offset":9119},"end":{"line":363,"column":221,"offset":9339},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This example defines a ","position":{"start":{"line":365,"column":1,"offset":9341},"end":{"line":365,"column":24,"offset":9364},"indent":[]}},{"type":"inlineCode","value":"@date","position":{"start":{"line":365,"column":24,"offset":9364},"end":{"line":365,"column":31,"offset":9371},"indent":[]}},{"type":"text","value":" directive for this purpose:","position":{"start":{"line":365,"column":31,"offset":9371},"end":{"line":365,"column":59,"offset":9399},"indent":[]}}],"position":{"start":{"line":365,"column":1,"offset":9341},"end":{"line":365,"column":59,"offset":9399},"indent":[]}},{"type":"jsx","value":"<ExpansionPanel title=\"Click to expand\">","position":{"start":{"line":367,"column":1,"offset":9401},"end":{"line":367,"column":41,"offset":9441},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const { ApolloServer, gql, SchemaDirectiveVisitor } = require('apollo-server');\nconst { defaultFieldResolver } = require('graphql');\nconst formatDate = require('dateformat');\n\nconst typeDefs = gql`\n\n  # Define the directive with a default date format\n  directive @date(\n    defaultFormat: String = \"dd/mm/yyyy HH:MM:ss\"\n  ) on FIELD_DEFINITION\n\n  scalar Date\n\n  type Post {\n    # You can override the defaultFormat for individual fields\n    published: Date @date(defaultFormat: \"dd/mm/yyyy\")\n  }\n`;\n\nclass FormattableDateDirective extends SchemaDirectiveVisitor {\n  public visitFieldDefinition(field) {\n\n    // Get the field's resolver\n    const { resolve = defaultFieldResolver } = field;\n\n    // Get the default date format\n    const { defaultFormat } = this.args;\n\n    // *Add* a `format` argument to the GraphQL field for\n    // clients to use\n    field.args.push({\n      name: 'format',\n      type: GraphQLString\n    });\n\n    // *Replace* the field's resolver with this function, which\n    // first calls the *original* resolver, then formats the\n    // returned date\n    field.resolve = async function (\n      source,\n      { format, ...otherArgs },\n      context,\n      info,\n    ) {\n      const date = await resolve.call(this, source, otherArgs, context, info);\n      // If the client does not specify a format, use defaultFormat\n      return formatDate(date, format || defaultFormat);\n    };\n\n    // The field now returns a String instead of a Date.\n    // Update it accordingly.\n    field.type = GraphQLString;\n  }\n}\n\nconst server = new ApolloServer({\n  typeDefs,\n  schemaDirectives: {\n    date: FormattableDateDirective\n  }\n});\n\nserver.listen().then(({ url }) => {\n  console.log(`🚀 Server ready at ${url}`);\n});","position":{"start":{"line":369,"column":1,"offset":9443},"end":{"line":435,"column":4,"offset":11176},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</ExpansionPanel>","position":{"start":{"line":437,"column":1,"offset":11178},"end":{"line":437,"column":18,"offset":11195},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Now the client can specify a desired ","position":{"start":{"line":439,"column":1,"offset":11197},"end":{"line":439,"column":38,"offset":11234},"indent":[]}},{"type":"inlineCode","value":"format","position":{"start":{"line":439,"column":38,"offset":11234},"end":{"line":439,"column":46,"offset":11242},"indent":[]}},{"type":"text","value":" argument when requesting the ","position":{"start":{"line":439,"column":46,"offset":11242},"end":{"line":439,"column":76,"offset":11272},"indent":[]}},{"type":"inlineCode","value":"Post.published","position":{"start":{"line":439,"column":76,"offset":11272},"end":{"line":439,"column":92,"offset":11288},"indent":[]}},{"type":"text","value":" field, or omit the argument to use the ","position":{"start":{"line":439,"column":92,"offset":11288},"end":{"line":439,"column":132,"offset":11328},"indent":[]}},{"type":"inlineCode","value":"defaultFormat","position":{"start":{"line":439,"column":132,"offset":11328},"end":{"line":439,"column":147,"offset":11343},"indent":[]}},{"type":"text","value":" string specified in the schema.","position":{"start":{"line":439,"column":147,"offset":11343},"end":{"line":439,"column":179,"offset":11375},"indent":[]}}],"position":{"start":{"line":439,"column":1,"offset":11197},"end":{"line":439,"column":179,"offset":11375},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Additional examples","position":{"start":{"line":441,"column":4,"offset":11380},"end":{"line":441,"column":23,"offset":11399},"indent":[]}}],"position":{"start":{"line":441,"column":1,"offset":11377},"end":{"line":441,"column":23,"offset":11399},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Fetching data from a REST API","position":{"start":{"line":443,"column":5,"offset":11405},"end":{"line":443,"column":34,"offset":11434},"indent":[]}}],"position":{"start":{"line":443,"column":1,"offset":11401},"end":{"line":443,"column":34,"offset":11434},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Suppose you've defined an object type that corresponds to a ","position":{"start":{"line":445,"column":1,"offset":11436},"end":{"line":445,"column":61,"offset":11496},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Representational_state_transfer","children":[{"type":"text","value":"REST","position":{"start":{"line":445,"column":62,"offset":11497},"end":{"line":445,"column":66,"offset":11501},"indent":[]}}],"position":{"start":{"line":445,"column":61,"offset":11496},"end":{"line":445,"column":130,"offset":11565},"indent":[]}},{"type":"text","value":" resource, and you want to avoid implementing resolver functions for every field:","position":{"start":{"line":445,"column":130,"offset":11565},"end":{"line":445,"column":211,"offset":11646},"indent":[]}}],"position":{"start":{"line":445,"column":1,"offset":11436},"end":{"line":445,"column":211,"offset":11646},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const { ApolloServer, gql, SchemaDirectiveVisitor } = require(\"apollo-server\");\n\nconst typeDefs = gql`\n  directive @rest(url: String) on FIELD_DEFINITION\n\n  type Query {\n    people: [Person] @rest(url: \"/api/v1/people\")\n  }\n`;\n\nclass RestDirective extends SchemaDirectiveVisitor {\n  public visitFieldDefinition(field) {\n    const { url } = this.args;\n    field.resolve = () => fetch(url);\n  }\n}\n\nconst server = new ApolloServer({\n  typeDefs,\n  schemaDirectives: {\n    rest: RestDirective\n  }\n});\n\nserver.listen().then(({ url }) => {\n  console.log(`🚀 Server ready at ${url}`);\n});","position":{"start":{"line":447,"column":1,"offset":11648},"end":{"line":475,"column":4,"offset":12238},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"There are many more issues to consider when implementing a real GraphQL wrapper over a REST endpoint (such as how to do caching or pagination), but this example demonstrates the basic structure.","position":{"start":{"line":477,"column":1,"offset":12240},"end":{"line":477,"column":195,"offset":12434},"indent":[]}}],"position":{"start":{"line":477,"column":1,"offset":12240},"end":{"line":477,"column":195,"offset":12434},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Marking strings for internationalization","position":{"start":{"line":480,"column":5,"offset":12441},"end":{"line":480,"column":45,"offset":12481},"indent":[]}}],"position":{"start":{"line":480,"column":1,"offset":12437},"end":{"line":480,"column":45,"offset":12481},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Suppose you have a function called ","position":{"start":{"line":482,"column":1,"offset":12483},"end":{"line":482,"column":36,"offset":12518},"indent":[]}},{"type":"inlineCode","value":"translate","position":{"start":{"line":482,"column":36,"offset":12518},"end":{"line":482,"column":47,"offset":12529},"indent":[]}},{"type":"text","value":" that takes a string, a path identifying that string's role in your application, and a target locale for the translation.","position":{"start":{"line":482,"column":47,"offset":12529},"end":{"line":482,"column":168,"offset":12650},"indent":[]}}],"position":{"start":{"line":482,"column":1,"offset":12483},"end":{"line":482,"column":168,"offset":12650},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here's how you might make sure ","position":{"start":{"line":484,"column":1,"offset":12652},"end":{"line":484,"column":32,"offset":12683},"indent":[]}},{"type":"inlineCode","value":"translate","position":{"start":{"line":484,"column":32,"offset":12683},"end":{"line":484,"column":43,"offset":12694},"indent":[]}},{"type":"text","value":" is used to localize the ","position":{"start":{"line":484,"column":43,"offset":12694},"end":{"line":484,"column":68,"offset":12719},"indent":[]}},{"type":"inlineCode","value":"greeting","position":{"start":{"line":484,"column":68,"offset":12719},"end":{"line":484,"column":78,"offset":12729},"indent":[]}},{"type":"text","value":" field of a ","position":{"start":{"line":484,"column":78,"offset":12729},"end":{"line":484,"column":90,"offset":12741},"indent":[]}},{"type":"inlineCode","value":"Query","position":{"start":{"line":484,"column":90,"offset":12741},"end":{"line":484,"column":97,"offset":12748},"indent":[]}},{"type":"text","value":" type:","position":{"start":{"line":484,"column":97,"offset":12748},"end":{"line":484,"column":103,"offset":12754},"indent":[]}}],"position":{"start":{"line":484,"column":1,"offset":12652},"end":{"line":484,"column":103,"offset":12754},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const { ApolloServer, gql, SchemaDirectiveVisitor } = require(\"apollo-server\");\nconst { defaultFieldResolver } = require('graphql');\n\nconst typeDefs = gql`\n  directive @intl on FIELD_DEFINITION\n\n  type Query {\n    greeting: String @intl\n  }\n`;\n\nclass IntlDirective extends SchemaDirectiveVisitor {\n  visitFieldDefinition(field, details) {\n    const { resolve = defaultFieldResolver } = field;\n    field.resolve = async function (...args) {\n      const context = args[2];\n      const defaultText = await resolve.apply(this, args);\n      // In this example, path would be [\"Query\", \"greeting\"]:\n      const path = [details.objectType.name, field.name];\n      return translate(defaultText, path, context.locale);\n    };\n  }\n}\n\nconst server = new ApolloServer({\n  typeDefs,\n  schemaDirectives: {\n    intl: IntlDirective\n  }\n});\n\nserver.listen().then(({ url }) => {\n  console.log(`🚀 Server ready at ${url}`);\n});","position":{"start":{"line":486,"column":1,"offset":12756},"end":{"line":521,"column":4,"offset":13674},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"GraphQL is great for internationalization, since a GraphQL server can access unlimited translation data, and clients can simply ask for the translations they need.","position":{"start":{"line":523,"column":1,"offset":13676},"end":{"line":523,"column":164,"offset":13839},"indent":[]}}],"position":{"start":{"line":523,"column":1,"offset":13676},"end":{"line":523,"column":164,"offset":13839},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Enforcing access permissions","position":{"start":{"line":525,"column":5,"offset":13845},"end":{"line":525,"column":33,"offset":13873},"indent":[]}}],"position":{"start":{"line":525,"column":1,"offset":13841},"end":{"line":525,"column":33,"offset":13873},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Imagine a hypothetical ","position":{"start":{"line":527,"column":1,"offset":13875},"end":{"line":527,"column":24,"offset":13898},"indent":[]}},{"type":"inlineCode","value":"@auth","position":{"start":{"line":527,"column":24,"offset":13898},"end":{"line":527,"column":31,"offset":13905},"indent":[]}},{"type":"text","value":" directive that takes an argument ","position":{"start":{"line":527,"column":31,"offset":13905},"end":{"line":527,"column":65,"offset":13939},"indent":[]}},{"type":"inlineCode","value":"requires","position":{"start":{"line":527,"column":65,"offset":13939},"end":{"line":527,"column":75,"offset":13949},"indent":[]}},{"type":"text","value":" of type ","position":{"start":{"line":527,"column":75,"offset":13949},"end":{"line":527,"column":84,"offset":13958},"indent":[]}},{"type":"inlineCode","value":"Role","position":{"start":{"line":527,"column":84,"offset":13958},"end":{"line":527,"column":90,"offset":13964},"indent":[]}},{"type":"text","value":", which defaults to ","position":{"start":{"line":527,"column":90,"offset":13964},"end":{"line":527,"column":110,"offset":13984},"indent":[]}},{"type":"inlineCode","value":"ADMIN","position":{"start":{"line":527,"column":110,"offset":13984},"end":{"line":527,"column":117,"offset":13991},"indent":[]}},{"type":"text","value":". This ","position":{"start":{"line":527,"column":117,"offset":13991},"end":{"line":527,"column":124,"offset":13998},"indent":[]}},{"type":"inlineCode","value":"@auth","position":{"start":{"line":527,"column":124,"offset":13998},"end":{"line":527,"column":131,"offset":14005},"indent":[]}},{"type":"text","value":" directive can appear on an ","position":{"start":{"line":527,"column":131,"offset":14005},"end":{"line":527,"column":159,"offset":14033},"indent":[]}},{"type":"inlineCode","value":"OBJECT","position":{"start":{"line":527,"column":159,"offset":14033},"end":{"line":527,"column":167,"offset":14041},"indent":[]}},{"type":"text","value":" like ","position":{"start":{"line":527,"column":167,"offset":14041},"end":{"line":527,"column":173,"offset":14047},"indent":[]}},{"type":"inlineCode","value":"User","position":{"start":{"line":527,"column":173,"offset":14047},"end":{"line":527,"column":179,"offset":14053},"indent":[]}},{"type":"text","value":" to set default access permissions for all ","position":{"start":{"line":527,"column":179,"offset":14053},"end":{"line":527,"column":222,"offset":14096},"indent":[]}},{"type":"inlineCode","value":"User","position":{"start":{"line":527,"column":222,"offset":14096},"end":{"line":527,"column":228,"offset":14102},"indent":[]}},{"type":"text","value":" fields, as well as appearing on individual fields, to enforce field-specific ","position":{"start":{"line":527,"column":228,"offset":14102},"end":{"line":527,"column":306,"offset":14180},"indent":[]}},{"type":"inlineCode","value":"@auth","position":{"start":{"line":527,"column":306,"offset":14180},"end":{"line":527,"column":313,"offset":14187},"indent":[]}},{"type":"text","value":" restrictions:","position":{"start":{"line":527,"column":313,"offset":14187},"end":{"line":527,"column":327,"offset":14201},"indent":[]}}],"position":{"start":{"line":527,"column":1,"offset":13875},"end":{"line":527,"column":327,"offset":14201},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"directive @auth(\n  requires: Role = ADMIN,\n) on OBJECT | FIELD_DEFINITION\n\nenum Role {\n  ADMIN\n  REVIEWER\n  USER\n  UNKNOWN\n}\n\ntype User @auth(requires: USER) {\n  name: String\n  banned: Boolean @auth(requires: ADMIN)\n  canPost: Boolean @auth(requires: REVIEWER)\n}","position":{"start":{"line":529,"column":1,"offset":14203},"end":{"line":546,"column":4,"offset":14480},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"What makes this example tricky is that the ","position":{"start":{"line":548,"column":1,"offset":14482},"end":{"line":548,"column":44,"offset":14525},"indent":[]}},{"type":"inlineCode","value":"OBJECT","position":{"start":{"line":548,"column":44,"offset":14525},"end":{"line":548,"column":52,"offset":14533},"indent":[]}},{"type":"text","value":" version of the directive needs to wrap all fields of the object, even though some of those fields may be individually wrapped by ","position":{"start":{"line":548,"column":52,"offset":14533},"end":{"line":548,"column":182,"offset":14663},"indent":[]}},{"type":"inlineCode","value":"@auth","position":{"start":{"line":548,"column":182,"offset":14663},"end":{"line":548,"column":189,"offset":14670},"indent":[]}},{"type":"text","value":" directives at the ","position":{"start":{"line":548,"column":189,"offset":14670},"end":{"line":548,"column":208,"offset":14689},"indent":[]}},{"type":"inlineCode","value":"FIELD_DEFINITION","position":{"start":{"line":548,"column":208,"offset":14689},"end":{"line":548,"column":226,"offset":14707},"indent":[]}},{"type":"text","value":" level, and we would prefer not to rewrap resolvers if we can help it:","position":{"start":{"line":548,"column":226,"offset":14707},"end":{"line":548,"column":296,"offset":14777},"indent":[]}}],"position":{"start":{"line":548,"column":1,"offset":14482},"end":{"line":548,"column":296,"offset":14777},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const { ApolloServer, gql, SchemaDirectiveVisitor } = require(\"apollo-server\");\nconst { defaultFieldResolver } = require('graphql');\n\nclass AuthDirective extends SchemaDirectiveVisitor {\n  visitObject(type) {\n    this.ensureFieldsWrapped(type);\n    type._requiredAuthRole = this.args.requires;\n  }\n  // Visitor methods for nested types like fields and arguments\n  // also receive a details object that provides information about\n  // the parent and grandparent types.\n  visitFieldDefinition(field, details) {\n    this.ensureFieldsWrapped(details.objectType);\n    field._requiredAuthRole = this.args.requires;\n  }\n\n  ensureFieldsWrapped(objectType) {\n    // Mark the GraphQLObjectType object to avoid re-wrapping:\n    if (objectType._authFieldsWrapped) return;\n    objectType._authFieldsWrapped = true;\n\n    const fields = objectType.getFields();\n\n    Object.keys(fields).forEach(fieldName => {\n      const field = fields[fieldName];\n      const { resolve = defaultFieldResolver } = field;\n      field.resolve = async function (...args) {\n        // Get the required Role from the field first, falling back\n        // to the objectType if no Role is required by the field:\n        const requiredRole =\n          field._requiredAuthRole ||\n          objectType._requiredAuthRole;\n\n        if (! requiredRole) {\n          return resolve.apply(this, args);\n        }\n\n        const context = args[2];\n        const user = await getUser(context.headers.authToken);\n        if (! user.hasRole(requiredRole)) {\n          throw new Error(\"not authorized\");\n        }\n\n        return resolve.apply(this, args);\n      };\n    });\n  }\n}\n\nconst server = new ApolloServer({\n  typeDefs,\n  schemaDirectives: {\n    auth: AuthDirective,\n    authorized: AuthDirective,\n    authenticated: AuthDirective\n  }\n});\n\nserver.listen().then(({ url }) => {\n  console.log(`🚀 Server ready at ${url}`);\n});","position":{"start":{"line":550,"column":1,"offset":14779},"end":{"line":612,"column":4,"offset":16664},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"One drawback of this approach is that it does not guarantee fields will be wrapped if they are added to the schema after ","position":{"start":{"line":614,"column":1,"offset":16666},"end":{"line":614,"column":122,"offset":16787},"indent":[]}},{"type":"inlineCode","value":"AuthDirective","position":{"start":{"line":614,"column":122,"offset":16787},"end":{"line":614,"column":137,"offset":16802},"indent":[]}},{"type":"text","value":" is applied, and the whole ","position":{"start":{"line":614,"column":137,"offset":16802},"end":{"line":614,"column":164,"offset":16829},"indent":[]}},{"type":"inlineCode","value":"getUser(context.headers.authToken)","position":{"start":{"line":614,"column":164,"offset":16829},"end":{"line":614,"column":200,"offset":16865},"indent":[]}},{"type":"text","value":" is a made-up API that would need to be fleshed out. In other words, we’ve glossed over some of the details that would be required for a production-ready implementation of this directive, though we hope the basic structure shown here inspires you to find clever solutions to the remaining problems.","position":{"start":{"line":614,"column":200,"offset":16865},"end":{"line":614,"column":498,"offset":17163},"indent":[]}}],"position":{"start":{"line":614,"column":1,"offset":16666},"end":{"line":614,"column":498,"offset":17163},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Enforcing value restrictions","position":{"start":{"line":616,"column":5,"offset":17169},"end":{"line":616,"column":33,"offset":17197},"indent":[]}}],"position":{"start":{"line":616,"column":1,"offset":17165},"end":{"line":616,"column":33,"offset":17197},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Suppose you want to enforce a maximum length for a string-valued field:","position":{"start":{"line":618,"column":1,"offset":17199},"end":{"line":618,"column":72,"offset":17270},"indent":[]}}],"position":{"start":{"line":618,"column":1,"offset":17199},"end":{"line":618,"column":72,"offset":17270},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const { ApolloServer, gql, SchemaDirectiveVisitor } = require('apollo-server');\nconst { GraphQLScalarType, GraphQLNonNull } = require('graphql');\n\nconst typeDefs = gql`\n  directive @length(max: Int) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION\n\n  type Query {\n    books: [Book]\n  }\n\n  type Book {\n    title: String @length(max: 50)\n  }\n\n  type Mutation {\n    createBook(book: BookInput): Book\n  }\n\n  input BookInput {\n    title: String! @length(max: 50)\n  }\n`;\n\nclass LengthDirective extends SchemaDirectiveVisitor {\n  visitInputFieldDefinition(field) {\n    this.wrapType(field);\n  }\n\n  visitFieldDefinition(field) {\n    this.wrapType(field);\n  }\n\n  // Replace field.type with a custom GraphQLScalarType that enforces the\n  // length restriction.\n  wrapType(field) {\n    if (\n      field.type instanceof GraphQLNonNull &&\n      field.type.ofType instanceof GraphQLScalarType\n    ) {\n      field.type = new GraphQLNonNull(\n        new LimitedLengthType(field.type.ofType, this.args.max),\n      );\n    } else if (field.type instanceof GraphQLScalarType) {\n      field.type = new LimitedLengthType(field.type, this.args.max);\n    } else {\n      throw new Error(`Not a scalar type: ${field.type}`);\n    }\n  }\n}\n\nclass LimitedLengthType extends GraphQLScalarType {\n  constructor(type, maxLength) {\n    super({\n      name: `LengthAtMost${maxLength}`,\n\n      // For more information about GraphQLScalar type (de)serialization,\n      // see the graphql-js implementation:\n      // https://github.com/graphql/graphql-js/blob/31ae8a8e8312/src/type/definition.js#L425-L446\n\n      serialize(value) {\n        value = type.serialize(value);\n        assert.isAtMost(value.length, maxLength);\n        return value;\n      },\n\n      parseValue(value) {\n        return type.parseValue(value);\n      },\n\n      parseLiteral(ast) {\n        return type.parseLiteral(ast);\n      },\n    });\n  }\n}\n\nconst server = new ApolloServer({\n  typeDefs,\n  resolvers,\n  schemaDirectives: {\n    length: LengthDirective,\n  },\n});\n\nserver.listen().then(({ url }) => {\n  console.log(`🚀 Server ready at ${url}`);\n});","position":{"start":{"line":620,"column":1,"offset":17272},"end":{"line":708,"column":4,"offset":19358},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Synthesizing unique IDs","position":{"start":{"line":710,"column":5,"offset":19364},"end":{"line":710,"column":28,"offset":19387},"indent":[]}}],"position":{"start":{"line":710,"column":1,"offset":19360},"end":{"line":710,"column":28,"offset":19387},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Suppose your database uses incrementing IDs for each resource type, so IDs are not unique across all resource types. Here’s how you might synthesize a field called ","position":{"start":{"line":712,"column":1,"offset":19389},"end":{"line":712,"column":165,"offset":19553},"indent":[]}},{"type":"inlineCode","value":"uid","position":{"start":{"line":712,"column":165,"offset":19553},"end":{"line":712,"column":170,"offset":19558},"indent":[]}},{"type":"text","value":" that combines the object type with various field values to produce an ID that’s unique across your schema:","position":{"start":{"line":712,"column":170,"offset":19558},"end":{"line":712,"column":277,"offset":19665},"indent":[]}}],"position":{"start":{"line":712,"column":1,"offset":19389},"end":{"line":712,"column":277,"offset":19665},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const { ApolloServer, gql, SchemaDirectiveVisitor } = require(\"apollo-server\");\nconst { GraphQLID } = require(\"graphql\");\nconst { createHash } = require(\"crypto\");\n\nconst typeDefs = gql`\n  directive @uniqueID(\n    # The name of the new ID field, \"uid\" by default:\n    name: String = \"uid\"\n\n    # Which fields to include in the new ID:\n    from: [String] = [\"id\"]\n  ) on OBJECT\n\n  # Since this type just uses the default values of name and from,\n  # we don't have to pass any arguments to the directive:\n  type Location @uniqueID {\n    id: Int\n    address: String\n  }\n\n  # This type uses both the person's name and the personID field,\n  # in addition to the \"Person\" type name, to construct the ID:\n  type Person @uniqueID(from: [\"name\", \"personID\"]) {\n    personID: Int\n    name: String\n  }\n`;\n\nclass UniqueIdDirective extends SchemaDirectiveVisitor {\n  visitObject(type) {\n    const { name, from } = this.args;\n    const fields = type.getFields();\n    if (name in fields) {\n      throw new Error(`Conflicting field name ${name}`);\n    }\n    fields[name] = {\n      name,\n      type: GraphQLID,\n      description: 'Unique ID',\n      args: [],\n      resolve(object) {\n        const hash = createHash(\"sha1\");\n        hash.update(type.name);\n        from.forEach(fieldName => {\n          hash.update(String(object[fieldName]));\n        });\n        return hash.digest(\"hex\");\n      }\n    };\n  }\n}\n\nconst server = new ApolloServer({\n  typeDefs,\n  resolvers,\n  schemaDirectives: {\n    uniqueID: UniqueIdDirective\n  }\n});\n\nserver.listen().then(({ url }) => {\n  console.log(`🚀 Server ready at ${url}`);\n});","position":{"start":{"line":714,"column":1,"offset":19667},"end":{"line":778,"column":4,"offset":21276},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Declaring schema directives","position":{"start":{"line":780,"column":4,"offset":21281},"end":{"line":780,"column":31,"offset":21308},"indent":[]}}],"position":{"start":{"line":780,"column":1,"offset":21278},"end":{"line":780,"column":31,"offset":21308},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"While the above examples should be sufficient to implement any ","position":{"start":{"line":782,"column":1,"offset":21310},"end":{"line":782,"column":64,"offset":21373},"indent":[]}},{"type":"inlineCode","value":"@directive","position":{"start":{"line":782,"column":64,"offset":21373},"end":{"line":782,"column":76,"offset":21385},"indent":[]}},{"type":"text","value":" used in your schema, SDL syntax also supports declaring the names, argument types, default argument values, and permissible locations of any available directives:","position":{"start":{"line":782,"column":76,"offset":21385},"end":{"line":782,"column":239,"offset":21548},"indent":[]}}],"position":{"start":{"line":782,"column":1,"offset":21310},"end":{"line":782,"column":239,"offset":21548},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"directive @auth(\n  requires: Role = ADMIN,\n) on OBJECT | FIELD_DEFINITION\n\nenum Role {\n  ADMIN\n  REVIEWER\n  USER\n  UNKNOWN\n}\n\ntype User @auth(requires: USER) {\n  name: String\n  banned: Boolean @auth(requires: ADMIN)\n  canPost: Boolean @auth(requires: REVIEWER)\n}","position":{"start":{"line":784,"column":1,"offset":21550},"end":{"line":801,"column":4,"offset":21822},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This hypothetical ","position":{"start":{"line":803,"column":1,"offset":21824},"end":{"line":803,"column":19,"offset":21842},"indent":[]}},{"type":"inlineCode","value":"@auth","position":{"start":{"line":803,"column":19,"offset":21842},"end":{"line":803,"column":26,"offset":21849},"indent":[]}},{"type":"text","value":" directive takes an argument named ","position":{"start":{"line":803,"column":26,"offset":21849},"end":{"line":803,"column":61,"offset":21884},"indent":[]}},{"type":"inlineCode","value":"requires","position":{"start":{"line":803,"column":61,"offset":21884},"end":{"line":803,"column":71,"offset":21894},"indent":[]}},{"type":"text","value":" of type ","position":{"start":{"line":803,"column":71,"offset":21894},"end":{"line":803,"column":80,"offset":21903},"indent":[]}},{"type":"inlineCode","value":"Role","position":{"start":{"line":803,"column":80,"offset":21903},"end":{"line":803,"column":86,"offset":21909},"indent":[]}},{"type":"text","value":", which defaults to ","position":{"start":{"line":803,"column":86,"offset":21909},"end":{"line":803,"column":106,"offset":21929},"indent":[]}},{"type":"inlineCode","value":"ADMIN","position":{"start":{"line":803,"column":106,"offset":21929},"end":{"line":803,"column":113,"offset":21936},"indent":[]}},{"type":"text","value":" if ","position":{"start":{"line":803,"column":113,"offset":21936},"end":{"line":803,"column":117,"offset":21940},"indent":[]}},{"type":"inlineCode","value":"@auth","position":{"start":{"line":803,"column":117,"offset":21940},"end":{"line":803,"column":124,"offset":21947},"indent":[]}},{"type":"text","value":" is used without passing an explicit ","position":{"start":{"line":803,"column":124,"offset":21947},"end":{"line":803,"column":161,"offset":21984},"indent":[]}},{"type":"inlineCode","value":"requires","position":{"start":{"line":803,"column":161,"offset":21984},"end":{"line":803,"column":171,"offset":21994},"indent":[]}},{"type":"text","value":" argument. The ","position":{"start":{"line":803,"column":171,"offset":21994},"end":{"line":803,"column":186,"offset":22009},"indent":[]}},{"type":"inlineCode","value":"@auth","position":{"start":{"line":803,"column":186,"offset":22009},"end":{"line":803,"column":193,"offset":22016},"indent":[]}},{"type":"text","value":" directive can appear on an ","position":{"start":{"line":803,"column":193,"offset":22016},"end":{"line":803,"column":221,"offset":22044},"indent":[]}},{"type":"inlineCode","value":"OBJECT","position":{"start":{"line":803,"column":221,"offset":22044},"end":{"line":803,"column":229,"offset":22052},"indent":[]}},{"type":"text","value":" like ","position":{"start":{"line":803,"column":229,"offset":22052},"end":{"line":803,"column":235,"offset":22058},"indent":[]}},{"type":"inlineCode","value":"User","position":{"start":{"line":803,"column":235,"offset":22058},"end":{"line":803,"column":241,"offset":22064},"indent":[]}},{"type":"text","value":" to set a default access control for all ","position":{"start":{"line":803,"column":241,"offset":22064},"end":{"line":803,"column":282,"offset":22105},"indent":[]}},{"type":"inlineCode","value":"User","position":{"start":{"line":803,"column":282,"offset":22105},"end":{"line":803,"column":288,"offset":22111},"indent":[]}},{"type":"text","value":" fields, and also on individual fields, to enforce field-specific ","position":{"start":{"line":803,"column":288,"offset":22111},"end":{"line":803,"column":354,"offset":22177},"indent":[]}},{"type":"inlineCode","value":"@auth","position":{"start":{"line":803,"column":354,"offset":22177},"end":{"line":803,"column":361,"offset":22184},"indent":[]}},{"type":"text","value":" restrictions.","position":{"start":{"line":803,"column":361,"offset":22184},"end":{"line":803,"column":375,"offset":22198},"indent":[]}}],"position":{"start":{"line":803,"column":1,"offset":21824},"end":{"line":803,"column":375,"offset":22198},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Enforcing the requirements of the declaration is something a ","position":{"start":{"line":805,"column":1,"offset":22200},"end":{"line":805,"column":62,"offset":22261},"indent":[]}},{"type":"inlineCode","value":"SchemaDirectiveVisitor","position":{"start":{"line":805,"column":62,"offset":22261},"end":{"line":805,"column":86,"offset":22285},"indent":[]}},{"type":"text","value":" implementation could do itself, in theory, but the SDL syntax is easer to read and write, and provides value even if you're not using the ","position":{"start":{"line":805,"column":86,"offset":22285},"end":{"line":805,"column":225,"offset":22424},"indent":[]}},{"type":"inlineCode","value":"SchemaDirectiveVisitor","position":{"start":{"line":805,"column":225,"offset":22424},"end":{"line":805,"column":249,"offset":22448},"indent":[]}},{"type":"text","value":" abstraction.","position":{"start":{"line":805,"column":249,"offset":22448},"end":{"line":805,"column":262,"offset":22461},"indent":[]}}],"position":{"start":{"line":805,"column":1,"offset":22200},"end":{"line":805,"column":262,"offset":22461},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"However, if you're implementing a reusable ","position":{"start":{"line":807,"column":1,"offset":22463},"end":{"line":807,"column":44,"offset":22506},"indent":[]}},{"type":"inlineCode","value":"SchemaDirectiveVisitor","position":{"start":{"line":807,"column":44,"offset":22506},"end":{"line":807,"column":68,"offset":22530},"indent":[]}},{"type":"text","value":" for public consumption, you will probably not be the person writing the SDL syntax, so you may not have control over which directives the schema author decides to declare, and how. That's why a well-implemented, reusable ","position":{"start":{"line":807,"column":68,"offset":22530},"end":{"line":807,"column":290,"offset":22752},"indent":[]}},{"type":"inlineCode","value":"SchemaDirectiveVisitor","position":{"start":{"line":807,"column":290,"offset":22752},"end":{"line":807,"column":314,"offset":22776},"indent":[]}},{"type":"text","value":" should consider overriding the ","position":{"start":{"line":807,"column":314,"offset":22776},"end":{"line":807,"column":346,"offset":22808},"indent":[]}},{"type":"inlineCode","value":"getDirectiveDeclaration","position":{"start":{"line":807,"column":346,"offset":22808},"end":{"line":807,"column":371,"offset":22833},"indent":[]}},{"type":"text","value":" method:","position":{"start":{"line":807,"column":371,"offset":22833},"end":{"line":807,"column":379,"offset":22841},"indent":[]}}],"position":{"start":{"line":807,"column":1,"offset":22463},"end":{"line":807,"column":379,"offset":22841},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const { ApolloServer, gql, SchemaDirectiveVisitor } = require(\"apollo-server\");\nconst { DirectiveLocation, GraphQLDirective, GraphQLEnumType } = require(\"graphql\");\n\nclass AuthDirective extends SchemaDirectiveVisitor {\n  public visitObject(object: GraphQLObjectType) {...}\n  public visitFieldDefinition(field: GraphQLField<any, any>) {...}\n\n  public static getDirectiveDeclaration(\n    directiveName: string,\n    schema: GraphQLSchema,\n  ): GraphQLDirective {\n    const previousDirective = schema.getDirective(directiveName);\n    if (previousDirective) {\n      // If a previous directive declaration exists in the schema, it may be\n      // better to modify it than to return a new GraphQLDirective object.\n      previousDirective.args.forEach(arg => {\n        if (arg.name === 'requires') {\n          // Lower the default minimum Role from ADMIN to REVIEWER.\n          arg.defaultValue = 'REVIEWER';\n        }\n      });\n\n      return previousDirective;\n    }\n\n    // If a previous directive with this name was not found in the schema,\n    // there are several options:\n    //\n    // 1. Construct a new GraphQLDirective (see below).\n    // 2. Throw an exception to force the client to declare the directive.\n    // 3. Return null, and forget about declaring this directive.\n    //\n    // All three are valid options, since the visitor will still work without\n    // any declared directives. In fact, unless you're publishing a directive\n    // implementation for public consumption, you can probably just ignore\n    // getDirectiveDeclaration altogether.\n\n    return new GraphQLDirective({\n      name: directiveName,\n      locations: [\n        DirectiveLocation.OBJECT,\n        DirectiveLocation.FIELD_DEFINITION,\n      ],\n      args: {\n        requires: {\n          // Having the schema available here is important for obtaining\n          // references to existing type objects, such as the Role enum.\n          type: (schema.getType('Role') as GraphQLEnumType),\n          // Set the default minimum Role to REVIEWER.\n          defaultValue: 'REVIEWER',\n        }\n      }]\n    });\n  }\n}","position":{"start":{"line":809,"column":1,"offset":22843},"end":{"line":865,"column":4,"offset":24940},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":867,"column":1,"offset":24942},"end":{"line":867,"column":11,"offset":24952},"indent":[]}},{"type":"inlineCode","value":"getDirectiveDeclaration","position":{"start":{"line":867,"column":11,"offset":24952},"end":{"line":867,"column":36,"offset":24977},"indent":[]}},{"type":"text","value":" method receives not only the name of the directive but also the ","position":{"start":{"line":867,"column":36,"offset":24977},"end":{"line":867,"column":101,"offset":25042},"indent":[]}},{"type":"inlineCode","value":"GraphQLSchema","position":{"start":{"line":867,"column":101,"offset":25042},"end":{"line":867,"column":116,"offset":25057},"indent":[]}},{"type":"text","value":" object, it can modify and/or reuse previous declarations found in the schema, as an alternative to returning a totally new ","position":{"start":{"line":867,"column":116,"offset":25057},"end":{"line":867,"column":240,"offset":25181},"indent":[]}},{"type":"inlineCode","value":"GraphQLDirective","position":{"start":{"line":867,"column":240,"offset":25181},"end":{"line":867,"column":258,"offset":25199},"indent":[]}},{"type":"text","value":" object. Either way, if the visitor returns a non-null ","position":{"start":{"line":867,"column":258,"offset":25199},"end":{"line":867,"column":313,"offset":25254},"indent":[]}},{"type":"inlineCode","value":"GraphQLDirective","position":{"start":{"line":867,"column":313,"offset":25254},"end":{"line":867,"column":331,"offset":25272},"indent":[]}},{"type":"text","value":" from ","position":{"start":{"line":867,"column":331,"offset":25272},"end":{"line":867,"column":337,"offset":25278},"indent":[]}},{"type":"inlineCode","value":"getDirectiveDeclaration","position":{"start":{"line":867,"column":337,"offset":25278},"end":{"line":867,"column":362,"offset":25303},"indent":[]}},{"type":"text","value":", that declaration will be used to check arguments and permissible locations.","position":{"start":{"line":867,"column":362,"offset":25303},"end":{"line":867,"column":439,"offset":25380},"indent":[]}}],"position":{"start":{"line":867,"column":1,"offset":24942},"end":{"line":867,"column":439,"offset":25380},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"What about query directives?","position":{"start":{"line":869,"column":4,"offset":25385},"end":{"line":869,"column":32,"offset":25413},"indent":[]}}],"position":{"start":{"line":869,"column":1,"offset":25382},"end":{"line":869,"column":32,"offset":25413},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As its name suggests, the ","position":{"start":{"line":871,"column":1,"offset":25415},"end":{"line":871,"column":27,"offset":25441},"indent":[]}},{"type":"inlineCode","value":"SchemaDirectiveVisitor","position":{"start":{"line":871,"column":27,"offset":25441},"end":{"line":871,"column":51,"offset":25465},"indent":[]}},{"type":"text","value":" abstraction is specifically designed to enable transforming GraphQL schemas based on directives that appear in your SDL text.","position":{"start":{"line":871,"column":51,"offset":25465},"end":{"line":871,"column":177,"offset":25591},"indent":[]}}],"position":{"start":{"line":871,"column":1,"offset":25415},"end":{"line":871,"column":177,"offset":25591},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"While directive syntax can also appear in GraphQL queries sent from the client, implementing query directives would require runtime transformation of query documents. We have deliberately restricted this implementation to transformations that take place at server construction time.","position":{"start":{"line":873,"column":1,"offset":25593},"end":{"line":873,"column":283,"offset":25875},"indent":[]}}],"position":{"start":{"line":873,"column":1,"offset":25593},"end":{"line":873,"column":283,"offset":25875},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We believe confining this logic to your schema is more sustainable than burdening your clients with it, though you can probably imagine a similar sort of abstraction for implementing query directives. If that possibility becomes a desire that becomes a need for you, let us know, and we may consider supporting query directives in a future version of these tools.","position":{"start":{"line":875,"column":1,"offset":25877},"end":{"line":875,"column":364,"offset":26240},"indent":[]}}],"position":{"start":{"line":875,"column":1,"offset":25877},"end":{"line":875,"column":364,"offset":26240},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Creating schema directives\",\"description\":\"Apply custom logic to GraphQL types, fields, and arguments\"}","position":{"start":{"line":878,"column":1,"offset":26243},"end":{"line":878,"column":142,"offset":26384},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":878,"column":142,"offset":26384}}},"scopeImports":["import {ExpansionPanel} from 'gatsby-theme-apollo-docs';","import * as React from 'react'"],"scopeIdentifiers":["ExpansionPanel","React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Creating schema directives\",\n  \"description\": \"Apply custom logic to GraphQL types, fields, and arguments\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Before you create a custom schema directive, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/v2/schema/directives/\"\n  }, \"learn the basics about directives\"), \".\")), mdx(\"p\", null, \"Your schema can define custom directives that can then decorate \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"other\"), \" parts of your schema:\"), mdx(\"div\", {\n    \"className\": \"gatsby-code-title\"\n  }, \"schema.graphql\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"graphql\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-graphql line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-graphql\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"# Definition\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"directive\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token directive function\"\n  }, \"@uppercase\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"on\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"FIELD_DEFINITION\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"type\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"Query\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"# Usage\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token attr-name\"\n  }, \"hello\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token scalar\"\n  }, \"String\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token directive function\"\n  }, \"@uppercase\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"When Apollo Server loads your schema on startup, it can execute custom logic wherever it encounters a particular directive. For example, it can modify the resolver function for a decorated field (for the schema above, it could transform the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"hello\"), \" resolver's original result to uppercase).\"), mdx(\"h2\", {\n    \"id\": \"defining\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#defining\",\n    \"aria-label\": \"defining permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Defining\"), mdx(\"p\", null, \"A directive definition looks like this:\"), mdx(\"div\", {\n    \"className\": \"gatsby-code-title\"\n  }, \"schema.graphql\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"graphql\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-graphql line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-graphql\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"directive\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token directive function\"\n  }, \"@deprecated\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token attr-name\"\n  }, \"reason\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token scalar\"\n  }, \"String\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"No longer supported\\\"\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"on\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"FIELD_DEFINITION\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"|\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"ENUM_VALUE\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This defines a directive named \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"@deprecated\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The directive takes one optional argument (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"reason\"), \") with a default value (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"\\\"No longer supported\\\"\"), \").\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The directive can decorate any number of \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"FIELD_DEFINITION\"), \"s and \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"ENUM_VALUE\"), \"s in your schema.\")), mdx(\"h3\", {\n    \"id\": \"supported-locations\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#supported-locations\",\n    \"aria-label\": \"supported locations permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Supported locations\"), mdx(\"p\", null, \"Your custom directive can appear \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"only\"), \" in the schema locations you list after the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"on\"), \" keyword in the directive's definition.\"), mdx(\"p\", null, \"The table below lists all available locations in a GraphQL schema. Your directive can support any combination of these locations.\"), mdx(\"table\", {\n    className: \"field-table\"\n  }, mdx(\"thead\", null, mdx(\"tr\", null, mdx(\"th\", null, \"Name /\", mdx(\"br\", null), \"Visitor Method\"), mdx(\"th\", null, \"Description\"))), mdx(\"tbody\", null, mdx(\"tr\", null, mdx(\"td\", null, mdx(\"h6\", {\n    \"id\": \"scalar\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h6\",\n    \"href\": \"#scalar\",\n    \"aria-label\": \"scalar permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h6\",\n    \"className\": \"language-text\"\n  }, \"SCALAR\")), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"visitScalar(scalar: GraphQLScalarType)\"))), mdx(\"td\", null, mdx(\"p\", null, \"The definition of a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/v2/schema/custom-scalars/\"\n  }, \"custom scalar\")))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"h6\", {\n    \"id\": \"object\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h6\",\n    \"href\": \"#object\",\n    \"aria-label\": \"object permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h6\",\n    \"className\": \"language-text\"\n  }, \"OBJECT\")), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"visitObject(object: GraphQLObjectType)\"))), mdx(\"td\", null, mdx(\"p\", null, \"The definition of an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/v2/schema/schema/#object-types\"\n  }, \"object type\")))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"h6\", {\n    \"id\": \"field_definition\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h6\",\n    \"href\": \"#field_definition\",\n    \"aria-label\": \"field_definition permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h6\",\n    \"className\": \"language-text\"\n  }, \"FIELD_DEFINITION\")), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"visitFieldDefinition(field: GraphQLField<any, any>)\"))), mdx(\"td\", null, mdx(\"p\", null, \"The definition of a field within any defined type \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"except\"), \" an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/v2/schema/schema/#input-types\"\n  }, \"input type\"), \" (see \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"INPUT_FIELD_DEFINITION\"), \")\"))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"h6\", {\n    \"id\": \"argument_definition\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h6\",\n    \"href\": \"#argument_definition\",\n    \"aria-label\": \"argument_definition permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h6\",\n    \"className\": \"language-text\"\n  }, \"ARGUMENT_DEFINITION\")), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"visitArgumentDefinition(argument: GraphQLArgument)\"))), mdx(\"td\", null, mdx(\"p\", null, \"The definition of a field argument\"))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"h6\", {\n    \"id\": \"interface\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h6\",\n    \"href\": \"#interface\",\n    \"aria-label\": \"interface permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h6\",\n    \"className\": \"language-text\"\n  }, \"INTERFACE\")), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"visitInterface(iface: GraphQLInterfaceType)\"))), mdx(\"td\", null, mdx(\"p\", null, \"The definition of an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/v2/schema/unions-interfaces/#interface-type\"\n  }, \"interface\")))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"h6\", {\n    \"id\": \"union\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h6\",\n    \"href\": \"#union\",\n    \"aria-label\": \"union permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h6\",\n    \"className\": \"language-text\"\n  }, \"UNION\")), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"visitUnion(union: GraphQLUnionType)\"))), mdx(\"td\", null, mdx(\"p\", null, \"The definition of a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/v2/schema/unions-interfaces/#union-type\"\n  }, \"union\")))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"h6\", {\n    \"id\": \"enum\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h6\",\n    \"href\": \"#enum\",\n    \"aria-label\": \"enum permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h6\",\n    \"className\": \"language-text\"\n  }, \"ENUM\")), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"visitEnum(type: GraphQLEnumType)\"))), mdx(\"td\", null, mdx(\"p\", null, \"The definition of an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/v2/schema/schema/#enum-types\"\n  }, \"enum\")))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"h6\", {\n    \"id\": \"enum_value\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h6\",\n    \"href\": \"#enum_value\",\n    \"aria-label\": \"enum_value permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h6\",\n    \"className\": \"language-text\"\n  }, \"ENUM_VALUE\")), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"visitEnumValue(value: GraphQLEnumValue)\"))), mdx(\"td\", null, mdx(\"p\", null, \"The definition of one value within an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/v2/schema/schema/#enum-types\"\n  }, \"enum\")))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"h6\", {\n    \"id\": \"input_object\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h6\",\n    \"href\": \"#input_object\",\n    \"aria-label\": \"input_object permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h6\",\n    \"className\": \"language-text\"\n  }, \"INPUT_OBJECT\")), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"visitInputObject(object: GraphQLInputObjectType)\"))), mdx(\"td\", null, mdx(\"p\", null, \"The definition of an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/v2/schema/schema/#input-types\"\n  }, \"input type\")))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"h6\", {\n    \"id\": \"input_field_definition\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h6\",\n    \"href\": \"#input_field_definition\",\n    \"aria-label\": \"input_field_definition permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h6\",\n    \"className\": \"language-text\"\n  }, \"INPUT_FIELD_DEFINITION\")), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"visitInputFieldDefinition(field: GraphQLInputField)\"))), mdx(\"td\", null, mdx(\"p\", null, \"The definition of a field within an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/v2/schema/schema/#input-types\"\n  }, \"input type\")))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"h6\", {\n    \"id\": \"schema\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h6\",\n    \"href\": \"#schema\",\n    \"aria-label\": \"schema permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h6\",\n    \"className\": \"language-text\"\n  }, \"SCHEMA\")), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"visitSchema(schema: GraphQLSchema)\"))), mdx(\"td\", null, mdx(\"p\", null, \"The top-level \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"schema\"), \" object declaration with \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"query\"), \", \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"mutation\"), \", and/or \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"subscription\"), \" fields (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://spec.graphql.org/June2018/#example-e2969\"\n  }, \"this declaration is usually omitted\"), \")\"))))), mdx(\"h2\", {\n    \"id\": \"implementing\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#implementing\",\n    \"aria-label\": \"implementing permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Implementing\"), mdx(\"p\", null, \"After you define your directive and its valid locations, you still need to define the logic that Apollo Server executes whenever it \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"encounters\"), \" the directive in your schema.\"), mdx(\"p\", null, \"To accomplish this, you create a subclass of \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"SchemaDirectiveVisitor\"), \", a class that's included in Apollo Server as part of the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/apollographql/graphql-tools\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"graphql-tools\"), \" package\"), \".\"), mdx(\"p\", null, \"In your subclass, you override the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"visitor method\"), \" for \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"each location\"), \" your directive can appear in. You can see each location's corresponding visitor method in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#supported-locations\"\n  }, \"the table above\"), \".\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Apollo Server includes \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"graphql-tools\"), \" version 4. To use another version of the library, see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/v2/installing-graphql-tools/\"\n  }, \"Using a different version of \", mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"graphql-tools\")), \".\")), mdx(\"h3\", {\n    \"id\": \"example-deprecated\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#example-deprecated\",\n    \"aria-label\": \"example deprecated permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Example: \", mdx(\"code\", {\n    parentName: \"h3\",\n    \"className\": \"language-text\"\n  }, \"@deprecated\")), mdx(\"p\", null, \"Here's a possible implementation of the default \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"@deprecated\"), \" directive:\"), mdx(\"div\", {\n    \"className\": \"gatsby-code-title\"\n  }, \"DeprecatedDirective.js\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" SchemaDirectiveVisitor \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"apollo-server\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Subclass of SchemaDirectiveVisitor\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"export\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"class\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"DeprecatedDirective\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"extends\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"SchemaDirectiveVisitor\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Visitor methods:\"), \"\\n\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Called when an object field is @deprecated\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"public\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"visitFieldDefinition\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token literal-property property\"\n  }, \"field\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \":\"), \" GraphQLField\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"<\"), \"any\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" any\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \">\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"isDeprecated \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token boolean\"\n  }, \"true\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"deprecationReason \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"this\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"args\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"reason\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Called when an enum value is @deprecated\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"public\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"visitEnumValue\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token literal-property property\"\n  }, \"value\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \":\"), \" GraphQLEnumValue\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    value\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"isDeprecated \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token boolean\"\n  }, \"true\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    value\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"deprecationReason \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"this\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"args\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"reason\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"This subclass adds two fields to the executable schema's representation of a deprecated field or enum value: a boolean indicating that the item \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"isDeprecated\"), \", and a string indicating the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"deprecationReason\"), \". The reason is taken directly from the directive's \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#defining\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"reason\"), \" argument\"), \".\"), mdx(\"p\", null, \"To add this logic to Apollo Server, you pass the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"DeprecatedDirective\"), \" class to the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"ApolloServer\"), \" constructor via the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"schemaDirectives\"), \" object:\"), mdx(\"div\", {\n    \"className\": \"gatsby-code-title\"\n  }, \"index.js\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" ApolloServer\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" gql \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"apollo-server\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" DeprecatedDirective \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"./DeprecatedDirective\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" typeDefs \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" gql\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }), \"\\n\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"  type ExampleType {\"), \"\\n\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"    newField: String\"), \"\\n\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"    oldField: String @deprecated(reason: \\\"Use \\\\`newField\\\\`.\\\")\"), \"\\n\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"  }\"), \"\\n\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" server \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"ApolloServer\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  typeDefs\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  resolvers\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"schemaDirectives\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Object key must match directive name, minus '@'\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"gatsby-highlight-code-line\"\n  }, \"    \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token literal-property property\"\n  }, \"deprecated\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \":\"), \" DeprecatedDirective\"), \"  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\nserver\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"listen\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"then\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" url \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  console\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"log\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\uD83D\\uDE80 Server ready at \"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"${\"), \"url\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"When Apollo Server parses your schema SDL to create your executable schema, it automatically initializes a separate \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"DeprecatedDirective\"), \" for \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"each instance\"), \" of \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"@deprecated\"), \" it encounters. It then calls the appropriate visitor method for the current location.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"You can give your \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"SchemaDirectiveVisitor\"), \" subclass any name. It doesn't need to match the name of the directive it's used for (you can even use the same subclass for multiple directives).\")), mdx(\"h3\", {\n    \"id\": \"running-directive-logic-on-an-executable-schema\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#running-directive-logic-on-an-executable-schema\",\n    \"aria-label\": \"running directive logic on an executable schema permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Running directive logic on an executable schema\"), mdx(\"p\", null, \"If Apollo Server has \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"already\"), \" parsed your SDL string into an executable schema, you can still execute directive logic by calling the static method \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"SchemaDirectiveVisitor.visitSchemaDirectives\"), \". This method takes your executable schema, along the same form of directive map you provide to the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"schemaDirectives\"), \" constructor option:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"SchemaDirectiveVisitor\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"visitSchemaDirectives\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"schema\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"deprecated\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" DeprecatedDirective\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h2\", {\n    \"id\": \"transforming-resolved-fields\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#transforming-resolved-fields\",\n    \"aria-label\": \"transforming resolved fields permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Transforming resolved fields\"), mdx(\"p\", null, \"A custom directive can transform a resolved GraphQL field's value \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"before\"), \" it's returned to the requesting client.\"), mdx(\"h3\", {\n    \"id\": \"example-uppercasing-strings\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#example-uppercasing-strings\",\n    \"aria-label\": \"example uppercasing strings permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Example: Uppercasing strings\"), mdx(\"p\", null, \"Suppose you want to convert certain \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"String\"), \" fields in your schema to uppercase before they're returned.\"), mdx(\"p\", null, \"This example defines an \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"@uppercase\"), \" directive for this purpose:\"), mdx(ExpansionPanel, {\n    title: \"Click to expand\",\n    mdxType: \"ExpansionPanel\"\n  }, mdx(\"div\", {\n    \"className\": \"gatsby-code-title\"\n  }, \"index.js\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" ApolloServer\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" gql\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" SchemaDirectiveVisitor \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"apollo-server\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" defaultFieldResolver \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"graphql\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" typeDefs \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" gql\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\n  directive @uppercase on FIELD_DEFINITION\\n\\n  type Query {\\n    hello: String @uppercase\\n  }\\n\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" resolvers \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"Query\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"hello\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"Hello World!\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"class\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"UpperCaseDirective\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"extends\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"SchemaDirectiveVisitor\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Called on server startup for each @uppercase field\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"visitFieldDefinition\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"field\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Obtain the field's resolver\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" resolve \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" defaultFieldResolver \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// *Replace* the field's resolver with a function\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// that calls the *original* resolver, then converts\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// the result to uppercase before returning\"), \"\\n    field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function-variable function\"\n  }, \"resolve\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"async\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"function\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"...\"), \"args\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" result \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"await\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"resolve\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"apply\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"this\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" args\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"if\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"typeof\"), \" result \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"===\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"string\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" result\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"toUpperCase\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" result\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" server \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"ApolloServer\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  typeDefs\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  resolvers\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"schemaDirectives\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"upper\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" UpperCaseDirective\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\nserver\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"listen\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"then\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" url \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  console\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"log\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\uD83D\\uDE80 Server ready at \"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"${\"), \"url\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }))))), mdx(\"a\", {\n    href: \"https://codesandbox.io/s/github/apollographql/docs-examples/tree/main/custom-directives/upper-case-directive?fontsize=14&hidenavigation=1&theme=dark\"\n  }, mdx(\"img\", {\n    alt: \"Edit upper-case-directive\",\n    src: \"https://codesandbox.io/static/img/play-codesandbox.svg\"\n  })), mdx(\"p\", null, \"This code \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"replaces\"), \" the resolver of an \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"@uppercase\"), \" field with a new function. This new function first calls the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"original\"), \" resolver, then transforms its result to uppercase (assuming it's a string) before returning it.\"), mdx(\"h3\", {\n    \"id\": \"example-formatting-dates\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#example-formatting-dates\",\n    \"aria-label\": \"example formatting dates permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Example: Formatting dates\"), mdx(\"p\", null, \"Suppose your schema defines a \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Date\"), \" custom scalar, and you want querying clients to be able to specify a string format for the returned date (e.g., specify \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"dd/mm/yyyy HH:MM:ss\"), \" for a string like \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"10/03/2021 14:53:03\"), \").\"), mdx(\"p\", null, \"This example defines a \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"@date\"), \" directive for this purpose:\"), mdx(ExpansionPanel, {\n    title: \"Click to expand\",\n    mdxType: \"ExpansionPanel\"\n  }, mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" ApolloServer\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" gql\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" SchemaDirectiveVisitor \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'apollo-server'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" defaultFieldResolver \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'graphql'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" formatDate \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'dateformat'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" typeDefs \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" gql\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\n\\n  # Define the directive with a default date format\\n  directive @date(\\n    defaultFormat: String = \\\"dd/mm/yyyy HH:MM:ss\\\"\\n  ) on FIELD_DEFINITION\\n\\n  scalar Date\\n\\n  type Post {\\n    # You can override the defaultFormat for individual fields\\n    published: Date @date(defaultFormat: \\\"dd/mm/yyyy\\\")\\n  }\\n\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"class\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"FormattableDateDirective\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"extends\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"SchemaDirectiveVisitor\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"public\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"visitFieldDefinition\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"field\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Get the field's resolver\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" resolve \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" defaultFieldResolver \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Get the default date format\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" defaultFormat \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"this\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"args\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// *Add* a `format` argument to the GraphQL field for\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// clients to use\"), \"\\n    field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"args\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"push\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"name\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'format'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"type\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" GraphQLString\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// *Replace* the field's resolver with this function, which\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// first calls the *original* resolver, then formats the\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// returned date\"), \"\\n    field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function-variable function\"\n  }, \"resolve\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"async\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"function\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"source\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" format\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"...\"), \"otherArgs \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n      context\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n      info\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\")), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" date \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"await\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"resolve\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"call\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"this\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" source\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" otherArgs\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" context\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" info\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// If the client does not specify a format, use defaultFormat\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"formatDate\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"date\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" format \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"||\"), \" defaultFormat\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// The field now returns a String instead of a Date.\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Update it accordingly.\"), \"\\n    field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"type \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" GraphQLString\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" server \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"ApolloServer\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  typeDefs\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"schemaDirectives\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"date\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" FormattableDateDirective\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\nserver\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"listen\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"then\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" url \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  console\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"log\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\uD83D\\uDE80 Server ready at \"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"${\"), \"url\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }))))), mdx(\"p\", null, \"Now the client can specify a desired \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"format\"), \" argument when requesting the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Post.published\"), \" field, or omit the argument to use the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"defaultFormat\"), \" string specified in the schema.\"), mdx(\"h2\", {\n    \"id\": \"additional-examples\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#additional-examples\",\n    \"aria-label\": \"additional examples permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Additional examples\"), mdx(\"h3\", {\n    \"id\": \"fetching-data-from-a-rest-api\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#fetching-data-from-a-rest-api\",\n    \"aria-label\": \"fetching data from a rest api permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Fetching data from a REST API\"), mdx(\"p\", null, \"Suppose you've defined an object type that corresponds to a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Representational_state_transfer\"\n  }, \"REST\"), \" resource, and you want to avoid implementing resolver functions for every field:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" ApolloServer\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" gql\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" SchemaDirectiveVisitor \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"apollo-server\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" typeDefs \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" gql\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\n  directive @rest(url: String) on FIELD_DEFINITION\\n\\n  type Query {\\n    people: [Person] @rest(url: \\\"/api/v1/people\\\")\\n  }\\n\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"class\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"RestDirective\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"extends\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"SchemaDirectiveVisitor\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"public\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"visitFieldDefinition\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"field\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" url \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"this\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"args\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function-variable function\"\n  }, \"resolve\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"fetch\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"url\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" server \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"ApolloServer\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  typeDefs\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"schemaDirectives\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"rest\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" RestDirective\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\nserver\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"listen\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"then\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" url \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  console\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"log\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\uD83D\\uDE80 Server ready at \"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"${\"), \"url\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"There are many more issues to consider when implementing a real GraphQL wrapper over a REST endpoint (such as how to do caching or pagination), but this example demonstrates the basic structure.\"), mdx(\"h3\", {\n    \"id\": \"marking-strings-for-internationalization\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#marking-strings-for-internationalization\",\n    \"aria-label\": \"marking strings for internationalization permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Marking strings for internationalization\"), mdx(\"p\", null, \"Suppose you have a function called \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"translate\"), \" that takes a string, a path identifying that string's role in your application, and a target locale for the translation.\"), mdx(\"p\", null, \"Here's how you might make sure \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"translate\"), \" is used to localize the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"greeting\"), \" field of a \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Query\"), \" type:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" ApolloServer\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" gql\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" SchemaDirectiveVisitor \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"apollo-server\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" defaultFieldResolver \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'graphql'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" typeDefs \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" gql\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\n  directive @intl on FIELD_DEFINITION\\n\\n  type Query {\\n    greeting: String @intl\\n  }\\n\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"class\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"IntlDirective\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"extends\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"SchemaDirectiveVisitor\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"visitFieldDefinition\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"field\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" details\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" resolve \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" defaultFieldResolver \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function-variable function\"\n  }, \"resolve\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"async\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"function\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"...\"), \"args\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" context \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" args\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, \"2\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" defaultText \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"await\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"resolve\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"apply\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"this\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" args\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// In this example, path would be [\\\"Query\\\", \\\"greeting\\\"]:\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" path \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), \"details\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"objectType\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"name\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"name\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"translate\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"defaultText\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" path\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" context\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"locale\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" server \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"ApolloServer\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  typeDefs\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"schemaDirectives\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"intl\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" IntlDirective\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\nserver\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"listen\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"then\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" url \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  console\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"log\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\uD83D\\uDE80 Server ready at \"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"${\"), \"url\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"GraphQL is great for internationalization, since a GraphQL server can access unlimited translation data, and clients can simply ask for the translations they need.\"), mdx(\"h3\", {\n    \"id\": \"enforcing-access-permissions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#enforcing-access-permissions\",\n    \"aria-label\": \"enforcing access permissions permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Enforcing access permissions\"), mdx(\"p\", null, \"Imagine a hypothetical \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"@auth\"), \" directive that takes an argument \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"requires\"), \" of type \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Role\"), \", which defaults to \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"ADMIN\"), \". This \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"@auth\"), \" directive can appear on an \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"OBJECT\"), \" like \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"User\"), \" to set default access permissions for all \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"User\"), \" fields, as well as appearing on individual fields, to enforce field-specific \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"@auth\"), \" restrictions:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"graphql\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-graphql line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-graphql\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"directive\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token directive function\"\n  }, \"@auth\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token attr-name\"\n  }, \"requires\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"Role\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"ADMIN\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"on\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"OBJECT\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"|\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"FIELD_DEFINITION\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"enum\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"Role\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"ADMIN\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"REVIEWER\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"USER\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"UNKNOWN\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"type\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"User\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token directive function\"\n  }, \"@auth\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token attr-name\"\n  }, \"requires\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"USER\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token attr-name\"\n  }, \"name\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token scalar\"\n  }, \"String\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token attr-name\"\n  }, \"banned\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token scalar\"\n  }, \"Boolean\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token directive function\"\n  }, \"@auth\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token attr-name\"\n  }, \"requires\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"ADMIN\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token attr-name\"\n  }, \"canPost\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token scalar\"\n  }, \"Boolean\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token directive function\"\n  }, \"@auth\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token attr-name\"\n  }, \"requires\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"REVIEWER\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"What makes this example tricky is that the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"OBJECT\"), \" version of the directive needs to wrap all fields of the object, even though some of those fields may be individually wrapped by \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"@auth\"), \" directives at the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"FIELD_DEFINITION\"), \" level, and we would prefer not to rewrap resolvers if we can help it:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" ApolloServer\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" gql\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" SchemaDirectiveVisitor \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"apollo-server\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" defaultFieldResolver \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'graphql'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"class\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"AuthDirective\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"extends\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"SchemaDirectiveVisitor\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"visitObject\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"type\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"this\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"ensureFieldsWrapped\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"type\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    type\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"_requiredAuthRole \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"this\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"args\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"requires\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Visitor methods for nested types like fields and arguments\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// also receive a details object that provides information about\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// the parent and grandparent types.\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"visitFieldDefinition\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"field\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" details\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"this\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"ensureFieldsWrapped\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"details\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"objectType\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"_requiredAuthRole \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"this\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"args\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"requires\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"ensureFieldsWrapped\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"objectType\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Mark the GraphQLObjectType object to avoid re-wrapping:\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"if\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"objectType\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"_authFieldsWrapped\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    objectType\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"_authFieldsWrapped \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token boolean\"\n  }, \"true\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" fields \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" objectType\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"getFields\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n    Object\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"keys\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"fields\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"forEach\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"fieldName\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" field \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" fields\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), \"fieldName\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" resolve \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" defaultFieldResolver \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function-variable function\"\n  }, \"resolve\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"async\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"function\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"...\"), \"args\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Get the required Role from the field first, falling back\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// to the objectType if no Role is required by the field:\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" requiredRole \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \"\\n          field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"_requiredAuthRole \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"||\"), \"\\n          objectType\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"_requiredAuthRole\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"if\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"!\"), \" requiredRole\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n          \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"resolve\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"apply\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"this\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" args\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" context \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" args\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, \"2\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" user \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"await\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"getUser\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"context\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"headers\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"authToken\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"if\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"!\"), \" user\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"hasRole\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"requiredRole\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n          \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"throw\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"Error\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"not authorized\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"resolve\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"apply\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"this\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" args\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" server \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"ApolloServer\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  typeDefs\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"schemaDirectives\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"auth\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" AuthDirective\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"authorized\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" AuthDirective\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"authenticated\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" AuthDirective\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\nserver\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"listen\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"then\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" url \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  console\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"log\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\uD83D\\uDE80 Server ready at \"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"${\"), \"url\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"One drawback of this approach is that it does not guarantee fields will be wrapped if they are added to the schema after \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"AuthDirective\"), \" is applied, and the whole \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"getUser(context.headers.authToken)\"), \" is a made-up API that would need to be fleshed out. In other words, we\\u2019ve glossed over some of the details that would be required for a production-ready implementation of this directive, though we hope the basic structure shown here inspires you to find clever solutions to the remaining problems.\"), mdx(\"h3\", {\n    \"id\": \"enforcing-value-restrictions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#enforcing-value-restrictions\",\n    \"aria-label\": \"enforcing value restrictions permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Enforcing value restrictions\"), mdx(\"p\", null, \"Suppose you want to enforce a maximum length for a string-valued field:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" ApolloServer\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" gql\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" SchemaDirectiveVisitor \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'apollo-server'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" GraphQLScalarType\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" GraphQLNonNull \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'graphql'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" typeDefs \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" gql\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\n  directive @length(max: Int) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION\\n\\n  type Query {\\n    books: [Book]\\n  }\\n\\n  type Book {\\n    title: String @length(max: 50)\\n  }\\n\\n  type Mutation {\\n    createBook(book: BookInput): Book\\n  }\\n\\n  input BookInput {\\n    title: String! @length(max: 50)\\n  }\\n\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"class\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"LengthDirective\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"extends\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"SchemaDirectiveVisitor\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"visitInputFieldDefinition\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"field\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"this\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"wrapType\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"visitFieldDefinition\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"field\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"this\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"wrapType\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Replace field.type with a custom GraphQLScalarType that enforces the\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// length restriction.\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"wrapType\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"field\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"if\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"\\n      field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"type \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"instanceof\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"GraphQLNonNull\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"&&\"), \"\\n      field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"type\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"ofType \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"instanceof\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"GraphQLScalarType\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"type \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"GraphQLNonNull\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"LimitedLengthType\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"type\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"ofType\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"this\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"args\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"max\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"else\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"if\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"type \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"instanceof\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"GraphQLScalarType\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"type \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"LimitedLengthType\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"field\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"type\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"this\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"args\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"max\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"else\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"throw\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"Error\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"Not a scalar type: \"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"${\"), \"field\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"type\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"class\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"LimitedLengthType\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"extends\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"GraphQLScalarType\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"constructor\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"type\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" maxLength\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"super\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"name\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"LengthAtMost\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"${\"), \"maxLength\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// For more information about GraphQLScalar type (de)serialization,\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// see the graphql-js implementation:\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// https://github.com/graphql/graphql-js/blob/31ae8a8e8312/src/type/definition.js#L425-L446\"), \"\\n\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"serialize\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"value\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n        value \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" type\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"serialize\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"value\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n        assert\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"isAtMost\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"value\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"length\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" maxLength\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" value\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"parseValue\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"value\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" type\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"parseValue\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"value\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"parseLiteral\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"ast\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" type\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"parseLiteral\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"ast\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" server \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"ApolloServer\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  typeDefs\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  resolvers\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"schemaDirectives\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"length\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" LengthDirective\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\nserver\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"listen\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"then\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" url \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  console\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"log\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\uD83D\\uDE80 Server ready at \"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"${\"), \"url\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"synthesizing-unique-ids\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#synthesizing-unique-ids\",\n    \"aria-label\": \"synthesizing unique ids permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Synthesizing unique IDs\"), mdx(\"p\", null, \"Suppose your database uses incrementing IDs for each resource type, so IDs are not unique across all resource types. Here\\u2019s how you might synthesize a field called \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"uid\"), \" that combines the object type with various field values to produce an ID that\\u2019s unique across your schema:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" ApolloServer\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" gql\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" SchemaDirectiveVisitor \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"apollo-server\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" GraphQLID \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"graphql\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" createHash \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"crypto\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" typeDefs \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" gql\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\n  directive @uniqueID(\\n    # The name of the new ID field, \\\"uid\\\" by default:\\n    name: String = \\\"uid\\\"\\n\\n    # Which fields to include in the new ID:\\n    from: [String] = [\\\"id\\\"]\\n  ) on OBJECT\\n\\n  # Since this type just uses the default values of name and from,\\n  # we don't have to pass any arguments to the directive:\\n  type Location @uniqueID {\\n    id: Int\\n    address: String\\n  }\\n\\n  # This type uses both the person's name and the personID field,\\n  # in addition to the \\\"Person\\\" type name, to construct the ID:\\n  type Person @uniqueID(from: [\\\"name\\\", \\\"personID\\\"]) {\\n    personID: Int\\n    name: String\\n  }\\n\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"class\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"UniqueIdDirective\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"extends\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"SchemaDirectiveVisitor\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"visitObject\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"type\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" name\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" from \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"this\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"args\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" fields \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" type\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"getFields\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"if\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"name \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"in\"), \" fields\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"throw\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"Error\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"Conflicting field name \"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"${\"), \"name\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n    fields\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), \"name\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      name\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"type\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" GraphQLID\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"description\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'Unique ID'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"args\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"resolve\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"object\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" hash \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"createHash\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"sha1\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n        hash\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"update\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"type\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"name\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n        from\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"forEach\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"fieldName\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n          hash\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"update\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"String\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"object\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), \"fieldName\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" hash\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"digest\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"hex\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" server \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"ApolloServer\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  typeDefs\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  resolvers\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"schemaDirectives\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"uniqueID\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" UniqueIdDirective\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\nserver\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"listen\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"then\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" url \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  console\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"log\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\uD83D\\uDE80 Server ready at \"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"${\"), \"url\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h2\", {\n    \"id\": \"declaring-schema-directives\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#declaring-schema-directives\",\n    \"aria-label\": \"declaring schema directives permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Declaring schema directives\"), mdx(\"p\", null, \"While the above examples should be sufficient to implement any \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"@directive\"), \" used in your schema, SDL syntax also supports declaring the names, argument types, default argument values, and permissible locations of any available directives:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"directive @\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"auth\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"requires\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" Role \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"ADMIN\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" on \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"OBJECT\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"|\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"FIELD_DEFINITION\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"enum\"), \" Role \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"ADMIN\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"REVIEWER\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"USER\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"UNKNOWN\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\ntype User @\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"auth\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token literal-property property\"\n  }, \"requires\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token constant\"\n  }, \"USER\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"name\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" String\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"banned\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" Boolean @\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"auth\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"requires\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"ADMIN\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"canPost\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" Boolean @\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"auth\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"requires\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"REVIEWER\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"This hypothetical \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"@auth\"), \" directive takes an argument named \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"requires\"), \" of type \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Role\"), \", which defaults to \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"ADMIN\"), \" if \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"@auth\"), \" is used without passing an explicit \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"requires\"), \" argument. The \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"@auth\"), \" directive can appear on an \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"OBJECT\"), \" like \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"User\"), \" to set a default access control for all \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"User\"), \" fields, and also on individual fields, to enforce field-specific \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"@auth\"), \" restrictions.\"), mdx(\"p\", null, \"Enforcing the requirements of the declaration is something a \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"SchemaDirectiveVisitor\"), \" implementation could do itself, in theory, but the SDL syntax is easer to read and write, and provides value even if you're not using the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"SchemaDirectiveVisitor\"), \" abstraction.\"), mdx(\"p\", null, \"However, if you're implementing a reusable \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"SchemaDirectiveVisitor\"), \" for public consumption, you will probably not be the person writing the SDL syntax, so you may not have control over which directives the schema author decides to declare, and how. That's why a well-implemented, reusable \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"SchemaDirectiveVisitor\"), \" should consider overriding the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"getDirectiveDeclaration\"), \" method:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" ApolloServer\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" gql\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" SchemaDirectiveVisitor \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"apollo-server\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" DirectiveLocation\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" GraphQLDirective\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" GraphQLEnumType \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"graphql\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"class\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"AuthDirective\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"extends\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"SchemaDirectiveVisitor\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"public\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"visitObject\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token literal-property property\"\n  }, \"object\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \":\"), \" GraphQLObjectType\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"...\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"public\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"visitFieldDefinition\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token literal-property property\"\n  }, \"field\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \":\"), \" GraphQLField\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"<\"), \"any\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" any\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \">\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"...\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"public\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"static\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"getDirectiveDeclaration\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"directiveName\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" string\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"schema\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" GraphQLSchema\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" GraphQLDirective \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" previousDirective \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" schema\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"getDirective\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"directiveName\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"if\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"previousDirective\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// If a previous directive declaration exists in the schema, it may be\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// better to modify it than to return a new GraphQLDirective object.\"), \"\\n      previousDirective\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"args\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"forEach\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"arg\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"if\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"arg\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"name \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"===\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'requires'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n          \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Lower the default minimum Role from ADMIN to REVIEWER.\"), \"\\n          arg\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"defaultValue \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'REVIEWER'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" previousDirective\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// If a previous directive with this name was not found in the schema,\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// there are several options:\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"//\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// 1. Construct a new GraphQLDirective (see below).\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// 2. Throw an exception to force the client to declare the directive.\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// 3. Return null, and forget about declaring this directive.\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"//\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// All three are valid options, since the visitor will still work without\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// any declared directives. In fact, unless you're publishing a directive\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// implementation for public consumption, you can probably just ignore\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// getDirectiveDeclaration altogether.\"), \"\\n\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"GraphQLDirective\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"name\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" directiveName\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"locations\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), \"\\n        DirectiveLocation\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"OBJECT\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n        DirectiveLocation\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"FIELD_DEFINITION\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"args\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"requires\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n          \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Having the schema available here is important for obtaining\"), \"\\n          \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// references to existing type objects, such as the Role enum.\"), \"\\n          \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"type\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"schema\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"getType\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'Role'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"as\"), \" GraphQLEnumType\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n          \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Set the default minimum Role to REVIEWER.\"), \"\\n          \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"defaultValue\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'REVIEWER'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"Since the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"getDirectiveDeclaration\"), \" method receives not only the name of the directive but also the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"GraphQLSchema\"), \" object, it can modify and/or reuse previous declarations found in the schema, as an alternative to returning a totally new \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"GraphQLDirective\"), \" object. Either way, if the visitor returns a non-null \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"GraphQLDirective\"), \" from \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"getDirectiveDeclaration\"), \", that declaration will be used to check arguments and permissible locations.\"), mdx(\"h2\", {\n    \"id\": \"what-about-query-directives\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#what-about-query-directives\",\n    \"aria-label\": \"what about query directives permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"What about query directives?\"), mdx(\"p\", null, \"As its name suggests, the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"SchemaDirectiveVisitor\"), \" abstraction is specifically designed to enable transforming GraphQL schemas based on directives that appear in your SDL text.\"), mdx(\"p\", null, \"While directive syntax can also appear in GraphQL queries sent from the client, implementing query directives would require runtime transformation of query documents. We have deliberately restricted this implementation to transformations that take place at server construction time.\"), mdx(\"p\", null, \"We believe confining this logic to your schema is more sustainable than burdening your clients with it, though you can probably imagine a similar sort of abstraction for implementing query directives. If that possibility becomes a desire that becomes a need for you, let us know, and we may consider supporting query directives in a future version of these tools.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport {ExpansionPanel} from 'gatsby-theme-apollo-docs';\nexport const _frontmatter = {\n  \"title\": \"Creating schema directives\",\n  \"description\": \"Apply custom logic to GraphQL types, fields, and arguments\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <blockquote>\n      <p parentName=\"blockquote\">{`Before you create a custom schema directive, `}<a parentName=\"p\" {...{\n          \"href\": \"/v2/schema/directives/\"\n        }}>{`learn the basics about directives`}</a>{`.`}</p>\n    </blockquote>\n    <p>{`Your schema can define custom directives that can then decorate `}<em parentName=\"p\">{`other`}</em>{` parts of your schema:`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title\"\n    }}>{`schema.graphql`}</div>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"graphql\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-graphql line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-graphql\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`# Definition`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`directive`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token directive function\"\n          }}>{`@uppercase`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`on`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`FIELD_DEFINITION`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`type`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`Query`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`# Usage`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token attr-name\"\n          }}>{`hello`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token scalar\"\n          }}>{`String`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token directive function\"\n          }}>{`@uppercase`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`When Apollo Server loads your schema on startup, it can execute custom logic wherever it encounters a particular directive. For example, it can modify the resolver function for a decorated field (for the schema above, it could transform the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`hello`}</code>{` resolver's original result to uppercase).`}</p>\n    <h2 {...{\n      \"id\": \"defining\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#defining\",\n        \"aria-label\": \"defining permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Defining`}</h2>\n    <p>{`A directive definition looks like this:`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title\"\n    }}>{`schema.graphql`}</div>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"graphql\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-graphql line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-graphql\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`directive`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token directive function\"\n          }}>{`@deprecated`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token attr-name\"\n          }}>{`reason`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token scalar\"\n          }}>{`String`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"No longer supported\"`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`on`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`FIELD_DEFINITION`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`|`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`ENUM_VALUE`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <ul>\n      <li parentName=\"ul\">{`This defines a directive named `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`@deprecated`}</code>{`.`}</li>\n      <li parentName=\"ul\">{`The directive takes one optional argument (`}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`reason`}</code>{`) with a default value (`}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`\"No longer supported\"`}</code>{`).`}</li>\n      <li parentName=\"ul\">{`The directive can decorate any number of `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`FIELD_DEFINITION`}</code>{`s and `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`ENUM_VALUE`}</code>{`s in your schema.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"supported-locations\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#supported-locations\",\n        \"aria-label\": \"supported locations permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Supported locations`}</h3>\n    <p>{`Your custom directive can appear `}<em parentName=\"p\">{`only`}</em>{` in the schema locations you list after the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`on`}</code>{` keyword in the directive's definition.`}</p>\n    <p>{`The table below lists all available locations in a GraphQL schema. Your directive can support any combination of these locations.`}</p>\n    <table class=\"field-table\">\n  <thead>\n    <tr>\n      <th>Name /<br />Visitor Method</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n      <tbody>\n        <tr>\n          <td>\n            <h6 {...{\n              \"id\": \"scalar\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h6\" {...{\n                \"href\": \"#scalar\",\n                \"aria-label\": \"scalar permalink\",\n                \"className\": \"anchor before\"\n              }}><svg parentName=\"a\" {...{\n                  \"aria-hidden\": \"true\",\n                  \"focusable\": \"false\",\n                  \"height\": \"16\",\n                  \"version\": \"1.1\",\n                  \"viewBox\": \"0 0 16 16\",\n                  \"width\": \"16\"\n                }}><path parentName=\"svg\" {...{\n                    \"fillRule\": \"evenodd\",\n                    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n                  }}></path></svg></a><code parentName=\"h6\" {...{\n                \"className\": \"language-text\"\n              }}>{`SCALAR`}</code></h6>\n            <p><code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`visitScalar(scalar: GraphQLScalarType)`}</code></p>\n          </td>\n          <td>\n            <p>{`The definition of a `}<a parentName=\"p\" {...{\n                \"href\": \"/v2/schema/custom-scalars/\"\n              }}>{`custom scalar`}</a></p>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <h6 {...{\n              \"id\": \"object\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h6\" {...{\n                \"href\": \"#object\",\n                \"aria-label\": \"object permalink\",\n                \"className\": \"anchor before\"\n              }}><svg parentName=\"a\" {...{\n                  \"aria-hidden\": \"true\",\n                  \"focusable\": \"false\",\n                  \"height\": \"16\",\n                  \"version\": \"1.1\",\n                  \"viewBox\": \"0 0 16 16\",\n                  \"width\": \"16\"\n                }}><path parentName=\"svg\" {...{\n                    \"fillRule\": \"evenodd\",\n                    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n                  }}></path></svg></a><code parentName=\"h6\" {...{\n                \"className\": \"language-text\"\n              }}>{`OBJECT`}</code></h6>\n            <p><code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`visitObject(object: GraphQLObjectType)`}</code></p>\n          </td>\n          <td>\n            <p>{`The definition of an `}<a parentName=\"p\" {...{\n                \"href\": \"/v2/schema/schema/#object-types\"\n              }}>{`object type`}</a></p>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <h6 {...{\n              \"id\": \"field_definition\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h6\" {...{\n                \"href\": \"#field_definition\",\n                \"aria-label\": \"field_definition permalink\",\n                \"className\": \"anchor before\"\n              }}><svg parentName=\"a\" {...{\n                  \"aria-hidden\": \"true\",\n                  \"focusable\": \"false\",\n                  \"height\": \"16\",\n                  \"version\": \"1.1\",\n                  \"viewBox\": \"0 0 16 16\",\n                  \"width\": \"16\"\n                }}><path parentName=\"svg\" {...{\n                    \"fillRule\": \"evenodd\",\n                    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n                  }}></path></svg></a><code parentName=\"h6\" {...{\n                \"className\": \"language-text\"\n              }}>{`FIELD_DEFINITION`}</code></h6>\n            <p><code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`visitFieldDefinition(field: GraphQLField<any, any>)`}</code></p>\n          </td>\n          <td>\n            <p>{`The definition of a field within any defined type `}<em parentName=\"p\">{`except`}</em>{` an `}<a parentName=\"p\" {...{\n                \"href\": \"/v2/schema/schema/#input-types\"\n              }}>{`input type`}</a>{` (see `}<code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`INPUT_FIELD_DEFINITION`}</code>{`)`}</p>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <h6 {...{\n              \"id\": \"argument_definition\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h6\" {...{\n                \"href\": \"#argument_definition\",\n                \"aria-label\": \"argument_definition permalink\",\n                \"className\": \"anchor before\"\n              }}><svg parentName=\"a\" {...{\n                  \"aria-hidden\": \"true\",\n                  \"focusable\": \"false\",\n                  \"height\": \"16\",\n                  \"version\": \"1.1\",\n                  \"viewBox\": \"0 0 16 16\",\n                  \"width\": \"16\"\n                }}><path parentName=\"svg\" {...{\n                    \"fillRule\": \"evenodd\",\n                    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n                  }}></path></svg></a><code parentName=\"h6\" {...{\n                \"className\": \"language-text\"\n              }}>{`ARGUMENT_DEFINITION`}</code></h6>\n            <p><code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`visitArgumentDefinition(argument: GraphQLArgument)`}</code></p>\n          </td>\n          <td>\n            <p>{`The definition of a field argument`}</p>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <h6 {...{\n              \"id\": \"interface\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h6\" {...{\n                \"href\": \"#interface\",\n                \"aria-label\": \"interface permalink\",\n                \"className\": \"anchor before\"\n              }}><svg parentName=\"a\" {...{\n                  \"aria-hidden\": \"true\",\n                  \"focusable\": \"false\",\n                  \"height\": \"16\",\n                  \"version\": \"1.1\",\n                  \"viewBox\": \"0 0 16 16\",\n                  \"width\": \"16\"\n                }}><path parentName=\"svg\" {...{\n                    \"fillRule\": \"evenodd\",\n                    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n                  }}></path></svg></a><code parentName=\"h6\" {...{\n                \"className\": \"language-text\"\n              }}>{`INTERFACE`}</code></h6>\n            <p><code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`visitInterface(iface: GraphQLInterfaceType)`}</code></p>\n          </td>\n          <td>\n            <p>{`The definition of an `}<a parentName=\"p\" {...{\n                \"href\": \"/v2/schema/unions-interfaces/#interface-type\"\n              }}>{`interface`}</a></p>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <h6 {...{\n              \"id\": \"union\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h6\" {...{\n                \"href\": \"#union\",\n                \"aria-label\": \"union permalink\",\n                \"className\": \"anchor before\"\n              }}><svg parentName=\"a\" {...{\n                  \"aria-hidden\": \"true\",\n                  \"focusable\": \"false\",\n                  \"height\": \"16\",\n                  \"version\": \"1.1\",\n                  \"viewBox\": \"0 0 16 16\",\n                  \"width\": \"16\"\n                }}><path parentName=\"svg\" {...{\n                    \"fillRule\": \"evenodd\",\n                    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n                  }}></path></svg></a><code parentName=\"h6\" {...{\n                \"className\": \"language-text\"\n              }}>{`UNION`}</code></h6>\n            <p><code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`visitUnion(union: GraphQLUnionType)`}</code></p>\n          </td>\n          <td>\n            <p>{`The definition of a `}<a parentName=\"p\" {...{\n                \"href\": \"/v2/schema/unions-interfaces/#union-type\"\n              }}>{`union`}</a></p>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <h6 {...{\n              \"id\": \"enum\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h6\" {...{\n                \"href\": \"#enum\",\n                \"aria-label\": \"enum permalink\",\n                \"className\": \"anchor before\"\n              }}><svg parentName=\"a\" {...{\n                  \"aria-hidden\": \"true\",\n                  \"focusable\": \"false\",\n                  \"height\": \"16\",\n                  \"version\": \"1.1\",\n                  \"viewBox\": \"0 0 16 16\",\n                  \"width\": \"16\"\n                }}><path parentName=\"svg\" {...{\n                    \"fillRule\": \"evenodd\",\n                    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n                  }}></path></svg></a><code parentName=\"h6\" {...{\n                \"className\": \"language-text\"\n              }}>{`ENUM`}</code></h6>\n            <p><code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`visitEnum(type: GraphQLEnumType)`}</code></p>\n          </td>\n          <td>\n            <p>{`The definition of an `}<a parentName=\"p\" {...{\n                \"href\": \"/v2/schema/schema/#enum-types\"\n              }}>{`enum`}</a></p>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <h6 {...{\n              \"id\": \"enum_value\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h6\" {...{\n                \"href\": \"#enum_value\",\n                \"aria-label\": \"enum_value permalink\",\n                \"className\": \"anchor before\"\n              }}><svg parentName=\"a\" {...{\n                  \"aria-hidden\": \"true\",\n                  \"focusable\": \"false\",\n                  \"height\": \"16\",\n                  \"version\": \"1.1\",\n                  \"viewBox\": \"0 0 16 16\",\n                  \"width\": \"16\"\n                }}><path parentName=\"svg\" {...{\n                    \"fillRule\": \"evenodd\",\n                    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n                  }}></path></svg></a><code parentName=\"h6\" {...{\n                \"className\": \"language-text\"\n              }}>{`ENUM_VALUE`}</code></h6>\n            <p><code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`visitEnumValue(value: GraphQLEnumValue)`}</code></p>\n          </td>\n          <td>\n            <p>{`The definition of one value within an `}<a parentName=\"p\" {...{\n                \"href\": \"/v2/schema/schema/#enum-types\"\n              }}>{`enum`}</a></p>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <h6 {...{\n              \"id\": \"input_object\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h6\" {...{\n                \"href\": \"#input_object\",\n                \"aria-label\": \"input_object permalink\",\n                \"className\": \"anchor before\"\n              }}><svg parentName=\"a\" {...{\n                  \"aria-hidden\": \"true\",\n                  \"focusable\": \"false\",\n                  \"height\": \"16\",\n                  \"version\": \"1.1\",\n                  \"viewBox\": \"0 0 16 16\",\n                  \"width\": \"16\"\n                }}><path parentName=\"svg\" {...{\n                    \"fillRule\": \"evenodd\",\n                    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n                  }}></path></svg></a><code parentName=\"h6\" {...{\n                \"className\": \"language-text\"\n              }}>{`INPUT_OBJECT`}</code></h6>\n            <p><code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`visitInputObject(object: GraphQLInputObjectType)`}</code></p>\n          </td>\n          <td>\n            <p>{`The definition of an `}<a parentName=\"p\" {...{\n                \"href\": \"/v2/schema/schema/#input-types\"\n              }}>{`input type`}</a></p>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <h6 {...{\n              \"id\": \"input_field_definition\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h6\" {...{\n                \"href\": \"#input_field_definition\",\n                \"aria-label\": \"input_field_definition permalink\",\n                \"className\": \"anchor before\"\n              }}><svg parentName=\"a\" {...{\n                  \"aria-hidden\": \"true\",\n                  \"focusable\": \"false\",\n                  \"height\": \"16\",\n                  \"version\": \"1.1\",\n                  \"viewBox\": \"0 0 16 16\",\n                  \"width\": \"16\"\n                }}><path parentName=\"svg\" {...{\n                    \"fillRule\": \"evenodd\",\n                    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n                  }}></path></svg></a><code parentName=\"h6\" {...{\n                \"className\": \"language-text\"\n              }}>{`INPUT_FIELD_DEFINITION`}</code></h6>\n            <p><code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`visitInputFieldDefinition(field: GraphQLInputField)`}</code></p>\n          </td>\n          <td>\n            <p>{`The definition of a field within an `}<a parentName=\"p\" {...{\n                \"href\": \"/v2/schema/schema/#input-types\"\n              }}>{`input type`}</a></p>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <h6 {...{\n              \"id\": \"schema\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h6\" {...{\n                \"href\": \"#schema\",\n                \"aria-label\": \"schema permalink\",\n                \"className\": \"anchor before\"\n              }}><svg parentName=\"a\" {...{\n                  \"aria-hidden\": \"true\",\n                  \"focusable\": \"false\",\n                  \"height\": \"16\",\n                  \"version\": \"1.1\",\n                  \"viewBox\": \"0 0 16 16\",\n                  \"width\": \"16\"\n                }}><path parentName=\"svg\" {...{\n                    \"fillRule\": \"evenodd\",\n                    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n                  }}></path></svg></a><code parentName=\"h6\" {...{\n                \"className\": \"language-text\"\n              }}>{`SCHEMA`}</code></h6>\n            <p><code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`visitSchema(schema: GraphQLSchema)`}</code></p>\n          </td>\n          <td>\n            <p>{`The top-level `}<code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`schema`}</code>{` object declaration with `}<code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`query`}</code>{`, `}<code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`mutation`}</code>{`, and/or `}<code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`subscription`}</code>{` fields (`}<a parentName=\"p\" {...{\n                \"href\": \"https://spec.graphql.org/June2018/#example-e2969\"\n              }}>{`this declaration is usually omitted`}</a>{`)`}</p>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"implementing\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#implementing\",\n        \"aria-label\": \"implementing permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Implementing`}</h2>\n    <p>{`After you define your directive and its valid locations, you still need to define the logic that Apollo Server executes whenever it `}<em parentName=\"p\">{`encounters`}</em>{` the directive in your schema.`}</p>\n    <p>{`To accomplish this, you create a subclass of `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`SchemaDirectiveVisitor`}</code>{`, a class that's included in Apollo Server as part of the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/apollographql/graphql-tools\"\n      }}><code parentName=\"a\" {...{\n          \"className\": \"language-text\"\n        }}>{`graphql-tools`}</code>{` package`}</a>{`.`}</p>\n    <p>{`In your subclass, you override the `}<strong parentName=\"p\">{`visitor method`}</strong>{` for `}<em parentName=\"p\">{`each location`}</em>{` your directive can appear in. You can see each location's corresponding visitor method in `}<a parentName=\"p\" {...{\n        \"href\": \"#supported-locations\"\n      }}>{`the table above`}</a>{`.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Apollo Server includes `}<code parentName=\"p\" {...{\n          \"className\": \"language-text\"\n        }}>{`graphql-tools`}</code>{` version 4. To use another version of the library, see `}<a parentName=\"p\" {...{\n          \"href\": \"/v2/installing-graphql-tools/\"\n        }}>{`Using a different version of `}<code parentName=\"a\" {...{\n            \"className\": \"language-text\"\n          }}>{`graphql-tools`}</code></a>{`.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"example-deprecated\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#example-deprecated\",\n        \"aria-label\": \"example deprecated permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Example: `}<code parentName=\"h3\" {...{\n        \"className\": \"language-text\"\n      }}>{`@deprecated`}</code></h3>\n    <p>{`Here's a possible implementation of the default `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`@deprecated`}</code>{` directive:`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title\"\n    }}>{`DeprecatedDirective.js`}</div>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"js\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-js line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` SchemaDirectiveVisitor `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`require`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"apollo-server\"`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// Subclass of SchemaDirectiveVisitor`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`export`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`class`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`DeprecatedDirective`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`extends`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`SchemaDirectiveVisitor`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// Visitor methods:`}</span>{`\n\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// Called when an object field is @deprecated`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`public`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`visitFieldDefinition`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token literal-property property\"\n            }}>{`field`}</span><span parentName=\"span\" {...{\n              \"className\": \"token operator\"\n            }}>{`:`}</span>{` GraphQLField`}<span parentName=\"span\" {...{\n              \"className\": \"token operator\"\n            }}>{`<`}</span>{`any`}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` any`}<span parentName=\"span\" {...{\n              \"className\": \"token operator\"\n            }}>{`>`}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    field`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`isDeprecated `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token boolean\"\n          }}>{`true`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    field`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`deprecationReason `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`args`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`reason`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// Called when an enum value is @deprecated`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`public`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`visitEnumValue`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token literal-property property\"\n            }}>{`value`}</span><span parentName=\"span\" {...{\n              \"className\": \"token operator\"\n            }}>{`:`}</span>{` GraphQLEnumValue`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    value`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`isDeprecated `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token boolean\"\n          }}>{`true`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    value`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`deprecationReason `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`args`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`reason`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`This subclass adds two fields to the executable schema's representation of a deprecated field or enum value: a boolean indicating that the item `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`isDeprecated`}</code>{`, and a string indicating the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`deprecationReason`}</code>{`. The reason is taken directly from the directive's `}<a parentName=\"p\" {...{\n        \"href\": \"#defining\"\n      }}><code parentName=\"a\" {...{\n          \"className\": \"language-text\"\n        }}>{`reason`}</code>{` argument`}</a>{`.`}</p>\n    <p>{`To add this logic to Apollo Server, you pass the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`DeprecatedDirective`}</code>{` class to the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`ApolloServer`}</code>{` constructor via the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`schemaDirectives`}</code>{` object:`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title\"\n    }}>{`index.js`}</div>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"js\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-js line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` ApolloServer`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` gql `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`require`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"apollo-server\"`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` DeprecatedDirective `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`require`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"./DeprecatedDirective\"`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` typeDefs `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` gql`}<span parentName=\"code\" {...{\n            \"className\": \"token template-string\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}></span>{`\n`}<span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`  type ExampleType {`}</span>{`\n`}<span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`    newField: String`}</span>{`\n`}<span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`    oldField: String @deprecated(reason: \"Use \\\\\\`newField\\\\\\`.\")`}</span>{`\n`}<span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`  }`}</span>{`\n`}<span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}></span><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` server `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`ApolloServer`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  typeDefs`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n  resolvers`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`schemaDirectives`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// Object key must match directive name, minus '@'`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"gatsby-highlight-code-line\"\n          }}>{`    `}<span parentName=\"span\" {...{\n              \"className\": \"token literal-property property\"\n            }}>{`deprecated`}</span><span parentName=\"span\" {...{\n              \"className\": \"token operator\"\n            }}>{`:`}</span>{` DeprecatedDirective`}</span>{`  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\nserver`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`listen`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`then`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` url `}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=>`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  console`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`log`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token template-string\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`🚀 Server ready at `}</span><span parentName=\"span\" {...{\n              \"className\": \"token interpolation\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token interpolation-punctuation punctuation\"\n              }}>{`\\${`}</span>{`url`}<span parentName=\"span\" {...{\n                \"className\": \"token interpolation-punctuation punctuation\"\n              }}>{`}`}</span></span><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`When Apollo Server parses your schema SDL to create your executable schema, it automatically initializes a separate `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`DeprecatedDirective`}</code>{` for `}<em parentName=\"p\">{`each instance`}</em>{` of `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`@deprecated`}</code>{` it encounters. It then calls the appropriate visitor method for the current location.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`You can give your `}<code parentName=\"p\" {...{\n          \"className\": \"language-text\"\n        }}>{`SchemaDirectiveVisitor`}</code>{` subclass any name. It doesn't need to match the name of the directive it's used for (you can even use the same subclass for multiple directives).`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"running-directive-logic-on-an-executable-schema\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#running-directive-logic-on-an-executable-schema\",\n        \"aria-label\": \"running directive logic on an executable schema permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Running directive logic on an executable schema`}</h3>\n    <p>{`If Apollo Server has `}<em parentName=\"p\">{`already`}</em>{` parsed your SDL string into an executable schema, you can still execute directive logic by calling the static method `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`SchemaDirectiveVisitor.visitSchemaDirectives`}</code>{`. This method takes your executable schema, along the same form of directive map you provide to the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`schemaDirectives`}</code>{` constructor option:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"js\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-js line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}>{`SchemaDirectiveVisitor`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`visitSchemaDirectives`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`schema`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`deprecated`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` DeprecatedDirective\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <h2 {...{\n      \"id\": \"transforming-resolved-fields\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#transforming-resolved-fields\",\n        \"aria-label\": \"transforming resolved fields permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Transforming resolved fields`}</h2>\n    <p>{`A custom directive can transform a resolved GraphQL field's value `}<em parentName=\"p\">{`before`}</em>{` it's returned to the requesting client.`}</p>\n    <h3 {...{\n      \"id\": \"example-uppercasing-strings\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#example-uppercasing-strings\",\n        \"aria-label\": \"example uppercasing strings permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Example: Uppercasing strings`}</h3>\n    <p>{`Suppose you want to convert certain `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`String`}</code>{` fields in your schema to uppercase before they're returned.`}</p>\n    <p>{`This example defines an `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`@uppercase`}</code>{` directive for this purpose:`}</p>\n    <ExpansionPanel title=\"Click to expand\" mdxType=\"ExpansionPanel\">\n      <div {...{\n        \"className\": \"gatsby-code-title\"\n      }}>{`index.js`}</div>\n      <div {...{\n        \"className\": \"gatsby-highlight\",\n        \"data-language\": \"js\"\n      }}><pre parentName=\"div\" {...{\n          \"style\": {\n            \"counterReset\": \"linenumber NaN\"\n          },\n          \"className\": \"language-js line-numbers\"\n        }}><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}><span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` ApolloServer`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` gql`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` SchemaDirectiveVisitor `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`require`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`\"apollo-server\"`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` defaultFieldResolver `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`require`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`\"graphql\"`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` typeDefs `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` gql`}<span parentName=\"code\" {...{\n              \"className\": \"token template-string\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token template-punctuation string\"\n              }}>{`\\``}</span><span parentName=\"span\" {...{\n                \"className\": \"token string\"\n              }}>{`\n  directive @uppercase on FIELD_DEFINITION\n\n  type Query {\n    hello: String @uppercase\n  }\n`}</span><span parentName=\"span\" {...{\n                \"className\": \"token template-punctuation string\"\n              }}>{`\\``}</span></span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` resolvers `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token literal-property property\"\n            }}>{`Query`}</span><span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`hello`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`return`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`\"Hello World!\"`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`class`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token class-name\"\n            }}>{`UpperCaseDirective`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`extends`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token class-name\"\n            }}>{`SchemaDirectiveVisitor`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// Called on server startup for each @uppercase field`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`visitFieldDefinition`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token parameter\"\n            }}>{`field`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// Obtain the field's resolver`}</span>{`\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` resolve `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` defaultFieldResolver `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` field`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// *Replace* the field's resolver with a function`}</span>{`\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// that calls the *original* resolver, then converts`}</span>{`\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// the result to uppercase before returning`}</span>{`\n    field`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function-variable function\"\n            }}>{`resolve`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`async`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`function`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token parameter\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token operator\"\n              }}>{`...`}</span>{`args`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` result `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`await`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`resolve`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`apply`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`this`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` args`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`if`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`typeof`}</span>{` result `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`===`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`\"string\"`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n        `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`return`}</span>{` result`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`toUpperCase`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`return`}</span>{` result`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{`\n\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` server `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token class-name\"\n            }}>{`ApolloServer`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n  typeDefs`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{`\n  resolvers`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token literal-property property\"\n            }}>{`schemaDirectives`}</span><span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token literal-property property\"\n            }}>{`upper`}</span><span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`:`}</span>{` UpperCaseDirective`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\nserver`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`listen`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`then`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token parameter\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`{`}</span>{` url `}<span parentName=\"span\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`}`}</span></span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=>`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n  console`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`log`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token template-string\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token template-punctuation string\"\n              }}>{`\\``}</span><span parentName=\"span\" {...{\n                \"className\": \"token string\"\n              }}>{`🚀 Server ready at `}</span><span parentName=\"span\" {...{\n                \"className\": \"token interpolation\"\n              }}><span parentName=\"span\" {...{\n                  \"className\": \"token interpolation-punctuation punctuation\"\n                }}>{`\\${`}</span>{`url`}<span parentName=\"span\" {...{\n                  \"className\": \"token interpolation-punctuation punctuation\"\n                }}>{`}`}</span></span><span parentName=\"span\" {...{\n                \"className\": \"token template-punctuation string\"\n              }}>{`\\``}</span></span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span></code><span parentName=\"pre\" {...{\n            \"aria-hidden\": \"true\",\n            \"className\": \"line-numbers-rows\",\n            \"style\": {\n              \"whiteSpace\": \"normal\",\n              \"width\": \"auto\",\n              \"left\": \"0\"\n            }\n          }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    </ExpansionPanel>\n    <a href=\"https://codesandbox.io/s/github/apollographql/docs-examples/tree/main/custom-directives/upper-case-directive?fontsize=14&hidenavigation=1&theme=dark\">\n  <img alt=\"Edit upper-case-directive\" src=\"https://codesandbox.io/static/img/play-codesandbox.svg\"></img>\n    </a>\n    <p>{`This code `}<em parentName=\"p\">{`replaces`}</em>{` the resolver of an `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`@uppercase`}</code>{` field with a new function. This new function first calls the `}<em parentName=\"p\">{`original`}</em>{` resolver, then transforms its result to uppercase (assuming it's a string) before returning it.`}</p>\n    <h3 {...{\n      \"id\": \"example-formatting-dates\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#example-formatting-dates\",\n        \"aria-label\": \"example formatting dates permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Example: Formatting dates`}</h3>\n    <p>{`Suppose your schema defines a `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Date`}</code>{` custom scalar, and you want querying clients to be able to specify a string format for the returned date (e.g., specify `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`dd/mm/yyyy HH:MM:ss`}</code>{` for a string like `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`10/03/2021 14:53:03`}</code>{`).`}</p>\n    <p>{`This example defines a `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`@date`}</code>{` directive for this purpose:`}</p>\n    <ExpansionPanel title=\"Click to expand\" mdxType=\"ExpansionPanel\">\n      <div {...{\n        \"className\": \"gatsby-highlight\",\n        \"data-language\": \"js\"\n      }}><pre parentName=\"div\" {...{\n          \"style\": {\n            \"counterReset\": \"linenumber NaN\"\n          },\n          \"className\": \"language-js line-numbers\"\n        }}><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}><span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` ApolloServer`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` gql`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` SchemaDirectiveVisitor `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`require`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`'apollo-server'`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` defaultFieldResolver `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`require`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`'graphql'`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` formatDate `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`require`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`'dateformat'`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` typeDefs `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` gql`}<span parentName=\"code\" {...{\n              \"className\": \"token template-string\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token template-punctuation string\"\n              }}>{`\\``}</span><span parentName=\"span\" {...{\n                \"className\": \"token string\"\n              }}>{`\n\n  # Define the directive with a default date format\n  directive @date(\n    defaultFormat: String = \"dd/mm/yyyy HH:MM:ss\"\n  ) on FIELD_DEFINITION\n\n  scalar Date\n\n  type Post {\n    # You can override the defaultFormat for individual fields\n    published: Date @date(defaultFormat: \"dd/mm/yyyy\")\n  }\n`}</span><span parentName=\"span\" {...{\n                \"className\": \"token template-punctuation string\"\n              }}>{`\\``}</span></span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`class`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token class-name\"\n            }}>{`FormattableDateDirective`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`extends`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token class-name\"\n            }}>{`SchemaDirectiveVisitor`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`public`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`visitFieldDefinition`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token parameter\"\n            }}>{`field`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// Get the field's resolver`}</span>{`\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` resolve `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` defaultFieldResolver `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` field`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// Get the default date format`}</span>{`\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` defaultFormat `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`this`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span>{`args`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// *Add* a \\`format\\` argument to the GraphQL field for`}</span>{`\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// clients to use`}</span>{`\n    field`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span>{`args`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`push`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token literal-property property\"\n            }}>{`name`}</span><span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`'format'`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token literal-property property\"\n            }}>{`type`}</span><span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`:`}</span>{` GraphQLString\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// *Replace* the field's resolver with this function, which`}</span>{`\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// first calls the *original* resolver, then formats the`}</span>{`\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// returned date`}</span>{`\n    field`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function-variable function\"\n            }}>{`resolve`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`async`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`function`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token parameter\"\n            }}>{`source`}<span parentName=\"span\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`,`}</span>{`\n      `}<span parentName=\"span\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`{`}</span>{` format`}<span parentName=\"span\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`,`}</span>{` `}<span parentName=\"span\" {...{\n                \"className\": \"token operator\"\n              }}>{`...`}</span>{`otherArgs `}<span parentName=\"span\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`}`}</span><span parentName=\"span\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`,`}</span>{`\n      context`}<span parentName=\"span\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`,`}</span>{`\n      info`}<span parentName=\"span\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`,`}</span></span>{`\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` date `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`await`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`resolve`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`call`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`this`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` source`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` otherArgs`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` context`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` info`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// If the client does not specify a format, use defaultFormat`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`return`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`formatDate`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span>{`date`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` format `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`||`}</span>{` defaultFormat`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// The field now returns a String instead of a Date.`}</span>{`\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// Update it accordingly.`}</span>{`\n    field`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span>{`type `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` GraphQLString`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{`\n\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` server `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token class-name\"\n            }}>{`ApolloServer`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n  typeDefs`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token literal-property property\"\n            }}>{`schemaDirectives`}</span><span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token literal-property property\"\n            }}>{`date`}</span><span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`:`}</span>{` FormattableDateDirective\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\nserver`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`listen`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`then`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token parameter\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`{`}</span>{` url `}<span parentName=\"span\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`}`}</span></span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=>`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n  console`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`log`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token template-string\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token template-punctuation string\"\n              }}>{`\\``}</span><span parentName=\"span\" {...{\n                \"className\": \"token string\"\n              }}>{`🚀 Server ready at `}</span><span parentName=\"span\" {...{\n                \"className\": \"token interpolation\"\n              }}><span parentName=\"span\" {...{\n                  \"className\": \"token interpolation-punctuation punctuation\"\n                }}>{`\\${`}</span>{`url`}<span parentName=\"span\" {...{\n                  \"className\": \"token interpolation-punctuation punctuation\"\n                }}>{`}`}</span></span><span parentName=\"span\" {...{\n                \"className\": \"token template-punctuation string\"\n              }}>{`\\``}</span></span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span></code><span parentName=\"pre\" {...{\n            \"aria-hidden\": \"true\",\n            \"className\": \"line-numbers-rows\",\n            \"style\": {\n              \"whiteSpace\": \"normal\",\n              \"width\": \"auto\",\n              \"left\": \"0\"\n            }\n          }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    </ExpansionPanel>\n    <p>{`Now the client can specify a desired `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`format`}</code>{` argument when requesting the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Post.published`}</code>{` field, or omit the argument to use the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`defaultFormat`}</code>{` string specified in the schema.`}</p>\n    <h2 {...{\n      \"id\": \"additional-examples\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#additional-examples\",\n        \"aria-label\": \"additional examples permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Additional examples`}</h2>\n    <h3 {...{\n      \"id\": \"fetching-data-from-a-rest-api\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#fetching-data-from-a-rest-api\",\n        \"aria-label\": \"fetching data from a rest api permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Fetching data from a REST API`}</h3>\n    <p>{`Suppose you've defined an object type that corresponds to a `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Representational_state_transfer\"\n      }}>{`REST`}</a>{` resource, and you want to avoid implementing resolver functions for every field:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"js\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-js line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` ApolloServer`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` gql`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` SchemaDirectiveVisitor `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`require`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"apollo-server\"`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` typeDefs `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` gql`}<span parentName=\"code\" {...{\n            \"className\": \"token template-string\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`\n  directive @rest(url: String) on FIELD_DEFINITION\n\n  type Query {\n    people: [Person] @rest(url: \"/api/v1/people\")\n  }\n`}</span><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`class`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`RestDirective`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`extends`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`SchemaDirectiveVisitor`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`public`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`visitFieldDefinition`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`field`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` url `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`args`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    field`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function-variable function\"\n          }}>{`resolve`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=>`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`fetch`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`url`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` server `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`ApolloServer`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  typeDefs`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`schemaDirectives`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`rest`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` RestDirective\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\nserver`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`listen`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`then`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` url `}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=>`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  console`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`log`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token template-string\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`🚀 Server ready at `}</span><span parentName=\"span\" {...{\n              \"className\": \"token interpolation\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token interpolation-punctuation punctuation\"\n              }}>{`\\${`}</span>{`url`}<span parentName=\"span\" {...{\n                \"className\": \"token interpolation-punctuation punctuation\"\n              }}>{`}`}</span></span><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`There are many more issues to consider when implementing a real GraphQL wrapper over a REST endpoint (such as how to do caching or pagination), but this example demonstrates the basic structure.`}</p>\n    <h3 {...{\n      \"id\": \"marking-strings-for-internationalization\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#marking-strings-for-internationalization\",\n        \"aria-label\": \"marking strings for internationalization permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Marking strings for internationalization`}</h3>\n    <p>{`Suppose you have a function called `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`translate`}</code>{` that takes a string, a path identifying that string's role in your application, and a target locale for the translation.`}</p>\n    <p>{`Here's how you might make sure `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`translate`}</code>{` is used to localize the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`greeting`}</code>{` field of a `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Query`}</code>{` type:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"js\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-js line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` ApolloServer`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` gql`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` SchemaDirectiveVisitor `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`require`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"apollo-server\"`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` defaultFieldResolver `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`require`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'graphql'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` typeDefs `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` gql`}<span parentName=\"code\" {...{\n            \"className\": \"token template-string\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`\n  directive @intl on FIELD_DEFINITION\n\n  type Query {\n    greeting: String @intl\n  }\n`}</span><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`class`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`IntlDirective`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`extends`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`SchemaDirectiveVisitor`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`visitFieldDefinition`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`field`}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` details`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` resolve `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` defaultFieldResolver `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` field`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    field`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function-variable function\"\n          }}>{`resolve`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`async`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token operator\"\n            }}>{`...`}</span>{`args`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` context `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` args`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span><span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`2`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` defaultText `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`await`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`resolve`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`apply`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` args`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// In this example, path would be [\"Query\", \"greeting\"]:`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` path `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`details`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`objectType`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`name`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` field`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`name`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`return`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`translate`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`defaultText`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` path`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` context`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`locale`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` server `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`ApolloServer`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  typeDefs`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`schemaDirectives`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`intl`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` IntlDirective\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\nserver`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`listen`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`then`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` url `}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=>`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  console`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`log`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token template-string\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`🚀 Server ready at `}</span><span parentName=\"span\" {...{\n              \"className\": \"token interpolation\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token interpolation-punctuation punctuation\"\n              }}>{`\\${`}</span>{`url`}<span parentName=\"span\" {...{\n                \"className\": \"token interpolation-punctuation punctuation\"\n              }}>{`}`}</span></span><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`GraphQL is great for internationalization, since a GraphQL server can access unlimited translation data, and clients can simply ask for the translations they need.`}</p>\n    <h3 {...{\n      \"id\": \"enforcing-access-permissions\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#enforcing-access-permissions\",\n        \"aria-label\": \"enforcing access permissions permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Enforcing access permissions`}</h3>\n    <p>{`Imagine a hypothetical `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`@auth`}</code>{` directive that takes an argument `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`requires`}</code>{` of type `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Role`}</code>{`, which defaults to `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`ADMIN`}</code>{`. This `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`@auth`}</code>{` directive can appear on an `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`OBJECT`}</code>{` like `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`User`}</code>{` to set default access permissions for all `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`User`}</code>{` fields, as well as appearing on individual fields, to enforce field-specific `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`@auth`}</code>{` restrictions:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"graphql\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-graphql line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-graphql\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`directive`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token directive function\"\n          }}>{`@auth`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token attr-name\"\n          }}>{`requires`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`Role`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`ADMIN`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`on`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`OBJECT`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`|`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`FIELD_DEFINITION`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`enum`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`Role`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`ADMIN`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`REVIEWER`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`USER`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`UNKNOWN`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`type`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`User`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token directive function\"\n          }}>{`@auth`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token attr-name\"\n          }}>{`requires`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`USER`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token attr-name\"\n          }}>{`name`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token scalar\"\n          }}>{`String`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token attr-name\"\n          }}>{`banned`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token scalar\"\n          }}>{`Boolean`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token directive function\"\n          }}>{`@auth`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token attr-name\"\n          }}>{`requires`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`ADMIN`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token attr-name\"\n          }}>{`canPost`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token scalar\"\n          }}>{`Boolean`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token directive function\"\n          }}>{`@auth`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token attr-name\"\n          }}>{`requires`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`REVIEWER`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`What makes this example tricky is that the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`OBJECT`}</code>{` version of the directive needs to wrap all fields of the object, even though some of those fields may be individually wrapped by `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`@auth`}</code>{` directives at the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`FIELD_DEFINITION`}</code>{` level, and we would prefer not to rewrap resolvers if we can help it:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"js\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-js line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` ApolloServer`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` gql`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` SchemaDirectiveVisitor `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`require`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"apollo-server\"`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` defaultFieldResolver `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`require`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'graphql'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`class`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`AuthDirective`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`extends`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`SchemaDirectiveVisitor`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`visitObject`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`type`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`ensureFieldsWrapped`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`type`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    type`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`_requiredAuthRole `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`args`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`requires`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// Visitor methods for nested types like fields and arguments`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// also receive a details object that provides information about`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// the parent and grandparent types.`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`visitFieldDefinition`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`field`}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` details`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`ensureFieldsWrapped`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`details`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`objectType`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    field`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`_requiredAuthRole `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`args`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`requires`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`ensureFieldsWrapped`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`objectType`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// Mark the GraphQLObjectType object to avoid re-wrapping:`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`if`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`objectType`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`_authFieldsWrapped`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`return`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    objectType`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`_authFieldsWrapped `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token boolean\"\n          }}>{`true`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` fields `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` objectType`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`getFields`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n    Object`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`keys`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`fields`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`forEach`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`fieldName`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=>`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` field `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` fields`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`fieldName`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` resolve `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` defaultFieldResolver `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` field`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n      field`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function-variable function\"\n          }}>{`resolve`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`async`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token operator\"\n            }}>{`...`}</span>{`args`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// Get the required Role from the field first, falling back`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// to the objectType if no Role is required by the field:`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` requiredRole `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{`\n          field`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`_requiredAuthRole `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`||`}</span>{`\n          objectType`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`_requiredAuthRole`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`if`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`!`}</span>{` requiredRole`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n          `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`return`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`resolve`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`apply`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` args`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` context `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` args`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span><span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`2`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` user `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`await`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`getUser`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`context`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`headers`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`authToken`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`if`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`!`}</span>{` user`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`hasRole`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`requiredRole`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n          `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`throw`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`Error`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"not authorized\"`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`return`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`resolve`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`apply`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` args`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` server `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`ApolloServer`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  typeDefs`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`schemaDirectives`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`auth`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` AuthDirective`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`authorized`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` AuthDirective`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`authenticated`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` AuthDirective\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\nserver`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`listen`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`then`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` url `}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=>`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  console`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`log`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token template-string\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`🚀 Server ready at `}</span><span parentName=\"span\" {...{\n              \"className\": \"token interpolation\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token interpolation-punctuation punctuation\"\n              }}>{`\\${`}</span>{`url`}<span parentName=\"span\" {...{\n                \"className\": \"token interpolation-punctuation punctuation\"\n              }}>{`}`}</span></span><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`One drawback of this approach is that it does not guarantee fields will be wrapped if they are added to the schema after `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`AuthDirective`}</code>{` is applied, and the whole `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`getUser(context.headers.authToken)`}</code>{` is a made-up API that would need to be fleshed out. In other words, we’ve glossed over some of the details that would be required for a production-ready implementation of this directive, though we hope the basic structure shown here inspires you to find clever solutions to the remaining problems.`}</p>\n    <h3 {...{\n      \"id\": \"enforcing-value-restrictions\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#enforcing-value-restrictions\",\n        \"aria-label\": \"enforcing value restrictions permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Enforcing value restrictions`}</h3>\n    <p>{`Suppose you want to enforce a maximum length for a string-valued field:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"js\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-js line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` ApolloServer`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` gql`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` SchemaDirectiveVisitor `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`require`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'apollo-server'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` GraphQLScalarType`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` GraphQLNonNull `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`require`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'graphql'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` typeDefs `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` gql`}<span parentName=\"code\" {...{\n            \"className\": \"token template-string\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`\n  directive @length(max: Int) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION\n\n  type Query {\n    books: [Book]\n  }\n\n  type Book {\n    title: String @length(max: 50)\n  }\n\n  type Mutation {\n    createBook(book: BookInput): Book\n  }\n\n  input BookInput {\n    title: String! @length(max: 50)\n  }\n`}</span><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`class`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`LengthDirective`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`extends`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`SchemaDirectiveVisitor`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`visitInputFieldDefinition`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`field`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`wrapType`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`field`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`visitFieldDefinition`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`field`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`wrapType`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`field`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// Replace field.type with a custom GraphQLScalarType that enforces the`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// length restriction.`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`wrapType`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`field`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`if`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`\n      field`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`type `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`instanceof`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`GraphQLNonNull`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`&&`}</span>{`\n      field`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`type`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`ofType `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`instanceof`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`GraphQLScalarType`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n      field`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`type `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`GraphQLNonNull`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`LimitedLengthType`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`field`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`type`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`ofType`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`args`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`max`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`else`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`if`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`field`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`type `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`instanceof`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`GraphQLScalarType`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n      field`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`type `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`LimitedLengthType`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`field`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`type`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`args`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`max`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`else`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`throw`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`Error`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token template-string\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`Not a scalar type: `}</span><span parentName=\"span\" {...{\n              \"className\": \"token interpolation\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token interpolation-punctuation punctuation\"\n              }}>{`\\${`}</span>{`field`}<span parentName=\"span\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`.`}</span>{`type`}<span parentName=\"span\" {...{\n                \"className\": \"token interpolation-punctuation punctuation\"\n              }}>{`}`}</span></span><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`class`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`LimitedLengthType`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`extends`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`GraphQLScalarType`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`constructor`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`type`}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` maxLength`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`super`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`name`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token template-string\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`LengthAtMost`}</span><span parentName=\"span\" {...{\n              \"className\": \"token interpolation\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token interpolation-punctuation punctuation\"\n              }}>{`\\${`}</span>{`maxLength`}<span parentName=\"span\" {...{\n                \"className\": \"token interpolation-punctuation punctuation\"\n              }}>{`}`}</span></span><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// For more information about GraphQLScalar type (de)serialization,`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// see the graphql-js implementation:`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// https://github.com/graphql/graphql-js/blob/31ae8a8e8312/src/type/definition.js#L425-L446`}</span>{`\n\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`serialize`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`value`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n        value `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` type`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`serialize`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`value`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n        assert`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`isAtMost`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`value`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`length`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` maxLength`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`return`}</span>{` value`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`parseValue`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`value`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`return`}</span>{` type`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`parseValue`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`value`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`parseLiteral`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`ast`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`return`}</span>{` type`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`parseLiteral`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`ast`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` server `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`ApolloServer`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  typeDefs`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n  resolvers`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`schemaDirectives`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`length`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` LengthDirective`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\nserver`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`listen`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`then`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` url `}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=>`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  console`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`log`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token template-string\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`🚀 Server ready at `}</span><span parentName=\"span\" {...{\n              \"className\": \"token interpolation\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token interpolation-punctuation punctuation\"\n              }}>{`\\${`}</span>{`url`}<span parentName=\"span\" {...{\n                \"className\": \"token interpolation-punctuation punctuation\"\n              }}>{`}`}</span></span><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <h3 {...{\n      \"id\": \"synthesizing-unique-ids\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#synthesizing-unique-ids\",\n        \"aria-label\": \"synthesizing unique ids permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Synthesizing unique IDs`}</h3>\n    <p>{`Suppose your database uses incrementing IDs for each resource type, so IDs are not unique across all resource types. Here’s how you might synthesize a field called `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`uid`}</code>{` that combines the object type with various field values to produce an ID that’s unique across your schema:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"js\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-js line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` ApolloServer`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` gql`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` SchemaDirectiveVisitor `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`require`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"apollo-server\"`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` GraphQLID `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`require`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"graphql\"`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` createHash `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`require`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"crypto\"`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` typeDefs `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` gql`}<span parentName=\"code\" {...{\n            \"className\": \"token template-string\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`\n  directive @uniqueID(\n    # The name of the new ID field, \"uid\" by default:\n    name: String = \"uid\"\n\n    # Which fields to include in the new ID:\n    from: [String] = [\"id\"]\n  ) on OBJECT\n\n  # Since this type just uses the default values of name and from,\n  # we don't have to pass any arguments to the directive:\n  type Location @uniqueID {\n    id: Int\n    address: String\n  }\n\n  # This type uses both the person's name and the personID field,\n  # in addition to the \"Person\" type name, to construct the ID:\n  type Person @uniqueID(from: [\"name\", \"personID\"]) {\n    personID: Int\n    name: String\n  }\n`}</span><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`class`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`UniqueIdDirective`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`extends`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`SchemaDirectiveVisitor`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`visitObject`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`type`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` name`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` from `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`this`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`args`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` fields `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` type`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`getFields`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`if`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`name `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`in`}</span>{` fields`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`throw`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`Error`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token template-string\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`Conflicting field name `}</span><span parentName=\"span\" {...{\n              \"className\": \"token interpolation\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token interpolation-punctuation punctuation\"\n              }}>{`\\${`}</span>{`name`}<span parentName=\"span\" {...{\n                \"className\": \"token interpolation-punctuation punctuation\"\n              }}>{`}`}</span></span><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n    fields`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`name`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n      name`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`type`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` GraphQLID`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`description`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'Unique ID'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`args`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`resolve`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`object`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` hash `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`createHash`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"sha1\"`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n        hash`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`update`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`type`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`name`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n        from`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`forEach`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`fieldName`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=>`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n          hash`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`update`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`String`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`object`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`fieldName`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`return`}</span>{` hash`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`digest`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"hex\"`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` server `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`ApolloServer`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  typeDefs`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n  resolvers`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`schemaDirectives`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`uniqueID`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` UniqueIdDirective\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\nserver`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`listen`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`then`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` url `}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=>`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  console`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`log`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token template-string\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`🚀 Server ready at `}</span><span parentName=\"span\" {...{\n              \"className\": \"token interpolation\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token interpolation-punctuation punctuation\"\n              }}>{`\\${`}</span>{`url`}<span parentName=\"span\" {...{\n                \"className\": \"token interpolation-punctuation punctuation\"\n              }}>{`}`}</span></span><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <h2 {...{\n      \"id\": \"declaring-schema-directives\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#declaring-schema-directives\",\n        \"aria-label\": \"declaring schema directives permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Declaring schema directives`}</h2>\n    <p>{`While the above examples should be sufficient to implement any `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`@directive`}</code>{` used in your schema, SDL syntax also supports declaring the names, argument types, default argument values, and permissible locations of any available directives:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"js\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-js line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}>{`directive @`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`auth`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`requires`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` Role `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`ADMIN`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` on `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`OBJECT`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`|`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`FIELD_DEFINITION`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`enum`}</span>{` Role `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`ADMIN`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`REVIEWER`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`USER`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`UNKNOWN`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n\ntype User @`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`auth`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token literal-property property\"\n            }}>{`requires`}</span><span parentName=\"span\" {...{\n              \"className\": \"token operator\"\n            }}>{`:`}</span>{` `}<span parentName=\"span\" {...{\n              \"className\": \"token constant\"\n            }}>{`USER`}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`name`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` String\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`banned`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` Boolean @`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`auth`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`requires`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`ADMIN`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`canPost`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` Boolean @`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`auth`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`requires`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`REVIEWER`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`This hypothetical `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`@auth`}</code>{` directive takes an argument named `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`requires`}</code>{` of type `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Role`}</code>{`, which defaults to `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`ADMIN`}</code>{` if `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`@auth`}</code>{` is used without passing an explicit `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`requires`}</code>{` argument. The `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`@auth`}</code>{` directive can appear on an `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`OBJECT`}</code>{` like `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`User`}</code>{` to set a default access control for all `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`User`}</code>{` fields, and also on individual fields, to enforce field-specific `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`@auth`}</code>{` restrictions.`}</p>\n    <p>{`Enforcing the requirements of the declaration is something a `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`SchemaDirectiveVisitor`}</code>{` implementation could do itself, in theory, but the SDL syntax is easer to read and write, and provides value even if you're not using the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`SchemaDirectiveVisitor`}</code>{` abstraction.`}</p>\n    <p>{`However, if you're implementing a reusable `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`SchemaDirectiveVisitor`}</code>{` for public consumption, you will probably not be the person writing the SDL syntax, so you may not have control over which directives the schema author decides to declare, and how. That's why a well-implemented, reusable `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`SchemaDirectiveVisitor`}</code>{` should consider overriding the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`getDirectiveDeclaration`}</code>{` method:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"js\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-js line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` ApolloServer`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` gql`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` SchemaDirectiveVisitor `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`require`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"apollo-server\"`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` DirectiveLocation`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` GraphQLDirective`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` GraphQLEnumType `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`require`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"graphql\"`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`class`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`AuthDirective`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`extends`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`SchemaDirectiveVisitor`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`public`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`visitObject`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token literal-property property\"\n            }}>{`object`}</span><span parentName=\"span\" {...{\n              \"className\": \"token operator\"\n            }}>{`:`}</span>{` GraphQLObjectType`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`...`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`public`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`visitFieldDefinition`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token literal-property property\"\n            }}>{`field`}</span><span parentName=\"span\" {...{\n              \"className\": \"token operator\"\n            }}>{`:`}</span>{` GraphQLField`}<span parentName=\"span\" {...{\n              \"className\": \"token operator\"\n            }}>{`<`}</span>{`any`}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` any`}<span parentName=\"span\" {...{\n              \"className\": \"token operator\"\n            }}>{`>`}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`...`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`public`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`static`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`getDirectiveDeclaration`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`directiveName`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` string`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`schema`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` GraphQLSchema`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` GraphQLDirective `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` previousDirective `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` schema`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`getDirective`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`directiveName`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`if`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`previousDirective`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// If a previous directive declaration exists in the schema, it may be`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// better to modify it than to return a new GraphQLDirective object.`}</span>{`\n      previousDirective`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`args`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`forEach`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`arg`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=>`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`if`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`arg`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`name `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`===`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'requires'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n          `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// Lower the default minimum Role from ADMIN to REVIEWER.`}</span>{`\n          arg`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`defaultValue `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'REVIEWER'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`return`}</span>{` previousDirective`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// If a previous directive with this name was not found in the schema,`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// there are several options:`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`//`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// 1. Construct a new GraphQLDirective (see below).`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// 2. Throw an exception to force the client to declare the directive.`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// 3. Return null, and forget about declaring this directive.`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`//`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// All three are valid options, since the visitor will still work without`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// any declared directives. In fact, unless you're publishing a directive`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// implementation for public consumption, you can probably just ignore`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// getDirectiveDeclaration altogether.`}</span>{`\n\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`return`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`GraphQLDirective`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`name`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` directiveName`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`locations`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`\n        DirectiveLocation`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`OBJECT`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n        DirectiveLocation`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`FIELD_DEFINITION`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`args`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`requires`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n          `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// Having the schema available here is important for obtaining`}</span>{`\n          `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// references to existing type objects, such as the Role enum.`}</span>{`\n          `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`type`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`schema`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`getType`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'Role'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`as`}</span>{` GraphQLEnumType`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n          `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// Set the default minimum Role to REVIEWER.`}</span>{`\n          `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`defaultValue`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'REVIEWER'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`Since the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`getDirectiveDeclaration`}</code>{` method receives not only the name of the directive but also the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`GraphQLSchema`}</code>{` object, it can modify and/or reuse previous declarations found in the schema, as an alternative to returning a totally new `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`GraphQLDirective`}</code>{` object. Either way, if the visitor returns a non-null `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`GraphQLDirective`}</code>{` from `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`getDirectiveDeclaration`}</code>{`, that declaration will be used to check arguments and permissible locations.`}</p>\n    <h2 {...{\n      \"id\": \"what-about-query-directives\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#what-about-query-directives\",\n        \"aria-label\": \"what about query directives permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`What about query directives?`}</h2>\n    <p>{`As its name suggests, the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`SchemaDirectiveVisitor`}</code>{` abstraction is specifically designed to enable transforming GraphQL schemas based on directives that appear in your SDL text.`}</p>\n    <p>{`While directive syntax can also appear in GraphQL queries sent from the client, implementing query directives would require runtime transformation of query documents. We have deliberately restricted this implementation to transformations that take place at server construction time.`}</p>\n    <p>{`We believe confining this logic to your schema is more sustainable than burdening your clients with it, though you can probably imagine a similar sort of abstraction for implementing query directives. If that possibility becomes a desire that becomes a need for you, let us know, and we may consider supporting query directives in a future version of these tools.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}