{"expireTime":9007200901519711000,"key":"gatsby-plugin-mdx-entire-payload-539c0a7ce9520890cab381bd8ec24568-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import { MultiCodeBlock } from 'gatsby-theme-apollo-docs';","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":59,"offset":59},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can add file upload support to Apollo Server via the third-party ","position":{"start":{"line":4,"column":1,"offset":61},"end":{"line":4,"column":70,"offset":130},"indent":[]}},{"type":"link","title":null,"url":"https://npm.im/graphql-upload","children":[{"type":"inlineCode","value":"graphql-upload","position":{"start":{"line":4,"column":71,"offset":131},"end":{"line":4,"column":87,"offset":147},"indent":[]}}],"position":{"start":{"line":4,"column":70,"offset":130},"end":{"line":4,"column":119,"offset":179},"indent":[]}},{"type":"text","value":" library. This package provides support for the ","position":{"start":{"line":4,"column":119,"offset":179},"end":{"line":4,"column":167,"offset":227},"indent":[]}},{"type":"inlineCode","value":"multipart/form-data","position":{"start":{"line":4,"column":167,"offset":227},"end":{"line":4,"column":188,"offset":248},"indent":[]}},{"type":"text","value":" content-type.","position":{"start":{"line":4,"column":188,"offset":248},"end":{"line":4,"column":202,"offset":262},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":61},"end":{"line":4,"column":202,"offset":262},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"New in Apollo Server 3:","position":{"start":{"line":6,"column":3,"offset":266},"end":{"line":6,"column":26,"offset":289},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":264},"end":{"line":6,"column":28,"offset":291},"indent":[]}},{"type":"text","value":" Apollo Server 3 does not contain a built-in integration with ","position":{"start":{"line":6,"column":28,"offset":291},"end":{"line":6,"column":90,"offset":353},"indent":[]}},{"type":"inlineCode","value":"graphql-upload","position":{"start":{"line":6,"column":90,"offset":353},"end":{"line":6,"column":106,"offset":369},"indent":[]}},{"type":"text","value":" like in Apollo Server 2. Instead, the instructions below show how to integrate it yourself. You cannot do this with the \"batteries-included\" ","position":{"start":{"line":6,"column":106,"offset":369},"end":{"line":6,"column":248,"offset":511},"indent":[]}},{"type":"inlineCode","value":"apollo-server","position":{"start":{"line":6,"column":248,"offset":511},"end":{"line":6,"column":263,"offset":526},"indent":[]}},{"type":"text","value":" library; you must use a web framework integration such as ","position":{"start":{"line":6,"column":263,"offset":526},"end":{"line":6,"column":322,"offset":585},"indent":[]}},{"type":"inlineCode","value":"apollo-server-express","position":{"start":{"line":6,"column":322,"offset":585},"end":{"line":6,"column":345,"offset":608},"indent":[]}},{"type":"text","value":" instead. This page shows how to integrate ","position":{"start":{"line":6,"column":345,"offset":608},"end":{"line":6,"column":388,"offset":651},"indent":[]}},{"type":"inlineCode","value":"graphql-upload","position":{"start":{"line":6,"column":388,"offset":651},"end":{"line":6,"column":404,"offset":667},"indent":[]}},{"type":"text","value":" with Express and Fastify. To implement similar functionality with another Node.js HTTP framework (e.g., Koa), see the ","position":{"start":{"line":6,"column":404,"offset":667},"end":{"line":6,"column":523,"offset":786},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/jaydenseric/graphql-upload","children":[{"type":"inlineCode","value":"graphql-upload","position":{"start":{"line":6,"column":524,"offset":787},"end":{"line":6,"column":540,"offset":803},"indent":[]}},{"type":"text","value":" documentation","position":{"start":{"line":6,"column":540,"offset":803},"end":{"line":6,"column":554,"offset":817},"indent":[]}}],"position":{"start":{"line":6,"column":523,"offset":786},"end":{"line":6,"column":602,"offset":865},"indent":[]}},{"type":"text","value":" for more information. Some integrations might need to use ","position":{"start":{"line":6,"column":602,"offset":865},"end":{"line":6,"column":661,"offset":924},"indent":[]}},{"type":"inlineCode","value":"graphql-upload","position":{"start":{"line":6,"column":661,"offset":924},"end":{"line":6,"column":677,"offset":940},"indent":[]}},{"type":"text","value":"'s ","position":{"start":{"line":6,"column":677,"offset":940},"end":{"line":6,"column":680,"offset":943},"indent":[]}},{"type":"inlineCode","value":"processRequest","position":{"start":{"line":6,"column":680,"offset":943},"end":{"line":6,"column":696,"offset":959},"indent":[]}},{"type":"text","value":" directly.","position":{"start":{"line":6,"column":696,"offset":959},"end":{"line":6,"column":706,"offset":969},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":264},"end":{"line":6,"column":706,"offset":969},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Integrating with Express","position":{"start":{"line":8,"column":5,"offset":975},"end":{"line":8,"column":29,"offset":999},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":971},"end":{"line":8,"column":29,"offset":999},"indent":[]}},{"type":"jsx","value":"<MultiCodeBlock>","position":{"start":{"line":10,"column":1,"offset":1001},"end":{"line":10,"column":17,"offset":1017},"indent":[]}},{"type":"code","lang":"ts:title=index.ts","meta":null,"value":"const express = require('express');\nconst { ApolloServer, gql } = require('apollo-server-express');\nconst {\n  GraphQLUpload,\n  graphqlUploadExpress, // A Koa implementation is also exported.\n} = require('graphql-upload');\nconst { finished } = require('stream/promises');\n\nconst typeDefs = gql`\n  # The implementation for this scalar is provided by the\n  # 'GraphQLUpload' export from the 'graphql-upload' package\n  # in the resolver map below.\n  scalar Upload\n\n  type File {\n    filename: String!\n    mimetype: String!\n    encoding: String!\n  }\n\n  type Query {\n    # This is only here to satisfy the requirement that at least one\n    # field be present within the 'Query' type.  This example does not\n    # demonstrate how to fetch uploads back.\n    otherFields: Boolean!\n  }\n\n  type Mutation {\n    # Multiple uploads are supported. See graphql-upload docs for details.\n    singleUpload(file: Upload!): File!\n  }\n`;\n\nconst resolvers = {\n  // This maps the `Upload` scalar to the implementation provided\n  // by the `graphql-upload` package.\n  Upload: GraphQLUpload,\n\n  Mutation: {\n    singleUpload: async (parent, { file }) => {\n      const { createReadStream, filename, mimetype, encoding } = await file;\n\n      // Invoking the `createReadStream` will return a Readable Stream.\n      // See https://nodejs.org/api/stream.html#stream_readable_streams\n      const stream = createReadStream();\n\n      // This is purely for demonstration purposes and will overwrite the\n      // local-file-output.txt in the current working directory on EACH upload.\n      const out = require('fs').createWriteStream('local-file-output.txt');\n      stream.pipe(out);\n      await finished(out);\n\n      return { filename, mimetype, encoding };\n    },\n  },\n};\n\nasync function startServer() {\n  const server = new ApolloServer({\n    typeDefs,\n    resolvers,\n  });\n  await server.start();\n\n  const app = express();\n\n  // This middleware should be added before calling `applyMiddleware`.\n  app.use(graphqlUploadExpress());\n\n  server.applyMiddleware({ app });\n\n  await new Promise<void>(r => app.listen({ port: 4000 }, r));\n\n  console.log(`ðŸš€ Server ready at http://localhost:4000${server.graphqlPath}`);\n}\n\nstartServer();","position":{"start":{"line":12,"column":1,"offset":1019},"end":{"line":90,"column":4,"offset":3239},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</MultiCodeBlock>","position":{"start":{"line":92,"column":1,"offset":3241},"end":{"line":92,"column":18,"offset":3258},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Integrating with Fastify","position":{"start":{"line":94,"column":5,"offset":3264},"end":{"line":94,"column":29,"offset":3288},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":3260},"end":{"line":94,"column":29,"offset":3288},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const { ApolloServer, gql } = require('apollo-server-fastify');\nconst { GraphQLUpload, processRequest } = require('graphql-upload');\nconst { finished } = require('stream/promises');\n\nconst typeDefs = gql`\n  # The implementation for this scalar is provided by the\n  # 'GraphQLUpload' export from the 'graphql-upload' package\n  # in the resolver map below.\n  scalar Upload\n\n  type File {\n    filename: String!\n    mimetype: String!\n    encoding: String!\n  }\n\n  type Query {\n    # This is only here to satisfy the requirement that at least one\n    # field be present within the 'Query' type.  This example does not\n    # demonstrate how to fetch uploads back.\n    otherFields: Boolean!\n  }\n\n  type Mutation {\n    # Multiple uploads are supported. See graphql-upload docs for details.\n    singleUpload(file: Upload!): File!\n  }\n`;\n\nconst resolvers = {\n  // This maps the `Upload` scalar to the implementation provided\n  // by the `graphql-upload` package.\n  Upload: GraphQLUpload,\n\n  Mutation: {\n    singleUpload: async (parent, { file }) => {\n      const { createReadStream, filename, mimetype, encoding } = await file;\n\n      // Invoking the `createReadStream` will return a Readable Stream.\n      // See https://nodejs.org/api/stream.html#stream_readable_streams\n      const stream = createReadStream();\n\n      // This is purely for demonstration purposes and will overwrite the\n      // local-file-output.txt in the current working directory on EACH upload.\n      const out = require('fs').createWriteStream('local-file-output.txt');\n      stream.pipe(out);\n      await finished(out);\n\n      return { filename, mimetype, encoding };\n    },\n  },\n};\n\nconst app = require('fastify')({\n  logger: true\n});\n\nconst start = async () => {\n  try {\n    // Handle all requests that have the `Content-Type` header set as multipart\n    app.addContentTypeParser('multipart', (request, payload, done) => {\n      request.isMultipart = true;\n      done();\n    });\n\n    // Format the request body to follow graphql-upload's\n    app.addHook('preValidation', async function (request, reply) {\n      if (!request.isMultipart) {\n        return;\n      }\n\n      request.body = await processRequest(request.raw, reply.raw);\n    });\n\n    const server = new ApolloServer({\n      typeDefs,\n      resolvers,\n    });\n\n    // Start Apollo Server\n    await server.start();\n\n    app.register(server.createHandler());\n    await app.listen(3000);\n  } catch (err) {\n    app.log.error(err);\n    process.exit(1);\n  }\n};\n\nstart();","position":{"start":{"line":96,"column":1,"offset":3290},"end":{"line":188,"column":4,"offset":5790},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"File uploads\",\"description\":\"Enabling file uploads in Apollo Server\"}","position":{"start":{"line":191,"column":1,"offset":5793},"end":{"line":191,"column":108,"offset":5900},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":191,"column":108,"offset":5900}}},"scopeImports":["import { MultiCodeBlock } from 'gatsby-theme-apollo-docs';","import * as React from 'react'"],"scopeIdentifiers":["MultiCodeBlock","React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"File uploads\",\n  \"description\": \"Enabling file uploads in Apollo Server\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"You can add file upload support to Apollo Server via the third-party \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://npm.im/graphql-upload\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"graphql-upload\")), \" library. This package provides support for the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"multipart/form-data\"), \" content-type.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"New in Apollo Server 3:\"), \" Apollo Server 3 does not contain a built-in integration with \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"graphql-upload\"), \" like in Apollo Server 2. Instead, the instructions below show how to integrate it yourself. You cannot do this with the \\\"batteries-included\\\" \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"apollo-server\"), \" library; you must use a web framework integration such as \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"apollo-server-express\"), \" instead. This page shows how to integrate \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"graphql-upload\"), \" with Express and Fastify. To implement similar functionality with another Node.js HTTP framework (e.g., Koa), see the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/jaydenseric/graphql-upload\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"graphql-upload\"), \" documentation\"), \" for more information. Some integrations might need to use \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"graphql-upload\"), \"'s \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"processRequest\"), \" directly.\"), mdx(\"h3\", {\n    \"id\": \"integrating-with-express\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#integrating-with-express\",\n    \"aria-label\": \"integrating with express permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Integrating with Express\"), mdx(MultiCodeBlock, {\n    mdxType: \"MultiCodeBlock\"\n  }, mdx(\"div\", {\n    \"className\": \"gatsby-code-title\"\n  }, \"index.ts\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"ts\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-ts line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" express \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'express'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" ApolloServer\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" gql \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'apollo-server-express'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  GraphQLUpload\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  graphqlUploadExpress\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// A Koa implementation is also exported.\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'graphql-upload'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" finished \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'stream/promises'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" typeDefs \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" gql\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\n  # The implementation for this scalar is provided by the\\n  # 'GraphQLUpload' export from the 'graphql-upload' package\\n  # in the resolver map below.\\n  scalar Upload\\n\\n  type File {\\n    filename: String!\\n    mimetype: String!\\n    encoding: String!\\n  }\\n\\n  type Query {\\n    # This is only here to satisfy the requirement that at least one\\n    # field be present within the 'Query' type.  This example does not\\n    # demonstrate how to fetch uploads back.\\n    otherFields: Boolean!\\n  }\\n\\n  type Mutation {\\n    # Multiple uploads are supported. See graphql-upload docs for details.\\n    singleUpload(file: Upload!): File!\\n  }\\n\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" resolvers \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// This maps the `Upload` scalar to the implementation provided\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// by the `graphql-upload` package.\"), \"\\n  Upload\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" GraphQLUpload\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n\\n  Mutation\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function-variable function\"\n  }, \"singleUpload\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"async\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"parent\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" file \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" createReadStream\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" filename\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" mimetype\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" encoding \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"await\"), \" file\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Invoking the `createReadStream` will return a Readable Stream.\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// See https://nodejs.org/api/stream.html#stream_readable_streams\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" stream \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"createReadStream\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// This is purely for demonstration purposes and will overwrite the\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// local-file-output.txt in the current working directory on EACH upload.\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" out \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'fs'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"createWriteStream\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'local-file-output.txt'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      stream\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"pipe\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"out\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"await\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"finished\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"out\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" filename\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" mimetype\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" encoding \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"async\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"function\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"startServer\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" server \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"ApolloServer\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    typeDefs\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n    resolvers\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"await\"), \" server\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"start\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" app \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"express\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// This middleware should be added before calling `applyMiddleware`.\"), \"\\n  app\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"use\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"graphqlUploadExpress\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n  server\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"applyMiddleware\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" app \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"await\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token builtin\"\n  }, \"Promise\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"<\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"void\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \">\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"r \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" app\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"listen\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" port\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, \"4000\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" r\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token builtin\"\n  }, \"console\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"log\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\uD83D\\uDE80 Server ready at http://localhost:4000\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"${\"), \"server\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"graphqlPath\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"startServer\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"div\", {\n    \"className\": \"gatsby-code-title\"\n  }, \"index.js\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" express \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'express'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" ApolloServer\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" gql \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'apollo-server-express'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  GraphQLUpload\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  graphqlUploadExpress\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// A Koa implementation is also exported.\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'graphql-upload'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" finished \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'stream/promises'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" typeDefs \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" gql\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\n  # The implementation for this scalar is provided by the\\n  # 'GraphQLUpload' export from the 'graphql-upload' package\\n  # in the resolver map below.\\n  scalar Upload\\n\\n  type File {\\n    filename: String!\\n    mimetype: String!\\n    encoding: String!\\n  }\\n\\n  type Query {\\n    # This is only here to satisfy the requirement that at least one\\n    # field be present within the 'Query' type.  This example does not\\n    # demonstrate how to fetch uploads back.\\n    otherFields: Boolean!\\n  }\\n\\n  type Mutation {\\n    # Multiple uploads are supported. See graphql-upload docs for details.\\n    singleUpload(file: Upload!): File!\\n  }\\n\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" resolvers \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// This maps the `Upload` scalar to the implementation provided\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// by the `graphql-upload` package.\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"Upload\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" GraphQLUpload\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"Mutation\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function-variable function\"\n  }, \"singleUpload\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"async\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"parent\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" file \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" createReadStream\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" filename\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" mimetype\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" encoding \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"await\"), \" file\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Invoking the `createReadStream` will return a Readable Stream.\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// See https://nodejs.org/api/stream.html#stream_readable_streams\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" stream \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"createReadStream\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// This is purely for demonstration purposes and will overwrite the\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// local-file-output.txt in the current working directory on EACH upload.\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" out \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'fs'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"createWriteStream\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'local-file-output.txt'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      stream\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"pipe\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"out\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"await\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"finished\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"out\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" filename\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" mimetype\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" encoding \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"async\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"function\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"startServer\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" server \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"ApolloServer\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    typeDefs\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n    resolvers\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"await\"), \" server\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"start\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" app \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"express\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// This middleware should be added before calling `applyMiddleware`.\"), \"\\n  app\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"use\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"graphqlUploadExpress\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n  server\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"applyMiddleware\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" app \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"await\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"Promise\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"r\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" app\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"listen\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"port\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, \"4000\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" r\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n  console\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"log\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\uD83D\\uDE80 Server ready at http://localhost:4000\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"${\"), \"server\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"graphqlPath\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"startServer\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }))))), mdx(\"h3\", {\n    \"id\": \"integrating-with-fastify\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#integrating-with-fastify\",\n    \"aria-label\": \"integrating with fastify permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Integrating with Fastify\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" ApolloServer\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" gql \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'apollo-server-fastify'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" GraphQLUpload\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" processRequest \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'graphql-upload'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" finished \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'stream/promises'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" typeDefs \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" gql\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\n  # The implementation for this scalar is provided by the\\n  # 'GraphQLUpload' export from the 'graphql-upload' package\\n  # in the resolver map below.\\n  scalar Upload\\n\\n  type File {\\n    filename: String!\\n    mimetype: String!\\n    encoding: String!\\n  }\\n\\n  type Query {\\n    # This is only here to satisfy the requirement that at least one\\n    # field be present within the 'Query' type.  This example does not\\n    # demonstrate how to fetch uploads back.\\n    otherFields: Boolean!\\n  }\\n\\n  type Mutation {\\n    # Multiple uploads are supported. See graphql-upload docs for details.\\n    singleUpload(file: Upload!): File!\\n  }\\n\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" resolvers \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// This maps the `Upload` scalar to the implementation provided\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// by the `graphql-upload` package.\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"Upload\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" GraphQLUpload\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"Mutation\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function-variable function\"\n  }, \"singleUpload\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"async\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"parent\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" file \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" createReadStream\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" filename\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" mimetype\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" encoding \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"await\"), \" file\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Invoking the `createReadStream` will return a Readable Stream.\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// See https://nodejs.org/api/stream.html#stream_readable_streams\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" stream \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"createReadStream\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// This is purely for demonstration purposes and will overwrite the\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// local-file-output.txt in the current working directory on EACH upload.\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" out \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'fs'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"createWriteStream\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'local-file-output.txt'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      stream\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"pipe\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"out\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"await\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"finished\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"out\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" filename\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" mimetype\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" encoding \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" app \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'fastify'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"logger\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token boolean\"\n  }, \"true\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function-variable function\"\n  }, \"start\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"async\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"try\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Handle all requests that have the `Content-Type` header set as multipart\"), \"\\n    app\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"addContentTypeParser\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'multipart'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"request\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" payload\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" done\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      request\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"isMultipart \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token boolean\"\n  }, \"true\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"done\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Format the request body to follow graphql-upload's\"), \"\\n    app\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"addHook\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'preValidation'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"async\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"function\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"request\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" reply\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"if\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"!\"), \"request\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"isMultipart\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n      request\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"body \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"await\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"processRequest\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"request\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"raw\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" reply\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"raw\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" server \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"ApolloServer\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      typeDefs\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n      resolvers\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Start Apollo Server\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"await\"), \" server\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"start\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n    app\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"register\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"server\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"createHandler\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"await\"), \" app\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"listen\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, \"3000\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"catch\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"err\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    app\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"log\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"error\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"err\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    process\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"exit\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, \"1\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"start\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { MultiCodeBlock } from 'gatsby-theme-apollo-docs';\nexport const _frontmatter = {\n  \"title\": \"File uploads\",\n  \"description\": \"Enabling file uploads in Apollo Server\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`You can add file upload support to Apollo Server via the third-party `}<a parentName=\"p\" {...{\n        \"href\": \"https://npm.im/graphql-upload\"\n      }}><code parentName=\"a\" {...{\n          \"className\": \"language-text\"\n        }}>{`graphql-upload`}</code></a>{` library. This package provides support for the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`multipart/form-data`}</code>{` content-type.`}</p>\n    <p><strong parentName=\"p\">{`New in Apollo Server 3:`}</strong>{` Apollo Server 3 does not contain a built-in integration with `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`graphql-upload`}</code>{` like in Apollo Server 2. Instead, the instructions below show how to integrate it yourself. You cannot do this with the \"batteries-included\" `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`apollo-server`}</code>{` library; you must use a web framework integration such as `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`apollo-server-express`}</code>{` instead. This page shows how to integrate `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`graphql-upload`}</code>{` with Express and Fastify. To implement similar functionality with another Node.js HTTP framework (e.g., Koa), see the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/jaydenseric/graphql-upload\"\n      }}><code parentName=\"a\" {...{\n          \"className\": \"language-text\"\n        }}>{`graphql-upload`}</code>{` documentation`}</a>{` for more information. Some integrations might need to use `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`graphql-upload`}</code>{`'s `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`processRequest`}</code>{` directly.`}</p>\n    <h3 {...{\n      \"id\": \"integrating-with-express\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#integrating-with-express\",\n        \"aria-label\": \"integrating with express permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Integrating with Express`}</h3>\n    <MultiCodeBlock mdxType=\"MultiCodeBlock\">\n      <div {...{\n        \"className\": \"gatsby-code-title\"\n      }}>{`index.ts`}</div>\n      <div {...{\n        \"className\": \"gatsby-highlight\",\n        \"data-language\": \"ts\"\n      }}><pre parentName=\"div\" {...{\n          \"style\": {\n            \"counterReset\": \"linenumber NaN\"\n          },\n          \"className\": \"language-ts line-numbers\"\n        }}><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}><span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` express `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`require`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`'express'`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` ApolloServer`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` gql `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`require`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`'apollo-server-express'`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n  GraphQLUpload`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{`\n  graphqlUploadExpress`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// A Koa implementation is also exported.`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`require`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`'graphql-upload'`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` finished `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`require`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`'stream/promises'`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` typeDefs `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` gql`}<span parentName=\"code\" {...{\n              \"className\": \"token template-string\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token template-punctuation string\"\n              }}>{`\\``}</span><span parentName=\"span\" {...{\n                \"className\": \"token string\"\n              }}>{`\n  # The implementation for this scalar is provided by the\n  # 'GraphQLUpload' export from the 'graphql-upload' package\n  # in the resolver map below.\n  scalar Upload\n\n  type File {\n    filename: String!\n    mimetype: String!\n    encoding: String!\n  }\n\n  type Query {\n    # This is only here to satisfy the requirement that at least one\n    # field be present within the 'Query' type.  This example does not\n    # demonstrate how to fetch uploads back.\n    otherFields: Boolean!\n  }\n\n  type Mutation {\n    # Multiple uploads are supported. See graphql-upload docs for details.\n    singleUpload(file: Upload!): File!\n  }\n`}</span><span parentName=\"span\" {...{\n                \"className\": \"token template-punctuation string\"\n              }}>{`\\``}</span></span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` resolvers `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// This maps the \\`Upload\\` scalar to the implementation provided`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// by the \\`graphql-upload\\` package.`}</span>{`\n  Upload`}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`:`}</span>{` GraphQLUpload`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{`\n\n  Mutation`}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token function-variable function\"\n            }}>{`singleUpload`}</span><span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`async`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span>{`parent`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` file `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=>`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` createReadStream`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` filename`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` mimetype`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` encoding `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`await`}</span>{` file`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// Invoking the \\`createReadStream\\` will return a Readable Stream.`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// See https://nodejs.org/api/stream.html#stream_readable_streams`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` stream `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`createReadStream`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// This is purely for demonstration purposes and will overwrite the`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// local-file-output.txt in the current working directory on EACH upload.`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` out `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`require`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`'fs'`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`createWriteStream`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`'local-file-output.txt'`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n      stream`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`pipe`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span>{`out`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`await`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`finished`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span>{`out`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`return`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` filename`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` mimetype`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` encoding `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`async`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`function`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`startServer`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` server `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token class-name\"\n            }}>{`ApolloServer`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n    typeDefs`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{`\n    resolvers`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`await`}</span>{` server`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`start`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` app `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`express`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// This middleware should be added before calling \\`applyMiddleware\\`.`}</span>{`\n  app`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`use`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`graphqlUploadExpress`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n  server`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`applyMiddleware`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` app `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`await`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token class-name\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token builtin\"\n              }}>{`Promise`}</span><span parentName=\"span\" {...{\n                \"className\": \"token operator\"\n              }}>{`<`}</span><span parentName=\"span\" {...{\n                \"className\": \"token keyword\"\n              }}>{`void`}</span><span parentName=\"span\" {...{\n                \"className\": \"token operator\"\n              }}>{`>`}</span></span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span>{`r `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=>`}</span>{` app`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`listen`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` port`}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token number\"\n            }}>{`4000`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` r`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token builtin\"\n            }}>{`console`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`log`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token template-string\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token template-punctuation string\"\n              }}>{`\\``}</span><span parentName=\"span\" {...{\n                \"className\": \"token string\"\n              }}>{`ðŸš€ Server ready at http://localhost:4000`}</span><span parentName=\"span\" {...{\n                \"className\": \"token interpolation\"\n              }}><span parentName=\"span\" {...{\n                  \"className\": \"token interpolation-punctuation punctuation\"\n                }}>{`\\${`}</span>{`server`}<span parentName=\"span\" {...{\n                  \"className\": \"token punctuation\"\n                }}>{`.`}</span>{`graphqlPath`}<span parentName=\"span\" {...{\n                  \"className\": \"token interpolation-punctuation punctuation\"\n                }}>{`}`}</span></span><span parentName=\"span\" {...{\n                \"className\": \"token template-punctuation string\"\n              }}>{`\\``}</span></span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{`\n\n`}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`startServer`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span></code><span parentName=\"pre\" {...{\n            \"aria-hidden\": \"true\",\n            \"className\": \"line-numbers-rows\",\n            \"style\": {\n              \"whiteSpace\": \"normal\",\n              \"width\": \"auto\",\n              \"left\": \"0\"\n            }\n          }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n      <div {...{\n        \"className\": \"gatsby-code-title\"\n      }}>{`index.js`}</div>\n      <div {...{\n        \"className\": \"gatsby-highlight\",\n        \"data-language\": \"js\"\n      }}><pre parentName=\"div\" {...{\n          \"style\": {\n            \"counterReset\": \"linenumber NaN\"\n          },\n          \"className\": \"language-js line-numbers\"\n        }}><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}><span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` express `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`require`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`'express'`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` ApolloServer`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` gql `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`require`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`'apollo-server-express'`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n  GraphQLUpload`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{`\n  graphqlUploadExpress`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// A Koa implementation is also exported.`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`require`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`'graphql-upload'`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` finished `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`require`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`'stream/promises'`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` typeDefs `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` gql`}<span parentName=\"code\" {...{\n              \"className\": \"token template-string\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token template-punctuation string\"\n              }}>{`\\``}</span><span parentName=\"span\" {...{\n                \"className\": \"token string\"\n              }}>{`\n  # The implementation for this scalar is provided by the\n  # 'GraphQLUpload' export from the 'graphql-upload' package\n  # in the resolver map below.\n  scalar Upload\n\n  type File {\n    filename: String!\n    mimetype: String!\n    encoding: String!\n  }\n\n  type Query {\n    # This is only here to satisfy the requirement that at least one\n    # field be present within the 'Query' type.  This example does not\n    # demonstrate how to fetch uploads back.\n    otherFields: Boolean!\n  }\n\n  type Mutation {\n    # Multiple uploads are supported. See graphql-upload docs for details.\n    singleUpload(file: Upload!): File!\n  }\n`}</span><span parentName=\"span\" {...{\n                \"className\": \"token template-punctuation string\"\n              }}>{`\\``}</span></span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` resolvers `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// This maps the \\`Upload\\` scalar to the implementation provided`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// by the \\`graphql-upload\\` package.`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token literal-property property\"\n            }}>{`Upload`}</span><span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`:`}</span>{` GraphQLUpload`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{`\n\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token literal-property property\"\n            }}>{`Mutation`}</span><span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token function-variable function\"\n            }}>{`singleUpload`}</span><span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`async`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token parameter\"\n            }}>{`parent`}<span parentName=\"span\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`,`}</span>{` `}<span parentName=\"span\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`{`}</span>{` file `}<span parentName=\"span\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`}`}</span></span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=>`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` createReadStream`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` filename`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` mimetype`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` encoding `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`await`}</span>{` file`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// Invoking the \\`createReadStream\\` will return a Readable Stream.`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// See https://nodejs.org/api/stream.html#stream_readable_streams`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` stream `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`createReadStream`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// This is purely for demonstration purposes and will overwrite the`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// local-file-output.txt in the current working directory on EACH upload.`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` out `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`require`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`'fs'`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`createWriteStream`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`'local-file-output.txt'`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n      stream`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`pipe`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span>{`out`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`await`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`finished`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span>{`out`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`return`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` filename`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` mimetype`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` encoding `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`async`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`function`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`startServer`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` server `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token class-name\"\n            }}>{`ApolloServer`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n    typeDefs`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{`\n    resolvers`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`await`}</span>{` server`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`start`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` app `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`express`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// This middleware should be added before calling \\`applyMiddleware\\`.`}</span>{`\n  app`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`use`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`graphqlUploadExpress`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n  server`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`applyMiddleware`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` app `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`await`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token class-name\"\n            }}>{`Promise`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token parameter\"\n            }}>{`r`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=>`}</span>{` app`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`listen`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token literal-property property\"\n            }}>{`port`}</span><span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token number\"\n            }}>{`4000`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` r`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n  console`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`log`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token template-string\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token template-punctuation string\"\n              }}>{`\\``}</span><span parentName=\"span\" {...{\n                \"className\": \"token string\"\n              }}>{`ðŸš€ Server ready at http://localhost:4000`}</span><span parentName=\"span\" {...{\n                \"className\": \"token interpolation\"\n              }}><span parentName=\"span\" {...{\n                  \"className\": \"token interpolation-punctuation punctuation\"\n                }}>{`\\${`}</span>{`server`}<span parentName=\"span\" {...{\n                  \"className\": \"token punctuation\"\n                }}>{`.`}</span>{`graphqlPath`}<span parentName=\"span\" {...{\n                  \"className\": \"token interpolation-punctuation punctuation\"\n                }}>{`}`}</span></span><span parentName=\"span\" {...{\n                \"className\": \"token template-punctuation string\"\n              }}>{`\\``}</span></span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{`\n\n`}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`startServer`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span></code><span parentName=\"pre\" {...{\n            \"aria-hidden\": \"true\",\n            \"className\": \"line-numbers-rows\",\n            \"style\": {\n              \"whiteSpace\": \"normal\",\n              \"width\": \"auto\",\n              \"left\": \"0\"\n            }\n          }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    </MultiCodeBlock>\n    <h3 {...{\n      \"id\": \"integrating-with-fastify\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#integrating-with-fastify\",\n        \"aria-label\": \"integrating with fastify permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Integrating with Fastify`}</h3>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"js\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-js line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` ApolloServer`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` gql `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`require`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'apollo-server-fastify'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` GraphQLUpload`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` processRequest `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`require`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'graphql-upload'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` finished `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`require`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'stream/promises'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` typeDefs `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` gql`}<span parentName=\"code\" {...{\n            \"className\": \"token template-string\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`\n  # The implementation for this scalar is provided by the\n  # 'GraphQLUpload' export from the 'graphql-upload' package\n  # in the resolver map below.\n  scalar Upload\n\n  type File {\n    filename: String!\n    mimetype: String!\n    encoding: String!\n  }\n\n  type Query {\n    # This is only here to satisfy the requirement that at least one\n    # field be present within the 'Query' type.  This example does not\n    # demonstrate how to fetch uploads back.\n    otherFields: Boolean!\n  }\n\n  type Mutation {\n    # Multiple uploads are supported. See graphql-upload docs for details.\n    singleUpload(file: Upload!): File!\n  }\n`}</span><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` resolvers `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// This maps the \\`Upload\\` scalar to the implementation provided`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// by the \\`graphql-upload\\` package.`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`Upload`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` GraphQLUpload`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`Mutation`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token function-variable function\"\n          }}>{`singleUpload`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`async`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`parent`}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` `}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` file `}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=>`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` createReadStream`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` filename`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` mimetype`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` encoding `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`await`}</span>{` file`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// Invoking the \\`createReadStream\\` will return a Readable Stream.`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// See https://nodejs.org/api/stream.html#stream_readable_streams`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` stream `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`createReadStream`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// This is purely for demonstration purposes and will overwrite the`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// local-file-output.txt in the current working directory on EACH upload.`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` out `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`require`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'fs'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`createWriteStream`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'local-file-output.txt'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n      stream`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`pipe`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`out`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`await`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`finished`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`out`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`return`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` filename`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` mimetype`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` encoding `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` app `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`require`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'fastify'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`logger`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token boolean\"\n          }}>{`true`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function-variable function\"\n          }}>{`start`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`async`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=>`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`try`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// Handle all requests that have the \\`Content-Type\\` header set as multipart`}</span>{`\n    app`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`addContentTypeParser`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'multipart'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`request`}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` payload`}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` done`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=>`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n      request`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`isMultipart `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token boolean\"\n          }}>{`true`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`done`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// Format the request body to follow graphql-upload's`}</span>{`\n    app`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`addHook`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'preValidation'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`async`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`request`}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` reply`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`if`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`!`}</span>{`request`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`isMultipart`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`return`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n\n      request`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`body `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`await`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`processRequest`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`request`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`raw`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` reply`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`raw`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` server `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`ApolloServer`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n      typeDefs`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n      resolvers`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// Start Apollo Server`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`await`}</span>{` server`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`start`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n    app`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`register`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`server`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`createHandler`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`await`}</span>{` app`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`listen`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`3000`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`catch`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`err`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    app`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`log`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`error`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`err`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n    process`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`exit`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`1`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`start`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}