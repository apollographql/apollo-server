{"expireTime":9007200901519504000,"key":"gatsby-plugin-mdx-entire-payload-c1ffebee3b17194ce115f427b2ff975f-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import {ExpansionPanel} from 'gatsby-theme-apollo-docs';","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":57,"offset":57},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Before you create a custom schema directive, ","position":{"start":{"line":4,"column":3,"offset":61},"end":{"line":4,"column":48,"offset":106},"indent":[]}},{"type":"link","title":null,"url":"./directives","children":[{"type":"text","value":"learn the basics about directives","position":{"start":{"line":4,"column":49,"offset":107},"end":{"line":4,"column":82,"offset":140},"indent":[]}}],"position":{"start":{"line":4,"column":48,"offset":106},"end":{"line":4,"column":97,"offset":155},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":4,"column":97,"offset":155},"end":{"line":4,"column":98,"offset":156},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":61},"end":{"line":4,"column":98,"offset":156},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":59},"end":{"line":4,"column":98,"offset":156},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Your schema can define custom directives that can then decorate ","position":{"start":{"line":6,"column":1,"offset":158},"end":{"line":6,"column":65,"offset":222},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"other","position":{"start":{"line":6,"column":66,"offset":223},"end":{"line":6,"column":71,"offset":228},"indent":[]}}],"position":{"start":{"line":6,"column":65,"offset":222},"end":{"line":6,"column":72,"offset":229},"indent":[]}},{"type":"text","value":" parts of your schema:","position":{"start":{"line":6,"column":72,"offset":229},"end":{"line":6,"column":94,"offset":251},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":158},"end":{"line":6,"column":94,"offset":251},"indent":[]}},{"type":"code","lang":"graphql:title=schema.graphql","meta":null,"value":"# Definition\ndirective @uppercase on FIELD_DEFINITION\n\ntype Query {\n  # Usage\n  hello: String @uppercase\n}","position":{"start":{"line":8,"column":1,"offset":253},"end":{"line":16,"column":4,"offset":395},"indent":[1,1,1,1,1,1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"See an example implementation of this directive on CodeSandbox:","position":{"start":{"line":18,"column":3,"offset":399},"end":{"line":18,"column":66,"offset":462},"indent":[]}}],"position":{"start":{"line":18,"column":3,"offset":399},"end":{"line":18,"column":66,"offset":462},"indent":[]}},{"type":"jsx","value":"<a href=\"https://codesandbox.io/s/github/apollographql/docs-examples/tree/main/apollo-server/v3/custom-directives/upper-case-directive?fontsize=14&hidenavigation=1&theme=dark\">\n  <img alt=\"Edit upper-case-directive\" src=\"https://codesandbox.io/static/img/play-codesandbox.svg\" />\n</a>","position":{"start":{"line":20,"column":3,"offset":467},"end":{"line":22,"column":7,"offset":755},"indent":[3,3]}}],"position":{"start":{"line":18,"column":1,"offset":397},"end":{"line":22,"column":7,"offset":755},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"When you start up your app, you can use directives to transform your executable schema's behavior before you provide that schema to Apollo Server. For example, you can modify the resolver function for any decorated field (for the schema above, it could transform the ","position":{"start":{"line":24,"column":1,"offset":757},"end":{"line":24,"column":268,"offset":1024},"indent":[]}},{"type":"inlineCode","value":"hello","position":{"start":{"line":24,"column":268,"offset":1024},"end":{"line":24,"column":275,"offset":1031},"indent":[]}},{"type":"text","value":" resolver's original result to uppercase).","position":{"start":{"line":24,"column":275,"offset":1031},"end":{"line":24,"column":317,"offset":1073},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":757},"end":{"line":24,"column":317,"offset":1073},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Defining","position":{"start":{"line":26,"column":4,"offset":1078},"end":{"line":26,"column":12,"offset":1086},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":1075},"end":{"line":26,"column":12,"offset":1086},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A directive definition looks like this:","position":{"start":{"line":28,"column":1,"offset":1088},"end":{"line":28,"column":40,"offset":1127},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1088},"end":{"line":28,"column":40,"offset":1127},"indent":[]}},{"type":"code","lang":"graphql:title=schema.graphql","meta":null,"value":"directive @deprecated(\n  reason: String = \"No longer supported\"\n) on FIELD_DEFINITION | ENUM_VALUE","position":{"start":{"line":30,"column":1,"offset":1129},"end":{"line":34,"column":4,"offset":1263},"indent":[1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"This is the definition for the ","position":{"start":{"line":36,"column":3,"offset":1267},"end":{"line":36,"column":34,"offset":1298},"indent":[]}},{"type":"inlineCode","value":"@deprecated","position":{"start":{"line":36,"column":34,"offset":1298},"end":{"line":36,"column":47,"offset":1311},"indent":[]}},{"type":"text","value":" directive in the ","position":{"start":{"line":36,"column":47,"offset":1311},"end":{"line":36,"column":65,"offset":1329},"indent":[]}},{"type":"link","title":null,"url":"https://spec.graphql.org/June2018/#sec--deprecated","children":[{"type":"text","value":"GraphQL spec","position":{"start":{"line":36,"column":66,"offset":1330},"end":{"line":36,"column":78,"offset":1342},"indent":[]}}],"position":{"start":{"line":36,"column":65,"offset":1329},"end":{"line":36,"column":131,"offset":1395},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":36,"column":131,"offset":1395},"end":{"line":36,"column":132,"offset":1396},"indent":[]}}],"position":{"start":{"line":36,"column":3,"offset":1267},"end":{"line":36,"column":132,"offset":1396},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1265},"end":{"line":36,"column":132,"offset":1396},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The directive takes one optional argument (","position":{"start":{"line":37,"column":3,"offset":1399},"end":{"line":37,"column":46,"offset":1442},"indent":[]}},{"type":"inlineCode","value":"reason","position":{"start":{"line":37,"column":46,"offset":1442},"end":{"line":37,"column":54,"offset":1450},"indent":[]}},{"type":"text","value":") with a default value (","position":{"start":{"line":37,"column":54,"offset":1450},"end":{"line":37,"column":78,"offset":1474},"indent":[]}},{"type":"inlineCode","value":"\"No longer supported\"","position":{"start":{"line":37,"column":78,"offset":1474},"end":{"line":37,"column":101,"offset":1497},"indent":[]}},{"type":"text","value":").","position":{"start":{"line":37,"column":101,"offset":1497},"end":{"line":37,"column":103,"offset":1499},"indent":[]}}],"position":{"start":{"line":37,"column":3,"offset":1399},"end":{"line":37,"column":103,"offset":1499},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1397},"end":{"line":37,"column":103,"offset":1499},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The directive can decorate any number of ","position":{"start":{"line":38,"column":3,"offset":1502},"end":{"line":38,"column":44,"offset":1543},"indent":[]}},{"type":"inlineCode","value":"FIELD_DEFINITION","position":{"start":{"line":38,"column":44,"offset":1543},"end":{"line":38,"column":62,"offset":1561},"indent":[]}},{"type":"text","value":"s and ","position":{"start":{"line":38,"column":62,"offset":1561},"end":{"line":38,"column":68,"offset":1567},"indent":[]}},{"type":"inlineCode","value":"ENUM_VALUE","position":{"start":{"line":38,"column":68,"offset":1567},"end":{"line":38,"column":80,"offset":1579},"indent":[]}},{"type":"text","value":"s in your schema.","position":{"start":{"line":38,"column":80,"offset":1579},"end":{"line":38,"column":97,"offset":1596},"indent":[]}}],"position":{"start":{"line":38,"column":3,"offset":1502},"end":{"line":38,"column":97,"offset":1596},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1500},"end":{"line":38,"column":97,"offset":1596},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1265},"end":{"line":38,"column":97,"offset":1596},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Supported locations","position":{"start":{"line":40,"column":5,"offset":1602},"end":{"line":40,"column":24,"offset":1621},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1598},"end":{"line":40,"column":24,"offset":1621},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Your custom directive can appear ","position":{"start":{"line":42,"column":1,"offset":1623},"end":{"line":42,"column":34,"offset":1656},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"only","position":{"start":{"line":42,"column":35,"offset":1657},"end":{"line":42,"column":39,"offset":1661},"indent":[]}}],"position":{"start":{"line":42,"column":34,"offset":1656},"end":{"line":42,"column":40,"offset":1662},"indent":[]}},{"type":"text","value":" in the schema locations you list after the ","position":{"start":{"line":42,"column":40,"offset":1662},"end":{"line":42,"column":84,"offset":1706},"indent":[]}},{"type":"inlineCode","value":"on","position":{"start":{"line":42,"column":84,"offset":1706},"end":{"line":42,"column":88,"offset":1710},"indent":[]}},{"type":"text","value":" keyword in the directive's definition.","position":{"start":{"line":42,"column":88,"offset":1710},"end":{"line":42,"column":127,"offset":1749},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1623},"end":{"line":42,"column":127,"offset":1749},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The table below lists all available locations in a GraphQL schema. Your directive can support any combination of these locations.","position":{"start":{"line":44,"column":1,"offset":1751},"end":{"line":44,"column":130,"offset":1880},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1751},"end":{"line":44,"column":130,"offset":1880},"indent":[]}},{"type":"jsx","value":"<table class=\"field-table api-ref\">\n  <thead>\n    <tr>\n      <th>Name /<br/>MapperKind</th>\n      <th>Description</th>\n    </tr>\n  </thead>","position":{"start":{"line":46,"column":1,"offset":1882},"end":{"line":52,"column":11,"offset":2021},"indent":[1,1,1,1,1,1]}},{"type":"jsx","value":"<tbody>\n<tr>\n<td>","position":{"start":{"line":54,"column":1,"offset":2023},"end":{"line":56,"column":5,"offset":2040},"indent":[1,1]}},{"type":"heading","depth":6,"children":[{"type":"inlineCode","value":"SCALAR","position":{"start":{"line":58,"column":8,"offset":2049},"end":{"line":58,"column":16,"offset":2057},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":2042},"end":{"line":58,"column":16,"offset":2057},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"SCALAR_TYPE","position":{"start":{"line":60,"column":1,"offset":2059},"end":{"line":60,"column":14,"offset":2072},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":2059},"end":{"line":60,"column":14,"offset":2072},"indent":[]}},{"type":"jsx","value":"</td>\n<td>","position":{"start":{"line":61,"column":1,"offset":2073},"end":{"line":62,"column":5,"offset":2083},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The definition of a ","position":{"start":{"line":64,"column":1,"offset":2085},"end":{"line":64,"column":21,"offset":2105},"indent":[]}},{"type":"link","title":null,"url":"./custom-scalars/","children":[{"type":"text","value":"custom scalar","position":{"start":{"line":64,"column":22,"offset":2106},"end":{"line":64,"column":35,"offset":2119},"indent":[]}}],"position":{"start":{"line":64,"column":21,"offset":2105},"end":{"line":64,"column":55,"offset":2139},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":2085},"end":{"line":64,"column":55,"offset":2139},"indent":[]}},{"type":"jsx","value":"</td>\n</tr>","position":{"start":{"line":66,"column":1,"offset":2141},"end":{"line":67,"column":6,"offset":2152},"indent":[1]}},{"type":"jsx","value":"<tr>\n<td>","position":{"start":{"line":69,"column":1,"offset":2154},"end":{"line":70,"column":5,"offset":2163},"indent":[1]}},{"type":"heading","depth":6,"children":[{"type":"inlineCode","value":"OBJECT","position":{"start":{"line":72,"column":8,"offset":2172},"end":{"line":72,"column":16,"offset":2180},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":2165},"end":{"line":72,"column":16,"offset":2180},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"OBJECT_TYPE","position":{"start":{"line":74,"column":1,"offset":2182},"end":{"line":74,"column":14,"offset":2195},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":2182},"end":{"line":74,"column":14,"offset":2195},"indent":[]}},{"type":"jsx","value":"</td>\n<td>","position":{"start":{"line":75,"column":1,"offset":2196},"end":{"line":76,"column":5,"offset":2206},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The definition of an ","position":{"start":{"line":78,"column":1,"offset":2208},"end":{"line":78,"column":22,"offset":2229},"indent":[]}},{"type":"link","title":null,"url":"./schema/#object-types/","children":[{"type":"text","value":"object type","position":{"start":{"line":78,"column":23,"offset":2230},"end":{"line":78,"column":34,"offset":2241},"indent":[]}}],"position":{"start":{"line":78,"column":22,"offset":2229},"end":{"line":78,"column":60,"offset":2267},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":2208},"end":{"line":78,"column":60,"offset":2267},"indent":[]}},{"type":"jsx","value":"</td>\n</tr>","position":{"start":{"line":80,"column":1,"offset":2269},"end":{"line":81,"column":6,"offset":2280},"indent":[1]}},{"type":"jsx","value":"<tr>\n<td>","position":{"start":{"line":83,"column":1,"offset":2282},"end":{"line":84,"column":5,"offset":2291},"indent":[1]}},{"type":"heading","depth":6,"children":[{"type":"inlineCode","value":"FIELD_DEFINITION","position":{"start":{"line":86,"column":8,"offset":2300},"end":{"line":86,"column":26,"offset":2318},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":2293},"end":{"line":86,"column":26,"offset":2318},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"OBJECT_FIELD","position":{"start":{"line":88,"column":1,"offset":2320},"end":{"line":88,"column":15,"offset":2334},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":2320},"end":{"line":88,"column":15,"offset":2334},"indent":[]}},{"type":"jsx","value":"</td>\n<td>","position":{"start":{"line":89,"column":1,"offset":2335},"end":{"line":90,"column":5,"offset":2345},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The definition of a field within any defined type ","position":{"start":{"line":92,"column":1,"offset":2347},"end":{"line":92,"column":51,"offset":2397},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"except","position":{"start":{"line":92,"column":52,"offset":2398},"end":{"line":92,"column":58,"offset":2404},"indent":[]}}],"position":{"start":{"line":92,"column":51,"offset":2397},"end":{"line":92,"column":59,"offset":2405},"indent":[]}},{"type":"text","value":" an ","position":{"start":{"line":92,"column":59,"offset":2405},"end":{"line":92,"column":63,"offset":2409},"indent":[]}},{"type":"link","title":null,"url":"./schema/#input-types","children":[{"type":"text","value":"input type","position":{"start":{"line":92,"column":64,"offset":2410},"end":{"line":92,"column":74,"offset":2420},"indent":[]}}],"position":{"start":{"line":92,"column":63,"offset":2409},"end":{"line":92,"column":98,"offset":2444},"indent":[]}},{"type":"text","value":" (see ","position":{"start":{"line":92,"column":98,"offset":2444},"end":{"line":92,"column":104,"offset":2450},"indent":[]}},{"type":"inlineCode","value":"INPUT_FIELD_DEFINITION","position":{"start":{"line":92,"column":104,"offset":2450},"end":{"line":92,"column":128,"offset":2474},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":92,"column":128,"offset":2474},"end":{"line":92,"column":129,"offset":2475},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":2347},"end":{"line":92,"column":129,"offset":2475},"indent":[]}},{"type":"jsx","value":"</td>\n</tr>","position":{"start":{"line":94,"column":1,"offset":2477},"end":{"line":95,"column":6,"offset":2488},"indent":[1]}},{"type":"jsx","value":"<tr>\n<td>","position":{"start":{"line":97,"column":1,"offset":2490},"end":{"line":98,"column":5,"offset":2499},"indent":[1]}},{"type":"heading","depth":6,"children":[{"type":"inlineCode","value":"ARGUMENT_DEFINITION","position":{"start":{"line":100,"column":8,"offset":2508},"end":{"line":100,"column":29,"offset":2529},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":2501},"end":{"line":100,"column":29,"offset":2529},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"ARGUMENT","position":{"start":{"line":102,"column":1,"offset":2531},"end":{"line":102,"column":11,"offset":2541},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":2531},"end":{"line":102,"column":11,"offset":2541},"indent":[]}},{"type":"jsx","value":"</td>\n<td>","position":{"start":{"line":103,"column":1,"offset":2542},"end":{"line":104,"column":5,"offset":2552},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The definition of a field argument","position":{"start":{"line":106,"column":1,"offset":2554},"end":{"line":106,"column":35,"offset":2588},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":2554},"end":{"line":106,"column":35,"offset":2588},"indent":[]}},{"type":"jsx","value":"</td>\n</tr>","position":{"start":{"line":108,"column":1,"offset":2590},"end":{"line":109,"column":6,"offset":2601},"indent":[1]}},{"type":"jsx","value":"<tr>\n<td>","position":{"start":{"line":111,"column":1,"offset":2603},"end":{"line":112,"column":5,"offset":2612},"indent":[1]}},{"type":"heading","depth":6,"children":[{"type":"inlineCode","value":"INTERFACE","position":{"start":{"line":114,"column":8,"offset":2621},"end":{"line":114,"column":19,"offset":2632},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":2614},"end":{"line":114,"column":19,"offset":2632},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"INTERFACE_TYPE","position":{"start":{"line":116,"column":1,"offset":2634},"end":{"line":116,"column":17,"offset":2650},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":2634},"end":{"line":116,"column":17,"offset":2650},"indent":[]}},{"type":"jsx","value":"</td>\n<td>","position":{"start":{"line":117,"column":1,"offset":2651},"end":{"line":118,"column":5,"offset":2661},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The definition of an ","position":{"start":{"line":120,"column":1,"offset":2663},"end":{"line":120,"column":22,"offset":2684},"indent":[]}},{"type":"link","title":null,"url":"unions-interfaces/#interface-type","children":[{"type":"text","value":"interface","position":{"start":{"line":120,"column":23,"offset":2685},"end":{"line":120,"column":32,"offset":2694},"indent":[]}}],"position":{"start":{"line":120,"column":22,"offset":2684},"end":{"line":120,"column":68,"offset":2730},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":2663},"end":{"line":120,"column":68,"offset":2730},"indent":[]}},{"type":"jsx","value":"</td>\n</tr>","position":{"start":{"line":122,"column":1,"offset":2732},"end":{"line":123,"column":6,"offset":2743},"indent":[1]}},{"type":"jsx","value":"<tr>\n<td>","position":{"start":{"line":125,"column":1,"offset":2745},"end":{"line":126,"column":5,"offset":2754},"indent":[1]}},{"type":"heading","depth":6,"children":[{"type":"inlineCode","value":"UNION","position":{"start":{"line":128,"column":8,"offset":2763},"end":{"line":128,"column":15,"offset":2770},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":2756},"end":{"line":128,"column":15,"offset":2770},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"UNION_TYPE","position":{"start":{"line":130,"column":1,"offset":2772},"end":{"line":130,"column":13,"offset":2784},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":2772},"end":{"line":130,"column":13,"offset":2784},"indent":[]}},{"type":"jsx","value":"</td>\n<td>","position":{"start":{"line":131,"column":1,"offset":2785},"end":{"line":132,"column":5,"offset":2795},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The definition of a ","position":{"start":{"line":134,"column":1,"offset":2797},"end":{"line":134,"column":21,"offset":2817},"indent":[]}},{"type":"link","title":null,"url":"./unions-interfaces/#union-type","children":[{"type":"text","value":"union","position":{"start":{"line":134,"column":22,"offset":2818},"end":{"line":134,"column":27,"offset":2823},"indent":[]}}],"position":{"start":{"line":134,"column":21,"offset":2817},"end":{"line":134,"column":61,"offset":2857},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":2797},"end":{"line":134,"column":61,"offset":2857},"indent":[]}},{"type":"jsx","value":"</td>\n</tr>","position":{"start":{"line":136,"column":1,"offset":2859},"end":{"line":137,"column":6,"offset":2870},"indent":[1]}},{"type":"jsx","value":"<tr>\n<td>","position":{"start":{"line":139,"column":1,"offset":2872},"end":{"line":140,"column":5,"offset":2881},"indent":[1]}},{"type":"heading","depth":6,"children":[{"type":"inlineCode","value":"ENUM","position":{"start":{"line":142,"column":8,"offset":2890},"end":{"line":142,"column":14,"offset":2896},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":2883},"end":{"line":142,"column":14,"offset":2896},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"ENUM_TYPE","position":{"start":{"line":144,"column":1,"offset":2898},"end":{"line":144,"column":12,"offset":2909},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":2898},"end":{"line":144,"column":12,"offset":2909},"indent":[]}},{"type":"jsx","value":"</td>\n<td>","position":{"start":{"line":145,"column":1,"offset":2910},"end":{"line":146,"column":5,"offset":2920},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The definition of an ","position":{"start":{"line":148,"column":1,"offset":2922},"end":{"line":148,"column":22,"offset":2943},"indent":[]}},{"type":"link","title":null,"url":"./schema/#enum-types","children":[{"type":"text","value":"enum","position":{"start":{"line":148,"column":23,"offset":2944},"end":{"line":148,"column":27,"offset":2948},"indent":[]}}],"position":{"start":{"line":148,"column":22,"offset":2943},"end":{"line":148,"column":50,"offset":2971},"indent":[]}}],"position":{"start":{"line":148,"column":1,"offset":2922},"end":{"line":148,"column":50,"offset":2971},"indent":[]}},{"type":"jsx","value":"</td>\n</tr>","position":{"start":{"line":150,"column":1,"offset":2973},"end":{"line":151,"column":6,"offset":2984},"indent":[1]}},{"type":"jsx","value":"<tr>\n<td>","position":{"start":{"line":153,"column":1,"offset":2986},"end":{"line":154,"column":5,"offset":2995},"indent":[1]}},{"type":"heading","depth":6,"children":[{"type":"inlineCode","value":"ENUM_VALUE","position":{"start":{"line":156,"column":8,"offset":3004},"end":{"line":156,"column":20,"offset":3016},"indent":[]}}],"position":{"start":{"line":156,"column":1,"offset":2997},"end":{"line":156,"column":20,"offset":3016},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"ENUM_VALUE","position":{"start":{"line":158,"column":1,"offset":3018},"end":{"line":158,"column":13,"offset":3030},"indent":[]}}],"position":{"start":{"line":158,"column":1,"offset":3018},"end":{"line":158,"column":13,"offset":3030},"indent":[]}},{"type":"jsx","value":"</td>\n<td>","position":{"start":{"line":159,"column":1,"offset":3031},"end":{"line":160,"column":5,"offset":3041},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The definition of one value within an ","position":{"start":{"line":162,"column":1,"offset":3043},"end":{"line":162,"column":39,"offset":3081},"indent":[]}},{"type":"link","title":null,"url":"./schema/#enum-types","children":[{"type":"text","value":"enum","position":{"start":{"line":162,"column":40,"offset":3082},"end":{"line":162,"column":44,"offset":3086},"indent":[]}}],"position":{"start":{"line":162,"column":39,"offset":3081},"end":{"line":162,"column":67,"offset":3109},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":3043},"end":{"line":162,"column":67,"offset":3109},"indent":[]}},{"type":"jsx","value":"</td>\n</tr>","position":{"start":{"line":164,"column":1,"offset":3111},"end":{"line":165,"column":6,"offset":3122},"indent":[1]}},{"type":"jsx","value":"<tr>\n<td>","position":{"start":{"line":167,"column":1,"offset":3124},"end":{"line":168,"column":5,"offset":3133},"indent":[1]}},{"type":"heading","depth":6,"children":[{"type":"inlineCode","value":"INPUT_OBJECT","position":{"start":{"line":170,"column":8,"offset":3142},"end":{"line":170,"column":22,"offset":3156},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":3135},"end":{"line":170,"column":22,"offset":3156},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"INPUT_OBJECT_TYPE","position":{"start":{"line":172,"column":1,"offset":3158},"end":{"line":172,"column":20,"offset":3177},"indent":[]}}],"position":{"start":{"line":172,"column":1,"offset":3158},"end":{"line":172,"column":20,"offset":3177},"indent":[]}},{"type":"jsx","value":"</td>\n<td>","position":{"start":{"line":173,"column":1,"offset":3178},"end":{"line":174,"column":5,"offset":3188},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The definition of an ","position":{"start":{"line":176,"column":1,"offset":3190},"end":{"line":176,"column":22,"offset":3211},"indent":[]}},{"type":"link","title":null,"url":"./schema/#input-types","children":[{"type":"text","value":"input type","position":{"start":{"line":176,"column":23,"offset":3212},"end":{"line":176,"column":33,"offset":3222},"indent":[]}}],"position":{"start":{"line":176,"column":22,"offset":3211},"end":{"line":176,"column":57,"offset":3246},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":3190},"end":{"line":176,"column":57,"offset":3246},"indent":[]}},{"type":"jsx","value":"</td>\n</tr>","position":{"start":{"line":178,"column":1,"offset":3248},"end":{"line":179,"column":6,"offset":3259},"indent":[1]}},{"type":"jsx","value":"<tr>\n<td>","position":{"start":{"line":181,"column":1,"offset":3261},"end":{"line":182,"column":5,"offset":3270},"indent":[1]}},{"type":"heading","depth":6,"children":[{"type":"inlineCode","value":"INPUT_FIELD_DEFINITION","position":{"start":{"line":184,"column":8,"offset":3279},"end":{"line":184,"column":32,"offset":3303},"indent":[]}}],"position":{"start":{"line":184,"column":1,"offset":3272},"end":{"line":184,"column":32,"offset":3303},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"INPUT_OBJECT_FIELD","position":{"start":{"line":186,"column":1,"offset":3305},"end":{"line":186,"column":21,"offset":3325},"indent":[]}}],"position":{"start":{"line":186,"column":1,"offset":3305},"end":{"line":186,"column":21,"offset":3325},"indent":[]}},{"type":"jsx","value":"</td>\n<td>","position":{"start":{"line":187,"column":1,"offset":3326},"end":{"line":188,"column":5,"offset":3336},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The definition of a field within an ","position":{"start":{"line":190,"column":1,"offset":3338},"end":{"line":190,"column":37,"offset":3374},"indent":[]}},{"type":"link","title":null,"url":"./schema/#input-types","children":[{"type":"text","value":"input type","position":{"start":{"line":190,"column":38,"offset":3375},"end":{"line":190,"column":48,"offset":3385},"indent":[]}}],"position":{"start":{"line":190,"column":37,"offset":3374},"end":{"line":190,"column":72,"offset":3409},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":3338},"end":{"line":190,"column":72,"offset":3409},"indent":[]}},{"type":"jsx","value":"</td>\n</tr>","position":{"start":{"line":192,"column":1,"offset":3411},"end":{"line":193,"column":6,"offset":3422},"indent":[1]}},{"type":"jsx","value":"<tr>\n<td>","position":{"start":{"line":196,"column":1,"offset":3425},"end":{"line":197,"column":5,"offset":3434},"indent":[1]}},{"type":"heading","depth":6,"children":[{"type":"inlineCode","value":"SCHEMA","position":{"start":{"line":199,"column":8,"offset":3443},"end":{"line":199,"column":16,"offset":3451},"indent":[]}}],"position":{"start":{"line":199,"column":1,"offset":3436},"end":{"line":199,"column":16,"offset":3451},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"ROOT_OBJECT","position":{"start":{"line":201,"column":1,"offset":3453},"end":{"line":201,"column":14,"offset":3466},"indent":[]}}],"position":{"start":{"line":201,"column":1,"offset":3453},"end":{"line":201,"column":14,"offset":3466},"indent":[]}},{"type":"jsx","value":"</td>\n<td>","position":{"start":{"line":202,"column":1,"offset":3467},"end":{"line":203,"column":5,"offset":3477},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The top-level ","position":{"start":{"line":205,"column":1,"offset":3479},"end":{"line":205,"column":15,"offset":3493},"indent":[]}},{"type":"inlineCode","value":"schema","position":{"start":{"line":205,"column":15,"offset":3493},"end":{"line":205,"column":23,"offset":3501},"indent":[]}},{"type":"text","value":" object declaration with ","position":{"start":{"line":205,"column":23,"offset":3501},"end":{"line":205,"column":48,"offset":3526},"indent":[]}},{"type":"inlineCode","value":"query","position":{"start":{"line":205,"column":48,"offset":3526},"end":{"line":205,"column":55,"offset":3533},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":205,"column":55,"offset":3533},"end":{"line":205,"column":57,"offset":3535},"indent":[]}},{"type":"inlineCode","value":"mutation","position":{"start":{"line":205,"column":57,"offset":3535},"end":{"line":205,"column":67,"offset":3545},"indent":[]}},{"type":"text","value":", and/or ","position":{"start":{"line":205,"column":67,"offset":3545},"end":{"line":205,"column":76,"offset":3554},"indent":[]}},{"type":"inlineCode","value":"subscription","position":{"start":{"line":205,"column":76,"offset":3554},"end":{"line":205,"column":90,"offset":3568},"indent":[]}},{"type":"text","value":" fields (","position":{"start":{"line":205,"column":90,"offset":3568},"end":{"line":205,"column":99,"offset":3577},"indent":[]}},{"type":"link","title":null,"url":"https://spec.graphql.org/June2018/#example-e2969","children":[{"type":"text","value":"this declaration is usually omitted","position":{"start":{"line":205,"column":100,"offset":3578},"end":{"line":205,"column":135,"offset":3613},"indent":[]}}],"position":{"start":{"line":205,"column":99,"offset":3577},"end":{"line":205,"column":186,"offset":3664},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":205,"column":186,"offset":3664},"end":{"line":205,"column":187,"offset":3665},"indent":[]}}],"position":{"start":{"line":205,"column":1,"offset":3479},"end":{"line":205,"column":187,"offset":3665},"indent":[]}},{"type":"jsx","value":"</td>\n</tr>\n</tbody>\n</table>","position":{"start":{"line":207,"column":1,"offset":3667},"end":{"line":210,"column":9,"offset":3696},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Implementing","position":{"start":{"line":212,"column":4,"offset":3701},"end":{"line":212,"column":16,"offset":3713},"indent":[]}}],"position":{"start":{"line":212,"column":1,"offset":3698},"end":{"line":212,"column":16,"offset":3713},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Important:","position":{"start":{"line":214,"column":5,"offset":3719},"end":{"line":214,"column":15,"offset":3729},"indent":[]}}],"position":{"start":{"line":214,"column":3,"offset":3717},"end":{"line":214,"column":17,"offset":3731},"indent":[]}},{"type":"text","value":" Apollo Server 3 does not provide built-in support for custom directives. To enable this support, you need to install certain ","position":{"start":{"line":214,"column":17,"offset":3731},"end":{"line":214,"column":143,"offset":3857},"indent":[]}},{"type":"inlineCode","value":"@graphql-tools","position":{"start":{"line":214,"column":143,"offset":3857},"end":{"line":214,"column":159,"offset":3873},"indent":[]}},{"type":"text","value":" libraries.","position":{"start":{"line":214,"column":159,"offset":3873},"end":{"line":214,"column":170,"offset":3884},"indent":[]}}],"position":{"start":{"line":214,"column":3,"offset":3717},"end":{"line":214,"column":170,"offset":3884},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This article uses ","position":{"start":{"line":216,"column":3,"offset":3889},"end":{"line":216,"column":21,"offset":3907},"indent":[]}},{"type":"inlineCode","value":"@graphql-tools","position":{"start":{"line":216,"column":21,"offset":3907},"end":{"line":216,"column":37,"offset":3923},"indent":[]}},{"type":"text","value":" version 8. Previous versions use a different API for custom directives. If you're using an earlier version of ","position":{"start":{"line":216,"column":37,"offset":3923},"end":{"line":216,"column":148,"offset":4034},"indent":[]}},{"type":"inlineCode","value":"@graphql-tools","position":{"start":{"line":216,"column":148,"offset":4034},"end":{"line":216,"column":164,"offset":4050},"indent":[]}},{"type":"text","value":", see the ","position":{"start":{"line":216,"column":164,"offset":4050},"end":{"line":216,"column":174,"offset":4060},"indent":[]}},{"type":"link","title":null,"url":"/v2/schema/creating-directives/","children":[{"type":"text","value":"Apollo Server v2 docs","position":{"start":{"line":216,"column":175,"offset":4061},"end":{"line":216,"column":196,"offset":4082},"indent":[]}}],"position":{"start":{"line":216,"column":174,"offset":4060},"end":{"line":216,"column":230,"offset":4116},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":216,"column":230,"offset":4116},"end":{"line":216,"column":231,"offset":4117},"indent":[]}}],"position":{"start":{"line":216,"column":3,"offset":3889},"end":{"line":216,"column":231,"offset":4117},"indent":[]}}],"position":{"start":{"line":214,"column":1,"offset":3715},"end":{"line":216,"column":231,"offset":4117},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After you define your directive and its valid locations, you still need to define the logic that Apollo Server executes whenever it ","position":{"start":{"line":218,"column":1,"offset":4119},"end":{"line":218,"column":133,"offset":4251},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"encounters","position":{"start":{"line":218,"column":134,"offset":4252},"end":{"line":218,"column":144,"offset":4262},"indent":[]}}],"position":{"start":{"line":218,"column":133,"offset":4251},"end":{"line":218,"column":145,"offset":4263},"indent":[]}},{"type":"text","value":" the directive in your schema.","position":{"start":{"line":218,"column":145,"offset":4263},"end":{"line":218,"column":175,"offset":4293},"indent":[]}}],"position":{"start":{"line":218,"column":1,"offset":4119},"end":{"line":218,"column":175,"offset":4293},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To define custom directive logic with ","position":{"start":{"line":220,"column":1,"offset":4295},"end":{"line":220,"column":39,"offset":4333},"indent":[]}},{"type":"inlineCode","value":"@graphql-tools","position":{"start":{"line":220,"column":39,"offset":4333},"end":{"line":220,"column":55,"offset":4349},"indent":[]}},{"type":"text","value":" v8 and later, you can create ","position":{"start":{"line":220,"column":55,"offset":4349},"end":{"line":220,"column":85,"offset":4379},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"transformer functions","position":{"start":{"line":220,"column":87,"offset":4381},"end":{"line":220,"column":108,"offset":4402},"indent":[]}}],"position":{"start":{"line":220,"column":85,"offset":4379},"end":{"line":220,"column":110,"offset":4404},"indent":[]}},{"type":"text","value":" that transform an executable schema's behavior based on the directives that are present in it.","position":{"start":{"line":220,"column":110,"offset":4404},"end":{"line":220,"column":205,"offset":4499},"indent":[]}}],"position":{"start":{"line":220,"column":1,"offset":4295},"end":{"line":220,"column":205,"offset":4499},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"1. Install required libraries","position":{"start":{"line":222,"column":6,"offset":4506},"end":{"line":222,"column":35,"offset":4535},"indent":[]}}],"position":{"start":{"line":222,"column":1,"offset":4501},"end":{"line":222,"column":35,"offset":4535},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"First, install the following ","position":{"start":{"line":224,"column":1,"offset":4537},"end":{"line":224,"column":30,"offset":4566},"indent":[]}},{"type":"inlineCode","value":"@graphql-tools","position":{"start":{"line":224,"column":30,"offset":4566},"end":{"line":224,"column":46,"offset":4582},"indent":[]}},{"type":"text","value":" libraries:","position":{"start":{"line":224,"column":46,"offset":4582},"end":{"line":224,"column":57,"offset":4593},"indent":[]}}],"position":{"start":{"line":224,"column":1,"offset":4537},"end":{"line":224,"column":57,"offset":4593},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"npm install @graphql-tools/schema @graphql-tools/utils","position":{"start":{"line":226,"column":1,"offset":4595},"end":{"line":228,"column":4,"offset":4661},"indent":[1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"2. Define directive logic","position":{"start":{"line":230,"column":6,"offset":4668},"end":{"line":230,"column":31,"offset":4693},"indent":[]}}],"position":{"start":{"line":230,"column":1,"offset":4663},"end":{"line":230,"column":31,"offset":4693},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To define what Apollo Server does when it encounters your directive, you can create a ","position":{"start":{"line":232,"column":1,"offset":4695},"end":{"line":232,"column":87,"offset":4781},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"transformer function","position":{"start":{"line":232,"column":89,"offset":4783},"end":{"line":232,"column":109,"offset":4803},"indent":[]}}],"position":{"start":{"line":232,"column":87,"offset":4781},"end":{"line":232,"column":111,"offset":4805},"indent":[]}},{"type":"text","value":". This function uses the ","position":{"start":{"line":232,"column":111,"offset":4805},"end":{"line":232,"column":136,"offset":4830},"indent":[]}},{"type":"inlineCode","value":"mapSchema","position":{"start":{"line":232,"column":136,"offset":4830},"end":{"line":232,"column":147,"offset":4841},"indent":[]}},{"type":"text","value":" function to iterate through locations in your schema (field definitions, type definitions, etc.) and perform transformations wherever it encounters a particular directive (or set of directives).","position":{"start":{"line":232,"column":147,"offset":4841},"end":{"line":232,"column":342,"offset":5036},"indent":[]}}],"position":{"start":{"line":232,"column":1,"offset":4695},"end":{"line":232,"column":342,"offset":5036},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example, here's a possible transformer function for the default ","position":{"start":{"line":234,"column":1,"offset":5038},"end":{"line":234,"column":69,"offset":5106},"indent":[]}},{"type":"inlineCode","value":"@deprecated","position":{"start":{"line":234,"column":69,"offset":5106},"end":{"line":234,"column":82,"offset":5119},"indent":[]}},{"type":"text","value":" directive:","position":{"start":{"line":234,"column":82,"offset":5119},"end":{"line":234,"column":93,"offset":5130},"indent":[]}}],"position":{"start":{"line":234,"column":1,"offset":5038},"end":{"line":234,"column":93,"offset":5130},"indent":[]}},{"type":"code","lang":"js:title=directives.js","meta":null,"value":"const { mapSchema, getDirective, MapperKind } = require('@graphql-tools/utils');\n\nfunction deprecatedDirectiveTransformer(schema, directiveName) {\n  return  mapSchema(schema, {\n\n    // Executes once for each object field definition in the schema\n    [MapperKind.OBJECT_FIELD]: (fieldConfig) => {\n      const deprecatedDirective = getDirective(schema, fieldConfig, directiveName)?.[0];\n      if (deprecatedDirective) {\n        fieldConfig.deprecationReason = deprecatedDirective['reason'];\n        return fieldConfig;\n      }\n    },\n\n    // Executes once for each enum value definition in the schema\n    [MapperKind.ENUM_VALUE]: (enumValueConfig) => {\n      const deprecatedDirective = getDirective(schema, enumValueConfig, directiveName)?.[0];\n      if (deprecatedDirective) {\n        enumValueConfig.deprecationReason = deprecatedDirective['reason'];\n        return enumValueConfig;\n      }\n    }\n  });\n};","position":{"start":{"line":236,"column":1,"offset":5132},"end":{"line":261,"column":4,"offset":6068},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"As shown, the second parameter you pass ","position":{"start":{"line":263,"column":1,"offset":6070},"end":{"line":263,"column":41,"offset":6110},"indent":[]}},{"type":"inlineCode","value":"mapSchema","position":{"start":{"line":263,"column":41,"offset":6110},"end":{"line":263,"column":52,"offset":6121},"indent":[]}},{"type":"text","value":" is an object with keys that represent one or more locations in your schema. The ","position":{"start":{"line":263,"column":52,"offset":6121},"end":{"line":263,"column":133,"offset":6202},"indent":[]}},{"type":"inlineCode","value":"MapperKind","position":{"start":{"line":263,"column":133,"offset":6202},"end":{"line":263,"column":145,"offset":6214},"indent":[]}},{"type":"text","value":" enum value for each supported location is listed in ","position":{"start":{"line":263,"column":145,"offset":6214},"end":{"line":263,"column":198,"offset":6267},"indent":[]}},{"type":"link","title":null,"url":"#supported-locations","children":[{"type":"text","value":"the table above","position":{"start":{"line":263,"column":199,"offset":6268},"end":{"line":263,"column":214,"offset":6283},"indent":[]}}],"position":{"start":{"line":263,"column":198,"offset":6267},"end":{"line":263,"column":237,"offset":6306},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":263,"column":237,"offset":6306},"end":{"line":263,"column":238,"offset":6307},"indent":[]}}],"position":{"start":{"line":263,"column":1,"offset":6070},"end":{"line":263,"column":238,"offset":6307},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Example: Uppercasing strings","position":{"start":{"line":265,"column":5,"offset":6313},"end":{"line":265,"column":33,"offset":6341},"indent":[]}}],"position":{"start":{"line":265,"column":1,"offset":6309},"end":{"line":265,"column":33,"offset":6341},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Suppose you want to convert certain ","position":{"start":{"line":267,"column":1,"offset":6343},"end":{"line":267,"column":37,"offset":6379},"indent":[]}},{"type":"inlineCode","value":"String","position":{"start":{"line":267,"column":37,"offset":6379},"end":{"line":267,"column":45,"offset":6387},"indent":[]}},{"type":"text","value":" fields in your schema to uppercase before they're returned.","position":{"start":{"line":267,"column":45,"offset":6387},"end":{"line":267,"column":105,"offset":6447},"indent":[]}}],"position":{"start":{"line":267,"column":1,"offset":6343},"end":{"line":267,"column":105,"offset":6447},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This example defines an ","position":{"start":{"line":269,"column":1,"offset":6449},"end":{"line":269,"column":25,"offset":6473},"indent":[]}},{"type":"inlineCode","value":"@uppercase","position":{"start":{"line":269,"column":25,"offset":6473},"end":{"line":269,"column":37,"offset":6485},"indent":[]}},{"type":"text","value":" directive for this purpose:","position":{"start":{"line":269,"column":37,"offset":6485},"end":{"line":269,"column":65,"offset":6513},"indent":[]}}],"position":{"start":{"line":269,"column":1,"offset":6449},"end":{"line":269,"column":65,"offset":6513},"indent":[]}},{"type":"jsx","value":"<ExpansionPanel title=\"Click to expand\">","position":{"start":{"line":271,"column":1,"offset":6515},"end":{"line":271,"column":41,"offset":6555},"indent":[]}},{"type":"code","lang":"js:title=index.js","meta":null,"value":"const { ApolloServer, gql } = require('apollo-server');\nconst { makeExecutableSchema } = require('@graphql-tools/schema');\nconst { mapSchema, getDirective, MapperKind } = require('@graphql-tools/utils');\nconst { defaultFieldResolver } = require('graphql');\n\n// Our GraphQL schema\nconst typeDefs = gql`\n  directive @upper on FIELD_DEFINITION\n\n  type Query {\n    hello: String @upper\n  }\n`;\n\n// Our resolvers (notice the hard-coded string is *not* all-caps)\nconst resolvers = {\n  Query: {\n    hello() {\n      return 'Hello World!';\n    }\n  }\n};\n\n// This function takes in a schema and adds upper-casing logic\n// to every resolver for an object field that has a directive with\n// the specified name (we're using `upper`)\nfunction upperDirectiveTransformer(schema, directiveName) {\n  return mapSchema(schema, {\n\n    // Executes once for each object field in the schema\n    [MapperKind.OBJECT_FIELD]: (fieldConfig) => {\n\n      // Check whether this field has the specified directive\n      const upperDirective = getDirective(schema, fieldConfig, directiveName)?.[0];\n\n      if (upperDirective) {\n\n        // Get this field's original resolver\n        const { resolve = defaultFieldResolver } = fieldConfig;\n\n        // Replace the original resolver with a function that *first* calls\n        // the original resolver, then converts its result to upper case\n        fieldConfig.resolve = async function (source, args, context, info) {\n          const result = await resolve(source, args, context, info);\n          if (typeof result === 'string') {\n            return result.toUpperCase();\n          }\n          return result;\n        }\n        return fieldConfig;\n      }\n    }\n  });\n}\n\n// Create the base executable schema\nlet schema = makeExecutableSchema({\n  typeDefs,\n  resolvers\n});\n\n// Transform the schema by applying directive logic\nschema = upperDirectiveTransformer(schema, 'upper');\n\n// Provide the schema to the ApolloServer constructor\nconst server = new ApolloServer({schema});\n\nserver.listen().then(({ url }) => {\n  console.log(`🚀 Server ready at ${url}`);\n});","position":{"start":{"line":273,"column":1,"offset":6557},"end":{"line":344,"column":4,"offset":8652},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</ExpansionPanel>","position":{"start":{"line":346,"column":1,"offset":8654},"end":{"line":346,"column":18,"offset":8671},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This code ","position":{"start":{"line":348,"column":1,"offset":8673},"end":{"line":348,"column":11,"offset":8683},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"replaces","position":{"start":{"line":348,"column":12,"offset":8684},"end":{"line":348,"column":20,"offset":8692},"indent":[]}}],"position":{"start":{"line":348,"column":11,"offset":8683},"end":{"line":348,"column":21,"offset":8693},"indent":[]}},{"type":"text","value":" the resolver of an ","position":{"start":{"line":348,"column":21,"offset":8693},"end":{"line":348,"column":41,"offset":8713},"indent":[]}},{"type":"inlineCode","value":"@uppercase","position":{"start":{"line":348,"column":41,"offset":8713},"end":{"line":348,"column":53,"offset":8725},"indent":[]}},{"type":"text","value":" field with a new function. This new function first calls the ","position":{"start":{"line":348,"column":53,"offset":8725},"end":{"line":348,"column":115,"offset":8787},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"original","position":{"start":{"line":348,"column":116,"offset":8788},"end":{"line":348,"column":124,"offset":8796},"indent":[]}}],"position":{"start":{"line":348,"column":115,"offset":8787},"end":{"line":348,"column":125,"offset":8797},"indent":[]}},{"type":"text","value":" resolver, then transforms its result to uppercase (assuming it's a string) before returning it.","position":{"start":{"line":348,"column":125,"offset":8797},"end":{"line":348,"column":221,"offset":8893},"indent":[]}}],"position":{"start":{"line":348,"column":1,"offset":8673},"end":{"line":348,"column":221,"offset":8893},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Additional examples","position":{"start":{"line":350,"column":5,"offset":8899},"end":{"line":350,"column":24,"offset":8918},"indent":[]}}],"position":{"start":{"line":350,"column":1,"offset":8895},"end":{"line":350,"column":24,"offset":8918},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For additional examples of transforming executable schemas with directives and ","position":{"start":{"line":352,"column":1,"offset":8920},"end":{"line":352,"column":80,"offset":8999},"indent":[]}},{"type":"inlineCode","value":"mapSchema","position":{"start":{"line":352,"column":80,"offset":8999},"end":{"line":352,"column":91,"offset":9010},"indent":[]}},{"type":"text","value":", see the ","position":{"start":{"line":352,"column":91,"offset":9010},"end":{"line":352,"column":101,"offset":9020},"indent":[]}},{"type":"link","title":null,"url":"https://www.graphql-tools.com/docs/schema-directives#implementing-schema-directives","children":[{"type":"inlineCode","value":"@graphql-tools","position":{"start":{"line":352,"column":102,"offset":9021},"end":{"line":352,"column":118,"offset":9037},"indent":[]}},{"type":"text","value":" docs","position":{"start":{"line":352,"column":118,"offset":9037},"end":{"line":352,"column":123,"offset":9042},"indent":[]}}],"position":{"start":{"line":352,"column":101,"offset":9020},"end":{"line":352,"column":209,"offset":9128},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":352,"column":209,"offset":9128},"end":{"line":352,"column":210,"offset":9129},"indent":[]}}],"position":{"start":{"line":352,"column":1,"offset":8920},"end":{"line":352,"column":210,"offset":9129},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"What about query directives?","position":{"start":{"line":354,"column":4,"offset":9134},"end":{"line":354,"column":32,"offset":9162},"indent":[]}}],"position":{"start":{"line":354,"column":1,"offset":9131},"end":{"line":354,"column":32,"offset":9162},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Although directive syntax can also appear in GraphQL queries sent from the client, implementing query directives requires runtime transformation of query documents. We have deliberately restricted this implementation to transformations that take place at server construction time.","position":{"start":{"line":356,"column":1,"offset":9164},"end":{"line":356,"column":281,"offset":9444},"indent":[]}}],"position":{"start":{"line":356,"column":1,"offset":9164},"end":{"line":356,"column":281,"offset":9444},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We believe confining this logic to your schema is more sustainable than burdening your clients with it, though you can probably imagine a similar sort of abstraction for implementing query directives. If that possibility becomes a need for you, let us know.","position":{"start":{"line":358,"column":1,"offset":9446},"end":{"line":358,"column":258,"offset":9703},"indent":[]}}],"position":{"start":{"line":358,"column":1,"offset":9446},"end":{"line":358,"column":258,"offset":9703},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Creating schema directives\",\"sidebar_title\":\"Creating directives\",\"description\":\"Apply custom logic to GraphQL types, fields, and arguments\"}","position":{"start":{"line":361,"column":1,"offset":9706},"end":{"line":361,"column":180,"offset":9885},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":361,"column":180,"offset":9885}}},"scopeImports":["import {ExpansionPanel} from 'gatsby-theme-apollo-docs';","import * as React from 'react'"],"scopeIdentifiers":["ExpansionPanel","React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Creating schema directives\",\n  \"sidebar_title\": \"Creating directives\",\n  \"description\": \"Apply custom logic to GraphQL types, fields, and arguments\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Before you create a custom schema directive, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/schema/directives/\"\n  }, \"learn the basics about directives\"), \".\")), mdx(\"p\", null, \"Your schema can define custom directives that can then decorate \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"other\"), \" parts of your schema:\"), mdx(\"div\", {\n    \"className\": \"gatsby-code-title\"\n  }, \"schema.graphql\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"graphql\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-graphql line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-graphql\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"# Definition\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"directive\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token directive function\"\n  }, \"@uppercase\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"on\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"FIELD_DEFINITION\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"type\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"Query\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"# Usage\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token attr-name\"\n  }, \"hello\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token scalar\"\n  }, \"String\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token directive function\"\n  }, \"@uppercase\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"See an example implementation of this directive on CodeSandbox:\"), mdx(\"a\", {\n    href: \"https://codesandbox.io/s/github/apollographql/docs-examples/tree/main/apollo-server/v3/custom-directives/upper-case-directive?fontsize=14&hidenavigation=1&theme=dark\"\n  }, mdx(\"img\", {\n    alt: \"Edit upper-case-directive\",\n    src: \"https://codesandbox.io/static/img/play-codesandbox.svg\"\n  }))), mdx(\"p\", null, \"When you start up your app, you can use directives to transform your executable schema's behavior before you provide that schema to Apollo Server. For example, you can modify the resolver function for any decorated field (for the schema above, it could transform the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"hello\"), \" resolver's original result to uppercase).\"), mdx(\"h2\", {\n    \"id\": \"defining\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#defining\",\n    \"aria-label\": \"defining permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Defining\"), mdx(\"p\", null, \"A directive definition looks like this:\"), mdx(\"div\", {\n    \"className\": \"gatsby-code-title\"\n  }, \"schema.graphql\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"graphql\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-graphql line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-graphql\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"directive\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token directive function\"\n  }, \"@deprecated\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token attr-name\"\n  }, \"reason\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token scalar\"\n  }, \"String\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"No longer supported\\\"\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"on\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"FIELD_DEFINITION\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"|\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"ENUM_VALUE\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This is the definition for the \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"@deprecated\"), \" directive in the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://spec.graphql.org/June2018/#sec--deprecated\"\n  }, \"GraphQL spec\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The directive takes one optional argument (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"reason\"), \") with a default value (\", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"\\\"No longer supported\\\"\"), \").\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The directive can decorate any number of \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"FIELD_DEFINITION\"), \"s and \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"ENUM_VALUE\"), \"s in your schema.\")), mdx(\"h3\", {\n    \"id\": \"supported-locations\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#supported-locations\",\n    \"aria-label\": \"supported locations permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Supported locations\"), mdx(\"p\", null, \"Your custom directive can appear \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"only\"), \" in the schema locations you list after the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"on\"), \" keyword in the directive's definition.\"), mdx(\"p\", null, \"The table below lists all available locations in a GraphQL schema. Your directive can support any combination of these locations.\"), mdx(\"table\", {\n    className: \"field-table api-ref\"\n  }, mdx(\"thead\", null, mdx(\"tr\", null, mdx(\"th\", null, \"Name /\", mdx(\"br\", null), \"MapperKind\"), mdx(\"th\", null, \"Description\"))), mdx(\"tbody\", null, mdx(\"tr\", null, mdx(\"td\", null, mdx(\"h6\", {\n    \"id\": \"scalar\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h6\",\n    \"href\": \"#scalar\",\n    \"aria-label\": \"scalar permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h6\",\n    \"className\": \"language-text\"\n  }, \"SCALAR\")), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"SCALAR_TYPE\"))), mdx(\"td\", null, mdx(\"p\", null, \"The definition of a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/schema/custom-scalars/\"\n  }, \"custom scalar\")))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"h6\", {\n    \"id\": \"object\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h6\",\n    \"href\": \"#object\",\n    \"aria-label\": \"object permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h6\",\n    \"className\": \"language-text\"\n  }, \"OBJECT\")), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"OBJECT_TYPE\"))), mdx(\"td\", null, mdx(\"p\", null, \"The definition of an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/schema/schema/#object-types\"\n  }, \"object type\")))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"h6\", {\n    \"id\": \"field_definition\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h6\",\n    \"href\": \"#field_definition\",\n    \"aria-label\": \"field_definition permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h6\",\n    \"className\": \"language-text\"\n  }, \"FIELD_DEFINITION\")), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"OBJECT_FIELD\"))), mdx(\"td\", null, mdx(\"p\", null, \"The definition of a field within any defined type \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"except\"), \" an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/schema/schema/#input-types\"\n  }, \"input type\"), \" (see \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"INPUT_FIELD_DEFINITION\"), \")\"))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"h6\", {\n    \"id\": \"argument_definition\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h6\",\n    \"href\": \"#argument_definition\",\n    \"aria-label\": \"argument_definition permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h6\",\n    \"className\": \"language-text\"\n  }, \"ARGUMENT_DEFINITION\")), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"ARGUMENT\"))), mdx(\"td\", null, mdx(\"p\", null, \"The definition of a field argument\"))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"h6\", {\n    \"id\": \"interface\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h6\",\n    \"href\": \"#interface\",\n    \"aria-label\": \"interface permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h6\",\n    \"className\": \"language-text\"\n  }, \"INTERFACE\")), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"INTERFACE_TYPE\"))), mdx(\"td\", null, mdx(\"p\", null, \"The definition of an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/schema/unions-interfaces/#interface-type\"\n  }, \"interface\")))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"h6\", {\n    \"id\": \"union\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h6\",\n    \"href\": \"#union\",\n    \"aria-label\": \"union permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h6\",\n    \"className\": \"language-text\"\n  }, \"UNION\")), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"UNION_TYPE\"))), mdx(\"td\", null, mdx(\"p\", null, \"The definition of a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/schema/unions-interfaces/#union-type\"\n  }, \"union\")))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"h6\", {\n    \"id\": \"enum\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h6\",\n    \"href\": \"#enum\",\n    \"aria-label\": \"enum permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h6\",\n    \"className\": \"language-text\"\n  }, \"ENUM\")), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"ENUM_TYPE\"))), mdx(\"td\", null, mdx(\"p\", null, \"The definition of an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/schema/schema/#enum-types\"\n  }, \"enum\")))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"h6\", {\n    \"id\": \"enum_value\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h6\",\n    \"href\": \"#enum_value\",\n    \"aria-label\": \"enum_value permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h6\",\n    \"className\": \"language-text\"\n  }, \"ENUM_VALUE\")), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"ENUM_VALUE\"))), mdx(\"td\", null, mdx(\"p\", null, \"The definition of one value within an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/schema/schema/#enum-types\"\n  }, \"enum\")))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"h6\", {\n    \"id\": \"input_object\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h6\",\n    \"href\": \"#input_object\",\n    \"aria-label\": \"input_object permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h6\",\n    \"className\": \"language-text\"\n  }, \"INPUT_OBJECT\")), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"INPUT_OBJECT_TYPE\"))), mdx(\"td\", null, mdx(\"p\", null, \"The definition of an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/schema/schema/#input-types\"\n  }, \"input type\")))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"h6\", {\n    \"id\": \"input_field_definition\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h6\",\n    \"href\": \"#input_field_definition\",\n    \"aria-label\": \"input_field_definition permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h6\",\n    \"className\": \"language-text\"\n  }, \"INPUT_FIELD_DEFINITION\")), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"INPUT_OBJECT_FIELD\"))), mdx(\"td\", null, mdx(\"p\", null, \"The definition of a field within an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/schema/schema/#input-types\"\n  }, \"input type\")))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"h6\", {\n    \"id\": \"schema\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h6\",\n    \"href\": \"#schema\",\n    \"aria-label\": \"schema permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h6\",\n    \"className\": \"language-text\"\n  }, \"SCHEMA\")), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"ROOT_OBJECT\"))), mdx(\"td\", null, mdx(\"p\", null, \"The top-level \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"schema\"), \" object declaration with \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"query\"), \", \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"mutation\"), \", and/or \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"subscription\"), \" fields (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://spec.graphql.org/June2018/#example-e2969\"\n  }, \"this declaration is usually omitted\"), \")\"))))), mdx(\"h2\", {\n    \"id\": \"implementing\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#implementing\",\n    \"aria-label\": \"implementing permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Implementing\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Important:\"), \" Apollo Server 3 does not provide built-in support for custom directives. To enable this support, you need to install certain \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"@graphql-tools\"), \" libraries.\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"This article uses \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"@graphql-tools\"), \" version 8. Previous versions use a different API for custom directives. If you're using an earlier version of \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"@graphql-tools\"), \", see the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/v2/schema/creating-directives/\"\n  }, \"Apollo Server v2 docs\"), \".\")), mdx(\"p\", null, \"After you define your directive and its valid locations, you still need to define the logic that Apollo Server executes whenever it \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"encounters\"), \" the directive in your schema.\"), mdx(\"p\", null, \"To define custom directive logic with \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"@graphql-tools\"), \" v8 and later, you can create \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"transformer functions\"), \" that transform an executable schema's behavior based on the directives that are present in it.\"), mdx(\"h4\", {\n    \"id\": \"1-install-required-libraries\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#1-install-required-libraries\",\n    \"aria-label\": \"1 install required libraries permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"1. Install required libraries\"), mdx(\"p\", null, \"First, install the following \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"@graphql-tools\"), \" libraries:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-bash line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"npm\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"install\"), \" @graphql-tools/schema @graphql-tools/utils\"), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h4\", {\n    \"id\": \"2-define-directive-logic\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#2-define-directive-logic\",\n    \"aria-label\": \"2 define directive logic permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"2. Define directive logic\"), mdx(\"p\", null, \"To define what Apollo Server does when it encounters your directive, you can create a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"transformer function\"), \". This function uses the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"mapSchema\"), \" function to iterate through locations in your schema (field definitions, type definitions, etc.) and perform transformations wherever it encounters a particular directive (or set of directives).\"), mdx(\"p\", null, \"For example, here's a possible transformer function for the default \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"@deprecated\"), \" directive:\"), mdx(\"div\", {\n    \"className\": \"gatsby-code-title\"\n  }, \"directives.js\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" mapSchema\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" getDirective\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" MapperKind \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'@graphql-tools/utils'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"function\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"deprecatedDirectiveTransformer\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"schema\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" directiveName\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \"  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"mapSchema\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"schema\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Executes once for each object field definition in the schema\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), \"MapperKind\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"OBJECT_FIELD\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"fieldConfig\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" deprecatedDirective \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"getDirective\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"schema\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" fieldConfig\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" directiveName\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"?.\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, \"0\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"if\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"deprecatedDirective\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n        fieldConfig\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"deprecationReason \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" deprecatedDirective\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'reason'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" fieldConfig\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Executes once for each enum value definition in the schema\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), \"MapperKind\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"ENUM_VALUE\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"enumValueConfig\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" deprecatedDirective \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"getDirective\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"schema\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" enumValueConfig\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" directiveName\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"?.\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, \"0\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"if\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"deprecatedDirective\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n        enumValueConfig\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"deprecationReason \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" deprecatedDirective\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'reason'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" enumValueConfig\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"As shown, the second parameter you pass \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"mapSchema\"), \" is an object with keys that represent one or more locations in your schema. The \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"MapperKind\"), \" enum value for each supported location is listed in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#supported-locations\"\n  }, \"the table above\"), \".\"), mdx(\"h3\", {\n    \"id\": \"example-uppercasing-strings\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#example-uppercasing-strings\",\n    \"aria-label\": \"example uppercasing strings permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Example: Uppercasing strings\"), mdx(\"p\", null, \"Suppose you want to convert certain \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"String\"), \" fields in your schema to uppercase before they're returned.\"), mdx(\"p\", null, \"This example defines an \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"@uppercase\"), \" directive for this purpose:\"), mdx(ExpansionPanel, {\n    title: \"Click to expand\",\n    mdxType: \"ExpansionPanel\"\n  }, mdx(\"div\", {\n    \"className\": \"gatsby-code-title\"\n  }, \"index.js\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" ApolloServer\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" gql \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'apollo-server'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" makeExecutableSchema \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'@graphql-tools/schema'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" mapSchema\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" getDirective\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" MapperKind \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'@graphql-tools/utils'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" defaultFieldResolver \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'graphql'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Our GraphQL schema\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" typeDefs \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" gql\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\n  directive @upper on FIELD_DEFINITION\\n\\n  type Query {\\n    hello: String @upper\\n  }\\n\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Our resolvers (notice the hard-coded string is *not* all-caps)\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" resolvers \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"Query\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"hello\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'Hello World!'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// This function takes in a schema and adds upper-casing logic\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// to every resolver for an object field that has a directive with\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// the specified name (we're using `upper`)\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"function\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"upperDirectiveTransformer\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"schema\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" directiveName\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"mapSchema\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"schema\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Executes once for each object field in the schema\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), \"MapperKind\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"OBJECT_FIELD\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"fieldConfig\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Check whether this field has the specified directive\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" upperDirective \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"getDirective\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"schema\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" fieldConfig\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" directiveName\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"?.\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, \"0\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"if\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"upperDirective\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Get this field's original resolver\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" resolve \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" defaultFieldResolver \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" fieldConfig\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Replace the original resolver with a function that *first* calls\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// the original resolver, then converts its result to upper case\"), \"\\n        fieldConfig\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function-variable function\"\n  }, \"resolve\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"async\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"function\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, \"source\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" args\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" context\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" info\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n          \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" result \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"await\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"resolve\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"source\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" args\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" context\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" info\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n          \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"if\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"typeof\"), \" result \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"===\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'string'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n            \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" result\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"toUpperCase\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n          \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n          \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" result\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" fieldConfig\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Create the base executable schema\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"let\"), \" schema \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"makeExecutableSchema\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  typeDefs\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  resolvers\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Transform the schema by applying directive logic\"), \"\\nschema \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"upperDirectiveTransformer\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"schema\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'upper'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Provide the schema to the ApolloServer constructor\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" server \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"ApolloServer\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"schema\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\nserver\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"listen\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"then\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" url \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  console\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"log\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\uD83D\\uDE80 Server ready at \"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"${\"), \"url\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }))))), mdx(\"p\", null, \"This code \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"replaces\"), \" the resolver of an \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"@uppercase\"), \" field with a new function. This new function first calls the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"original\"), \" resolver, then transforms its result to uppercase (assuming it's a string) before returning it.\"), mdx(\"h3\", {\n    \"id\": \"additional-examples\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#additional-examples\",\n    \"aria-label\": \"additional examples permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Additional examples\"), mdx(\"p\", null, \"For additional examples of transforming executable schemas with directives and \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"mapSchema\"), \", see the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.graphql-tools.com/docs/schema-directives#implementing-schema-directives\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"@graphql-tools\"), \" docs\"), \".\"), mdx(\"h2\", {\n    \"id\": \"what-about-query-directives\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#what-about-query-directives\",\n    \"aria-label\": \"what about query directives permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"What about query directives?\"), mdx(\"p\", null, \"Although directive syntax can also appear in GraphQL queries sent from the client, implementing query directives requires runtime transformation of query documents. We have deliberately restricted this implementation to transformations that take place at server construction time.\"), mdx(\"p\", null, \"We believe confining this logic to your schema is more sustainable than burdening your clients with it, though you can probably imagine a similar sort of abstraction for implementing query directives. If that possibility becomes a need for you, let us know.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport {ExpansionPanel} from 'gatsby-theme-apollo-docs';\nexport const _frontmatter = {\n  \"title\": \"Creating schema directives\",\n  \"sidebar_title\": \"Creating directives\",\n  \"description\": \"Apply custom logic to GraphQL types, fields, and arguments\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <blockquote>\n      <p parentName=\"blockquote\">{`Before you create a custom schema directive, `}<a parentName=\"p\" {...{\n          \"href\": \"/schema/directives/\"\n        }}>{`learn the basics about directives`}</a>{`.`}</p>\n    </blockquote>\n    <p>{`Your schema can define custom directives that can then decorate `}<em parentName=\"p\">{`other`}</em>{` parts of your schema:`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title\"\n    }}>{`schema.graphql`}</div>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"graphql\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-graphql line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-graphql\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`# Definition`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`directive`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token directive function\"\n          }}>{`@uppercase`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`on`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`FIELD_DEFINITION`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`type`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`Query`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`# Usage`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token attr-name\"\n          }}>{`hello`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token scalar\"\n          }}>{`String`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token directive function\"\n          }}>{`@uppercase`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <blockquote>\n      <p parentName=\"blockquote\">{`See an example implementation of this directive on CodeSandbox:`}</p>\n      <a href=\"https://codesandbox.io/s/github/apollographql/docs-examples/tree/main/apollo-server/v3/custom-directives/upper-case-directive?fontsize=14&hidenavigation=1&theme=dark\">\n  <img alt=\"Edit upper-case-directive\" src=\"https://codesandbox.io/static/img/play-codesandbox.svg\" />\n      </a>\n    </blockquote>\n    <p>{`When you start up your app, you can use directives to transform your executable schema's behavior before you provide that schema to Apollo Server. For example, you can modify the resolver function for any decorated field (for the schema above, it could transform the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`hello`}</code>{` resolver's original result to uppercase).`}</p>\n    <h2 {...{\n      \"id\": \"defining\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#defining\",\n        \"aria-label\": \"defining permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Defining`}</h2>\n    <p>{`A directive definition looks like this:`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title\"\n    }}>{`schema.graphql`}</div>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"graphql\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-graphql line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-graphql\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`directive`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token directive function\"\n          }}>{`@deprecated`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token attr-name\"\n          }}>{`reason`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token scalar\"\n          }}>{`String`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"No longer supported\"`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`on`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`FIELD_DEFINITION`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`|`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`ENUM_VALUE`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <ul>\n      <li parentName=\"ul\">{`This is the definition for the `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`@deprecated`}</code>{` directive in the `}<a parentName=\"li\" {...{\n          \"href\": \"https://spec.graphql.org/June2018/#sec--deprecated\"\n        }}>{`GraphQL spec`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`The directive takes one optional argument (`}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`reason`}</code>{`) with a default value (`}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`\"No longer supported\"`}</code>{`).`}</li>\n      <li parentName=\"ul\">{`The directive can decorate any number of `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`FIELD_DEFINITION`}</code>{`s and `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`ENUM_VALUE`}</code>{`s in your schema.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"supported-locations\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#supported-locations\",\n        \"aria-label\": \"supported locations permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Supported locations`}</h3>\n    <p>{`Your custom directive can appear `}<em parentName=\"p\">{`only`}</em>{` in the schema locations you list after the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`on`}</code>{` keyword in the directive's definition.`}</p>\n    <p>{`The table below lists all available locations in a GraphQL schema. Your directive can support any combination of these locations.`}</p>\n    <table class=\"field-table api-ref\">\n  <thead>\n    <tr>\n      <th>Name /<br />MapperKind</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n      <tbody>\n        <tr>\n          <td>\n            <h6 {...{\n              \"id\": \"scalar\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h6\" {...{\n                \"href\": \"#scalar\",\n                \"aria-label\": \"scalar permalink\",\n                \"className\": \"anchor before\"\n              }}><svg parentName=\"a\" {...{\n                  \"aria-hidden\": \"true\",\n                  \"focusable\": \"false\",\n                  \"height\": \"16\",\n                  \"version\": \"1.1\",\n                  \"viewBox\": \"0 0 16 16\",\n                  \"width\": \"16\"\n                }}><path parentName=\"svg\" {...{\n                    \"fillRule\": \"evenodd\",\n                    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n                  }}></path></svg></a><code parentName=\"h6\" {...{\n                \"className\": \"language-text\"\n              }}>{`SCALAR`}</code></h6>\n            <p><code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`SCALAR_TYPE`}</code></p>\n          </td>\n          <td>\n            <p>{`The definition of a `}<a parentName=\"p\" {...{\n                \"href\": \"/schema/custom-scalars/\"\n              }}>{`custom scalar`}</a></p>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <h6 {...{\n              \"id\": \"object\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h6\" {...{\n                \"href\": \"#object\",\n                \"aria-label\": \"object permalink\",\n                \"className\": \"anchor before\"\n              }}><svg parentName=\"a\" {...{\n                  \"aria-hidden\": \"true\",\n                  \"focusable\": \"false\",\n                  \"height\": \"16\",\n                  \"version\": \"1.1\",\n                  \"viewBox\": \"0 0 16 16\",\n                  \"width\": \"16\"\n                }}><path parentName=\"svg\" {...{\n                    \"fillRule\": \"evenodd\",\n                    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n                  }}></path></svg></a><code parentName=\"h6\" {...{\n                \"className\": \"language-text\"\n              }}>{`OBJECT`}</code></h6>\n            <p><code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`OBJECT_TYPE`}</code></p>\n          </td>\n          <td>\n            <p>{`The definition of an `}<a parentName=\"p\" {...{\n                \"href\": \"/schema/schema/#object-types\"\n              }}>{`object type`}</a></p>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <h6 {...{\n              \"id\": \"field_definition\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h6\" {...{\n                \"href\": \"#field_definition\",\n                \"aria-label\": \"field_definition permalink\",\n                \"className\": \"anchor before\"\n              }}><svg parentName=\"a\" {...{\n                  \"aria-hidden\": \"true\",\n                  \"focusable\": \"false\",\n                  \"height\": \"16\",\n                  \"version\": \"1.1\",\n                  \"viewBox\": \"0 0 16 16\",\n                  \"width\": \"16\"\n                }}><path parentName=\"svg\" {...{\n                    \"fillRule\": \"evenodd\",\n                    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n                  }}></path></svg></a><code parentName=\"h6\" {...{\n                \"className\": \"language-text\"\n              }}>{`FIELD_DEFINITION`}</code></h6>\n            <p><code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`OBJECT_FIELD`}</code></p>\n          </td>\n          <td>\n            <p>{`The definition of a field within any defined type `}<em parentName=\"p\">{`except`}</em>{` an `}<a parentName=\"p\" {...{\n                \"href\": \"/schema/schema/#input-types\"\n              }}>{`input type`}</a>{` (see `}<code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`INPUT_FIELD_DEFINITION`}</code>{`)`}</p>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <h6 {...{\n              \"id\": \"argument_definition\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h6\" {...{\n                \"href\": \"#argument_definition\",\n                \"aria-label\": \"argument_definition permalink\",\n                \"className\": \"anchor before\"\n              }}><svg parentName=\"a\" {...{\n                  \"aria-hidden\": \"true\",\n                  \"focusable\": \"false\",\n                  \"height\": \"16\",\n                  \"version\": \"1.1\",\n                  \"viewBox\": \"0 0 16 16\",\n                  \"width\": \"16\"\n                }}><path parentName=\"svg\" {...{\n                    \"fillRule\": \"evenodd\",\n                    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n                  }}></path></svg></a><code parentName=\"h6\" {...{\n                \"className\": \"language-text\"\n              }}>{`ARGUMENT_DEFINITION`}</code></h6>\n            <p><code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`ARGUMENT`}</code></p>\n          </td>\n          <td>\n            <p>{`The definition of a field argument`}</p>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <h6 {...{\n              \"id\": \"interface\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h6\" {...{\n                \"href\": \"#interface\",\n                \"aria-label\": \"interface permalink\",\n                \"className\": \"anchor before\"\n              }}><svg parentName=\"a\" {...{\n                  \"aria-hidden\": \"true\",\n                  \"focusable\": \"false\",\n                  \"height\": \"16\",\n                  \"version\": \"1.1\",\n                  \"viewBox\": \"0 0 16 16\",\n                  \"width\": \"16\"\n                }}><path parentName=\"svg\" {...{\n                    \"fillRule\": \"evenodd\",\n                    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n                  }}></path></svg></a><code parentName=\"h6\" {...{\n                \"className\": \"language-text\"\n              }}>{`INTERFACE`}</code></h6>\n            <p><code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`INTERFACE_TYPE`}</code></p>\n          </td>\n          <td>\n            <p>{`The definition of an `}<a parentName=\"p\" {...{\n                \"href\": \"/schema/unions-interfaces/#interface-type\"\n              }}>{`interface`}</a></p>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <h6 {...{\n              \"id\": \"union\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h6\" {...{\n                \"href\": \"#union\",\n                \"aria-label\": \"union permalink\",\n                \"className\": \"anchor before\"\n              }}><svg parentName=\"a\" {...{\n                  \"aria-hidden\": \"true\",\n                  \"focusable\": \"false\",\n                  \"height\": \"16\",\n                  \"version\": \"1.1\",\n                  \"viewBox\": \"0 0 16 16\",\n                  \"width\": \"16\"\n                }}><path parentName=\"svg\" {...{\n                    \"fillRule\": \"evenodd\",\n                    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n                  }}></path></svg></a><code parentName=\"h6\" {...{\n                \"className\": \"language-text\"\n              }}>{`UNION`}</code></h6>\n            <p><code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`UNION_TYPE`}</code></p>\n          </td>\n          <td>\n            <p>{`The definition of a `}<a parentName=\"p\" {...{\n                \"href\": \"/schema/unions-interfaces/#union-type\"\n              }}>{`union`}</a></p>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <h6 {...{\n              \"id\": \"enum\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h6\" {...{\n                \"href\": \"#enum\",\n                \"aria-label\": \"enum permalink\",\n                \"className\": \"anchor before\"\n              }}><svg parentName=\"a\" {...{\n                  \"aria-hidden\": \"true\",\n                  \"focusable\": \"false\",\n                  \"height\": \"16\",\n                  \"version\": \"1.1\",\n                  \"viewBox\": \"0 0 16 16\",\n                  \"width\": \"16\"\n                }}><path parentName=\"svg\" {...{\n                    \"fillRule\": \"evenodd\",\n                    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n                  }}></path></svg></a><code parentName=\"h6\" {...{\n                \"className\": \"language-text\"\n              }}>{`ENUM`}</code></h6>\n            <p><code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`ENUM_TYPE`}</code></p>\n          </td>\n          <td>\n            <p>{`The definition of an `}<a parentName=\"p\" {...{\n                \"href\": \"/schema/schema/#enum-types\"\n              }}>{`enum`}</a></p>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <h6 {...{\n              \"id\": \"enum_value\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h6\" {...{\n                \"href\": \"#enum_value\",\n                \"aria-label\": \"enum_value permalink\",\n                \"className\": \"anchor before\"\n              }}><svg parentName=\"a\" {...{\n                  \"aria-hidden\": \"true\",\n                  \"focusable\": \"false\",\n                  \"height\": \"16\",\n                  \"version\": \"1.1\",\n                  \"viewBox\": \"0 0 16 16\",\n                  \"width\": \"16\"\n                }}><path parentName=\"svg\" {...{\n                    \"fillRule\": \"evenodd\",\n                    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n                  }}></path></svg></a><code parentName=\"h6\" {...{\n                \"className\": \"language-text\"\n              }}>{`ENUM_VALUE`}</code></h6>\n            <p><code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`ENUM_VALUE`}</code></p>\n          </td>\n          <td>\n            <p>{`The definition of one value within an `}<a parentName=\"p\" {...{\n                \"href\": \"/schema/schema/#enum-types\"\n              }}>{`enum`}</a></p>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <h6 {...{\n              \"id\": \"input_object\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h6\" {...{\n                \"href\": \"#input_object\",\n                \"aria-label\": \"input_object permalink\",\n                \"className\": \"anchor before\"\n              }}><svg parentName=\"a\" {...{\n                  \"aria-hidden\": \"true\",\n                  \"focusable\": \"false\",\n                  \"height\": \"16\",\n                  \"version\": \"1.1\",\n                  \"viewBox\": \"0 0 16 16\",\n                  \"width\": \"16\"\n                }}><path parentName=\"svg\" {...{\n                    \"fillRule\": \"evenodd\",\n                    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n                  }}></path></svg></a><code parentName=\"h6\" {...{\n                \"className\": \"language-text\"\n              }}>{`INPUT_OBJECT`}</code></h6>\n            <p><code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`INPUT_OBJECT_TYPE`}</code></p>\n          </td>\n          <td>\n            <p>{`The definition of an `}<a parentName=\"p\" {...{\n                \"href\": \"/schema/schema/#input-types\"\n              }}>{`input type`}</a></p>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <h6 {...{\n              \"id\": \"input_field_definition\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h6\" {...{\n                \"href\": \"#input_field_definition\",\n                \"aria-label\": \"input_field_definition permalink\",\n                \"className\": \"anchor before\"\n              }}><svg parentName=\"a\" {...{\n                  \"aria-hidden\": \"true\",\n                  \"focusable\": \"false\",\n                  \"height\": \"16\",\n                  \"version\": \"1.1\",\n                  \"viewBox\": \"0 0 16 16\",\n                  \"width\": \"16\"\n                }}><path parentName=\"svg\" {...{\n                    \"fillRule\": \"evenodd\",\n                    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n                  }}></path></svg></a><code parentName=\"h6\" {...{\n                \"className\": \"language-text\"\n              }}>{`INPUT_FIELD_DEFINITION`}</code></h6>\n            <p><code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`INPUT_OBJECT_FIELD`}</code></p>\n          </td>\n          <td>\n            <p>{`The definition of a field within an `}<a parentName=\"p\" {...{\n                \"href\": \"/schema/schema/#input-types\"\n              }}>{`input type`}</a></p>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <h6 {...{\n              \"id\": \"schema\",\n              \"style\": {\n                \"position\": \"relative\"\n              }\n            }}><a parentName=\"h6\" {...{\n                \"href\": \"#schema\",\n                \"aria-label\": \"schema permalink\",\n                \"className\": \"anchor before\"\n              }}><svg parentName=\"a\" {...{\n                  \"aria-hidden\": \"true\",\n                  \"focusable\": \"false\",\n                  \"height\": \"16\",\n                  \"version\": \"1.1\",\n                  \"viewBox\": \"0 0 16 16\",\n                  \"width\": \"16\"\n                }}><path parentName=\"svg\" {...{\n                    \"fillRule\": \"evenodd\",\n                    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n                  }}></path></svg></a><code parentName=\"h6\" {...{\n                \"className\": \"language-text\"\n              }}>{`SCHEMA`}</code></h6>\n            <p><code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`ROOT_OBJECT`}</code></p>\n          </td>\n          <td>\n            <p>{`The top-level `}<code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`schema`}</code>{` object declaration with `}<code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`query`}</code>{`, `}<code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`mutation`}</code>{`, and/or `}<code parentName=\"p\" {...{\n                \"className\": \"language-text\"\n              }}>{`subscription`}</code>{` fields (`}<a parentName=\"p\" {...{\n                \"href\": \"https://spec.graphql.org/June2018/#example-e2969\"\n              }}>{`this declaration is usually omitted`}</a>{`)`}</p>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"implementing\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#implementing\",\n        \"aria-label\": \"implementing permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Implementing`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Important:`}</strong>{` Apollo Server 3 does not provide built-in support for custom directives. To enable this support, you need to install certain `}<code parentName=\"p\" {...{\n          \"className\": \"language-text\"\n        }}>{`@graphql-tools`}</code>{` libraries.`}</p>\n      <p parentName=\"blockquote\">{`This article uses `}<code parentName=\"p\" {...{\n          \"className\": \"language-text\"\n        }}>{`@graphql-tools`}</code>{` version 8. Previous versions use a different API for custom directives. If you're using an earlier version of `}<code parentName=\"p\" {...{\n          \"className\": \"language-text\"\n        }}>{`@graphql-tools`}</code>{`, see the `}<a parentName=\"p\" {...{\n          \"href\": \"/v2/schema/creating-directives/\"\n        }}>{`Apollo Server v2 docs`}</a>{`.`}</p>\n    </blockquote>\n    <p>{`After you define your directive and its valid locations, you still need to define the logic that Apollo Server executes whenever it `}<em parentName=\"p\">{`encounters`}</em>{` the directive in your schema.`}</p>\n    <p>{`To define custom directive logic with `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`@graphql-tools`}</code>{` v8 and later, you can create `}<strong parentName=\"p\">{`transformer functions`}</strong>{` that transform an executable schema's behavior based on the directives that are present in it.`}</p>\n    <h4 {...{\n      \"id\": \"1-install-required-libraries\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h4\" {...{\n        \"href\": \"#1-install-required-libraries\",\n        \"aria-label\": \"1 install required libraries permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`1. Install required libraries`}</h4>\n    <p>{`First, install the following `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`@graphql-tools`}</code>{` libraries:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"bash\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-bash line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-bash\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`npm`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`install`}</span>{` @graphql-tools/schema @graphql-tools/utils`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span></span></pre></div>\n    <h4 {...{\n      \"id\": \"2-define-directive-logic\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h4\" {...{\n        \"href\": \"#2-define-directive-logic\",\n        \"aria-label\": \"2 define directive logic permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`2. Define directive logic`}</h4>\n    <p>{`To define what Apollo Server does when it encounters your directive, you can create a `}<strong parentName=\"p\">{`transformer function`}</strong>{`. This function uses the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`mapSchema`}</code>{` function to iterate through locations in your schema (field definitions, type definitions, etc.) and perform transformations wherever it encounters a particular directive (or set of directives).`}</p>\n    <p>{`For example, here's a possible transformer function for the default `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`@deprecated`}</code>{` directive:`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title\"\n    }}>{`directives.js`}</div>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"js\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-js line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` mapSchema`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` getDirective`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` MapperKind `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`require`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'@graphql-tools/utils'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`function`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`deprecatedDirectiveTransformer`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`schema`}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` directiveName`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`return`}</span>{`  `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`mapSchema`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`schema`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// Executes once for each object field definition in the schema`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`MapperKind`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`OBJECT_FIELD`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`fieldConfig`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=>`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` deprecatedDirective `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`getDirective`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`schema`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` fieldConfig`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` directiveName`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`?.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span><span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`0`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`if`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`deprecatedDirective`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n        fieldConfig`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`deprecationReason `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` deprecatedDirective`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'reason'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`return`}</span>{` fieldConfig`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// Executes once for each enum value definition in the schema`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`MapperKind`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token constant\"\n          }}>{`ENUM_VALUE`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`enumValueConfig`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=>`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` deprecatedDirective `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`getDirective`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`schema`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` enumValueConfig`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` directiveName`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`?.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span><span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`0`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`if`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`deprecatedDirective`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n        enumValueConfig`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`deprecationReason `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` deprecatedDirective`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'reason'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`return`}</span>{` enumValueConfig`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`As shown, the second parameter you pass `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`mapSchema`}</code>{` is an object with keys that represent one or more locations in your schema. The `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`MapperKind`}</code>{` enum value for each supported location is listed in `}<a parentName=\"p\" {...{\n        \"href\": \"#supported-locations\"\n      }}>{`the table above`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"example-uppercasing-strings\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#example-uppercasing-strings\",\n        \"aria-label\": \"example uppercasing strings permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Example: Uppercasing strings`}</h3>\n    <p>{`Suppose you want to convert certain `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`String`}</code>{` fields in your schema to uppercase before they're returned.`}</p>\n    <p>{`This example defines an `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`@uppercase`}</code>{` directive for this purpose:`}</p>\n    <ExpansionPanel title=\"Click to expand\" mdxType=\"ExpansionPanel\">\n      <div {...{\n        \"className\": \"gatsby-code-title\"\n      }}>{`index.js`}</div>\n      <div {...{\n        \"className\": \"gatsby-highlight\",\n        \"data-language\": \"js\"\n      }}><pre parentName=\"div\" {...{\n          \"style\": {\n            \"counterReset\": \"linenumber NaN\"\n          },\n          \"className\": \"language-js line-numbers\"\n        }}><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}><span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` ApolloServer`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` gql `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`require`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`'apollo-server'`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` makeExecutableSchema `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`require`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`'@graphql-tools/schema'`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` mapSchema`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` getDirective`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` MapperKind `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`require`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`'@graphql-tools/utils'`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` defaultFieldResolver `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`require`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`'graphql'`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// Our GraphQL schema`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` typeDefs `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` gql`}<span parentName=\"code\" {...{\n              \"className\": \"token template-string\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token template-punctuation string\"\n              }}>{`\\``}</span><span parentName=\"span\" {...{\n                \"className\": \"token string\"\n              }}>{`\n  directive @upper on FIELD_DEFINITION\n\n  type Query {\n    hello: String @upper\n  }\n`}</span><span parentName=\"span\" {...{\n                \"className\": \"token template-punctuation string\"\n              }}>{`\\``}</span></span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// Our resolvers (notice the hard-coded string is *not* all-caps)`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` resolvers `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token literal-property property\"\n            }}>{`Query`}</span><span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`hello`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`return`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`'Hello World!'`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// This function takes in a schema and adds upper-casing logic`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// to every resolver for an object field that has a directive with`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// the specified name (we're using \\`upper\\`)`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`function`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`upperDirectiveTransformer`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token parameter\"\n            }}>{`schema`}<span parentName=\"span\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`,`}</span>{` directiveName`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`return`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`mapSchema`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span>{`schema`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// Executes once for each object field in the schema`}</span>{`\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`[`}</span>{`MapperKind`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token constant\"\n            }}>{`OBJECT_FIELD`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`]`}</span><span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token parameter\"\n            }}>{`fieldConfig`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=>`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// Check whether this field has the specified directive`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` upperDirective `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`getDirective`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span>{`schema`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` fieldConfig`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` directiveName`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`?.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`[`}</span><span parentName=\"code\" {...{\n              \"className\": \"token number\"\n            }}>{`0`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`]`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`if`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span>{`upperDirective`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n\n        `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// Get this field's original resolver`}</span>{`\n        `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` resolve `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` defaultFieldResolver `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` fieldConfig`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n        `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// Replace the original resolver with a function that *first* calls`}</span>{`\n        `}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// the original resolver, then converts its result to upper case`}</span>{`\n        fieldConfig`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function-variable function\"\n            }}>{`resolve`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`async`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`function`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token parameter\"\n            }}>{`source`}<span parentName=\"span\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`,`}</span>{` args`}<span parentName=\"span\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`,`}</span>{` context`}<span parentName=\"span\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`,`}</span>{` info`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n          `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` result `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`await`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`resolve`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span>{`source`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` args`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` context`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` info`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n          `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`if`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`typeof`}</span>{` result `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`===`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`'string'`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n            `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`return`}</span>{` result`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`toUpperCase`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n          `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{`\n          `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`return`}</span>{` result`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n        `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{`\n        `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`return`}</span>{` fieldConfig`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n      `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{`\n    `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{`\n  `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span>{`\n\n`}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// Create the base executable schema`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`let`}</span>{` schema `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`makeExecutableSchema`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n  typeDefs`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{`\n  resolvers\n`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// Transform the schema by applying directive logic`}</span>{`\nschema `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`upperDirectiveTransformer`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span>{`schema`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token string\"\n            }}>{`'upper'`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n              \"className\": \"token comment\"\n            }}>{`// Provide the schema to the ApolloServer constructor`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`const`}</span>{` server `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token keyword\"\n            }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token class-name\"\n            }}>{`ApolloServer`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`schema`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n\nserver`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`listen`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`then`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token parameter\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`{`}</span>{` url `}<span parentName=\"span\" {...{\n                \"className\": \"token punctuation\"\n              }}>{`}`}</span></span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token operator\"\n            }}>{`=>`}</span>{` `}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{`\n  console`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`.`}</span><span parentName=\"code\" {...{\n              \"className\": \"token function\"\n            }}>{`log`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`(`}</span><span parentName=\"code\" {...{\n              \"className\": \"token template-string\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token template-punctuation string\"\n              }}>{`\\``}</span><span parentName=\"span\" {...{\n                \"className\": \"token string\"\n              }}>{`🚀 Server ready at `}</span><span parentName=\"span\" {...{\n                \"className\": \"token interpolation\"\n              }}><span parentName=\"span\" {...{\n                  \"className\": \"token interpolation-punctuation punctuation\"\n                }}>{`\\${`}</span>{`url`}<span parentName=\"span\" {...{\n                  \"className\": \"token interpolation-punctuation punctuation\"\n                }}>{`}`}</span></span><span parentName=\"span\" {...{\n                \"className\": \"token template-punctuation string\"\n              }}>{`\\``}</span></span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`)`}</span><span parentName=\"code\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`;`}</span></code><span parentName=\"pre\" {...{\n            \"aria-hidden\": \"true\",\n            \"className\": \"line-numbers-rows\",\n            \"style\": {\n              \"whiteSpace\": \"normal\",\n              \"width\": \"auto\",\n              \"left\": \"0\"\n            }\n          }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    </ExpansionPanel>\n    <p>{`This code `}<em parentName=\"p\">{`replaces`}</em>{` the resolver of an `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`@uppercase`}</code>{` field with a new function. This new function first calls the `}<em parentName=\"p\">{`original`}</em>{` resolver, then transforms its result to uppercase (assuming it's a string) before returning it.`}</p>\n    <h3 {...{\n      \"id\": \"additional-examples\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#additional-examples\",\n        \"aria-label\": \"additional examples permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Additional examples`}</h3>\n    <p>{`For additional examples of transforming executable schemas with directives and `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`mapSchema`}</code>{`, see the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.graphql-tools.com/docs/schema-directives#implementing-schema-directives\"\n      }}><code parentName=\"a\" {...{\n          \"className\": \"language-text\"\n        }}>{`@graphql-tools`}</code>{` docs`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"what-about-query-directives\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#what-about-query-directives\",\n        \"aria-label\": \"what about query directives permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`What about query directives?`}</h2>\n    <p>{`Although directive syntax can also appear in GraphQL queries sent from the client, implementing query directives requires runtime transformation of query documents. We have deliberately restricted this implementation to transformations that take place at server construction time.`}</p>\n    <p>{`We believe confining this logic to your schema is more sustainable than burdening your clients with it, though you can probably imagine a similar sort of abstraction for implementing query directives. If that possibility becomes a need for you, let us know.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}