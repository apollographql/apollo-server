{"expireTime":9007200901521026000,"key":"remark-check-links-1ded2dff-613e-58ad-87aa-04146f30b07f-9143aa20a6be7b387c9a090c14ae81eb","val":{"path":"/v2/schema/creating-directives/","links":[{"type":"link","title":null,"url":"/v2/schema/directives/","children":[{"type":"text","value":"learn the basics about directives","position":{"start":{"line":4,"column":49,"offset":107},"end":{"line":4,"column":82,"offset":140},"indent":[]}}],"position":{"start":{"line":4,"column":48,"offset":106},"end":{"line":4,"column":97,"offset":155},"indent":[]},"frontmatter":{"title":"Creating schema directives","description":"Apply custom logic to GraphQL types, fields, and arguments"}},{"type":"link","title":null,"url":"/v2/schema/custom-scalars/","children":[{"type":"text","value":"custom scalar","position":{"start":{"line":58,"column":22,"offset":1659},"end":{"line":58,"column":35,"offset":1672},"indent":[]}}],"position":{"start":{"line":58,"column":21,"offset":1658},"end":{"line":58,"column":55,"offset":1692},"indent":[]},"frontmatter":{"title":"Creating schema directives","description":"Apply custom logic to GraphQL types, fields, and arguments"}},{"type":"link","title":null,"url":"/v2/schema/schema/#object-types","children":[{"type":"text","value":"object type","position":{"start":{"line":72,"column":23,"offset":1810},"end":{"line":72,"column":34,"offset":1821},"indent":[]}}],"position":{"start":{"line":72,"column":22,"offset":1809},"end":{"line":72,"column":60,"offset":1847},"indent":[]},"frontmatter":{"title":"Creating schema directives","description":"Apply custom logic to GraphQL types, fields, and arguments"}},{"type":"link","title":null,"url":"/v2/schema/schema/#input-types","children":[{"type":"text","value":"input type","position":{"start":{"line":86,"column":64,"offset":2029},"end":{"line":86,"column":74,"offset":2039},"indent":[]}}],"position":{"start":{"line":86,"column":63,"offset":2028},"end":{"line":86,"column":98,"offset":2063},"indent":[]},"frontmatter":{"title":"Creating schema directives","description":"Apply custom logic to GraphQL types, fields, and arguments"}},{"type":"link","title":null,"url":"/v2/schema/unions-interfaces/#interface-type","children":[{"type":"text","value":"interface","position":{"start":{"line":114,"column":23,"offset":2375},"end":{"line":114,"column":32,"offset":2384},"indent":[]}}],"position":{"start":{"line":114,"column":22,"offset":2374},"end":{"line":114,"column":68,"offset":2420},"indent":[]},"frontmatter":{"title":"Creating schema directives","description":"Apply custom logic to GraphQL types, fields, and arguments"}},{"type":"link","title":null,"url":"/v2/schema/unions-interfaces/#union-type","children":[{"type":"text","value":"union","position":{"start":{"line":128,"column":22,"offset":2533},"end":{"line":128,"column":27,"offset":2538},"indent":[]}}],"position":{"start":{"line":128,"column":21,"offset":2532},"end":{"line":128,"column":61,"offset":2572},"indent":[]},"frontmatter":{"title":"Creating schema directives","description":"Apply custom logic to GraphQL types, fields, and arguments"}},{"type":"link","title":null,"url":"/v2/schema/schema/#enum-types","children":[{"type":"text","value":"enum","position":{"start":{"line":142,"column":23,"offset":2682},"end":{"line":142,"column":27,"offset":2686},"indent":[]}}],"position":{"start":{"line":142,"column":22,"offset":2681},"end":{"line":142,"column":50,"offset":2709},"indent":[]},"frontmatter":{"title":"Creating schema directives","description":"Apply custom logic to GraphQL types, fields, and arguments"}},{"type":"link","title":null,"url":"/v2/schema/schema/#enum-types","children":[{"type":"text","value":"enum","position":{"start":{"line":156,"column":40,"offset":2849},"end":{"line":156,"column":44,"offset":2853},"indent":[]}}],"position":{"start":{"line":156,"column":39,"offset":2848},"end":{"line":156,"column":67,"offset":2876},"indent":[]},"frontmatter":{"title":"Creating schema directives","description":"Apply custom logic to GraphQL types, fields, and arguments"}},{"type":"link","title":null,"url":"/v2/schema/schema/#input-types","children":[{"type":"text","value":"input type","position":{"start":{"line":170,"column":23,"offset":3010},"end":{"line":170,"column":33,"offset":3020},"indent":[]}}],"position":{"start":{"line":170,"column":22,"offset":3009},"end":{"line":170,"column":57,"offset":3044},"indent":[]},"frontmatter":{"title":"Creating schema directives","description":"Apply custom logic to GraphQL types, fields, and arguments"}},{"type":"link","title":null,"url":"/v2/schema/schema/#input-types","children":[{"type":"text","value":"input type","position":{"start":{"line":184,"column":38,"offset":3206},"end":{"line":184,"column":48,"offset":3216},"indent":[]}}],"position":{"start":{"line":184,"column":37,"offset":3205},"end":{"line":184,"column":72,"offset":3240},"indent":[]},"frontmatter":{"title":"Creating schema directives","description":"Apply custom logic to GraphQL types, fields, and arguments"}},{"type":"link","title":null,"url":"#supported-locations","children":[{"type":"text","value":"the table above","position":{"start":{"line":212,"column":166,"offset":4113},"end":{"line":212,"column":181,"offset":4128},"indent":[]}}],"position":{"start":{"line":212,"column":165,"offset":4112},"end":{"line":212,"column":204,"offset":4151},"indent":[]},"frontmatter":{"title":"Creating schema directives","description":"Apply custom logic to GraphQL types, fields, and arguments"}},{"type":"link","title":null,"url":"/v2/installing-graphql-tools/","children":[{"type":"text","value":"Using a different version of ","position":{"start":{"line":214,"column":97,"offset":4250},"end":{"line":214,"column":126,"offset":4279},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">graphql-tools</code>","position":{"start":{"line":214,"column":126,"offset":4279},"end":{"line":214,"column":141,"offset":4294},"indent":[]}}],"position":{"start":{"line":214,"column":96,"offset":4249},"end":{"line":214,"column":171,"offset":4324},"indent":[]},"frontmatter":{"title":"Creating schema directives","description":"Apply custom logic to GraphQL types, fields, and arguments"}},{"type":"link","title":null,"url":"#defining","children":[{"type":"html","value":"<code class=\"language-text\">reason</code>","position":{"start":{"line":242,"column":261,"offset":5296},"end":{"line":242,"column":269,"offset":5304},"indent":[]}},{"type":"text","value":" argument","position":{"start":{"line":242,"column":269,"offset":5304},"end":{"line":242,"column":278,"offset":5313},"indent":[]}}],"position":{"start":{"line":242,"column":260,"offset":5295},"end":{"line":242,"column":290,"offset":5325},"indent":[]},"frontmatter":{"title":"Creating schema directives","description":"Apply custom logic to GraphQL types, fields, and arguments"}}],"headings":["defining","supported-locations","scalar","object","field_definition","argument_definition","interface","union","enum","enum_value","input_object","input_field_definition","schema","implementing","example-deprecated","running-directive-logic-on-an-executable-schema","transforming-resolved-fields","example-uppercasing-strings","example-formatting-dates","additional-examples","fetching-data-from-a-rest-api","marking-strings-for-internationalization","enforcing-access-permissions","enforcing-value-restrictions","synthesizing-unique-ids","declaring-schema-directives","what-about-query-directives"],"setAt":1646780035155}}