{"expireTime":9007200901521012000,"key":"gatsby-plugin-mdx-entire-payload-2069d7b042bd526425d2fba1c3349568-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import {\n  ExpansionPanel,\n} from 'gatsby-theme-apollo-docs/src/components/expansion-panel';","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":4,"column":66,"offset":93},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This tutorial helps you:","position":{"start":{"line":6,"column":1,"offset":95},"end":{"line":6,"column":25,"offset":119},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":95},"end":{"line":6,"column":25,"offset":119},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Obtain a basic understanding of GraphQL principles","position":{"start":{"line":8,"column":3,"offset":123},"end":{"line":8,"column":53,"offset":173},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":123},"end":{"line":8,"column":53,"offset":173},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":121},"end":{"line":8,"column":53,"offset":173},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Define a GraphQL ","position":{"start":{"line":9,"column":3,"offset":176},"end":{"line":9,"column":20,"offset":193},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"schema","position":{"start":{"line":9,"column":22,"offset":195},"end":{"line":9,"column":28,"offset":201},"indent":[]}}],"position":{"start":{"line":9,"column":20,"offset":193},"end":{"line":9,"column":30,"offset":203},"indent":[]}},{"type":"text","value":" that represents the structure of your data set","position":{"start":{"line":9,"column":30,"offset":203},"end":{"line":9,"column":77,"offset":250},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":176},"end":{"line":9,"column":77,"offset":250},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":174},"end":{"line":9,"column":77,"offset":250},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Run an instance of Apollo Server that lets you execute queries against your schema","position":{"start":{"line":10,"column":3,"offset":253},"end":{"line":10,"column":85,"offset":335},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":253},"end":{"line":10,"column":85,"offset":335},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":251},"end":{"line":10,"column":85,"offset":335},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":121},"end":{"line":10,"column":85,"offset":335},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This tutorial assumes that you are familiar with the command line and\nJavaScript, and that you have a recent version of Node.js (12+) installed.","position":{"start":{"line":12,"column":1,"offset":337},"end":{"line":13,"column":75,"offset":481},"indent":[1]}}],"position":{"start":{"line":12,"column":1,"offset":337},"end":{"line":13,"column":75,"offset":481},"indent":[1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"This tutorial walks you through installing and configuring Apollo Server.\nIf you're just getting started with GraphQL or the Apollo\nplatform, we recommend first completing the ","position":{"start":{"line":15,"column":3,"offset":485},"end":{"line":17,"column":47,"offset":665},"indent":[3,3]}},{"type":"link","title":null,"url":"https://www.apollographql.com/docs/tutorial/introduction/","children":[{"type":"text","value":"full-stack tutorial","position":{"start":{"line":17,"column":48,"offset":666},"end":{"line":17,"column":67,"offset":685},"indent":[]}}],"position":{"start":{"line":17,"column":47,"offset":665},"end":{"line":17,"column":127,"offset":745},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":17,"column":127,"offset":745},"end":{"line":17,"column":128,"offset":746},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":485},"end":{"line":17,"column":128,"offset":746},"indent":[3,3]}}],"position":{"start":{"line":15,"column":1,"offset":483},"end":{"line":17,"column":128,"offset":746},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Step 1: Create a new project","position":{"start":{"line":19,"column":4,"offset":751},"end":{"line":19,"column":32,"offset":779},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":748},"end":{"line":19,"column":32,"offset":779},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"From your preferred development directory, create a directory for a new project\nand ","position":{"start":{"line":21,"column":4,"offset":784},"end":{"line":22,"column":5,"offset":868},"indent":[1]}},{"type":"inlineCode","value":"cd","position":{"start":{"line":22,"column":5,"offset":868},"end":{"line":22,"column":9,"offset":872},"indent":[]}},{"type":"text","value":" into it:","position":{"start":{"line":22,"column":9,"offset":872},"end":{"line":22,"column":18,"offset":881},"indent":[]}}],"position":{"start":{"line":21,"column":4,"offset":784},"end":{"line":22,"column":18,"offset":881},"indent":[1]}},{"type":"code","lang":"bash","meta":null,"value":"mkdir graphql-server-example\ncd graphql-server-example","position":{"start":{"line":24,"column":1,"offset":883},"end":{"line":27,"column":6,"offset":957},"indent":[1,1,1]}}],"position":{"start":{"line":21,"column":1,"offset":781},"end":{"line":28,"column":1,"offset":958},"indent":[1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Initialize a new Node.js project with ","position":{"start":{"line":29,"column":4,"offset":962},"end":{"line":29,"column":42,"offset":1000},"indent":[]}},{"type":"inlineCode","value":"npm","position":{"start":{"line":29,"column":42,"offset":1000},"end":{"line":29,"column":47,"offset":1005},"indent":[]}},{"type":"text","value":" (or another package manager you\nprefer, such as Yarn):","position":{"start":{"line":29,"column":47,"offset":1005},"end":{"line":30,"column":23,"offset":1060},"indent":[1]}}],"position":{"start":{"line":29,"column":4,"offset":962},"end":{"line":30,"column":23,"offset":1060},"indent":[1]}},{"type":"code","lang":"bash","meta":null,"value":"npm init --yes","position":{"start":{"line":32,"column":1,"offset":1062},"end":{"line":34,"column":6,"offset":1094},"indent":[1,1]}}],"position":{"start":{"line":29,"column":1,"offset":959},"end":{"line":34,"column":6,"offset":1094},"indent":[1,1,1,1,1]}}],"position":{"start":{"line":21,"column":1,"offset":781},"end":{"line":34,"column":6,"offset":1094},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Your project directory now contains a ","position":{"start":{"line":36,"column":1,"offset":1096},"end":{"line":36,"column":39,"offset":1134},"indent":[]}},{"type":"inlineCode","value":"package.json","position":{"start":{"line":36,"column":39,"offset":1134},"end":{"line":36,"column":53,"offset":1148},"indent":[]}},{"type":"text","value":" file.","position":{"start":{"line":36,"column":53,"offset":1148},"end":{"line":36,"column":59,"offset":1154},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1096},"end":{"line":36,"column":59,"offset":1154},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Step 2: Install dependencies","position":{"start":{"line":38,"column":4,"offset":1159},"end":{"line":38,"column":32,"offset":1187},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1156},"end":{"line":38,"column":32,"offset":1187},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Applications that run Apollo Server require two top-level dependencies:","position":{"start":{"line":40,"column":1,"offset":1189},"end":{"line":40,"column":72,"offset":1260},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1189},"end":{"line":40,"column":72,"offset":1260},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://npm.im/apollo-server","children":[{"type":"inlineCode","value":"apollo-server","position":{"start":{"line":42,"column":4,"offset":1265},"end":{"line":42,"column":19,"offset":1280},"indent":[]}}],"position":{"start":{"line":42,"column":3,"offset":1264},"end":{"line":42,"column":50,"offset":1311},"indent":[]}},{"type":"text","value":" is the core library for Apollo Server itself, which helps you define the shape of your data and how to fetch it.","position":{"start":{"line":42,"column":50,"offset":1311},"end":{"line":42,"column":163,"offset":1424},"indent":[]}}],"position":{"start":{"line":42,"column":3,"offset":1264},"end":{"line":42,"column":163,"offset":1424},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1262},"end":{"line":42,"column":163,"offset":1424},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://npm.im/graphql","children":[{"type":"inlineCode","value":"graphql","position":{"start":{"line":43,"column":4,"offset":1428},"end":{"line":43,"column":13,"offset":1437},"indent":[]}}],"position":{"start":{"line":43,"column":3,"offset":1427},"end":{"line":43,"column":38,"offset":1462},"indent":[]}},{"type":"text","value":" is the library used to build a GraphQL schema and execute queries against it.","position":{"start":{"line":43,"column":38,"offset":1462},"end":{"line":43,"column":116,"offset":1540},"indent":[]}}],"position":{"start":{"line":43,"column":3,"offset":1427},"end":{"line":43,"column":116,"offset":1540},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1425},"end":{"line":43,"column":116,"offset":1540},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1262},"end":{"line":43,"column":116,"offset":1540},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Run the following command to install both of these dependencies and save them in\nyour project's ","position":{"start":{"line":45,"column":1,"offset":1542},"end":{"line":46,"column":16,"offset":1638},"indent":[1]}},{"type":"inlineCode","value":"node_modules","position":{"start":{"line":46,"column":16,"offset":1638},"end":{"line":46,"column":30,"offset":1652},"indent":[]}},{"type":"text","value":" directory:","position":{"start":{"line":46,"column":30,"offset":1652},"end":{"line":46,"column":41,"offset":1663},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1542},"end":{"line":46,"column":41,"offset":1663},"indent":[1]}},{"type":"code","lang":"bash","meta":null,"value":"npm install apollo-server graphql","position":{"start":{"line":48,"column":1,"offset":1665},"end":{"line":50,"column":4,"offset":1710},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Also create an empty ","position":{"start":{"line":52,"column":1,"offset":1712},"end":{"line":52,"column":22,"offset":1733},"indent":[]}},{"type":"inlineCode","value":"index.js","position":{"start":{"line":52,"column":22,"offset":1733},"end":{"line":52,"column":32,"offset":1743},"indent":[]}},{"type":"text","value":" file in your project's root directory:","position":{"start":{"line":52,"column":32,"offset":1743},"end":{"line":52,"column":71,"offset":1782},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1712},"end":{"line":52,"column":71,"offset":1782},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"touch index.js","position":{"start":{"line":54,"column":1,"offset":1784},"end":{"line":56,"column":4,"offset":1810},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":" To keep things\nsimple, ","position":{"start":{"line":58,"column":1,"offset":1812},"end":{"line":59,"column":9,"offset":1836},"indent":[1]}},{"type":"inlineCode","value":"index.js","position":{"start":{"line":59,"column":9,"offset":1836},"end":{"line":59,"column":19,"offset":1846},"indent":[]}},{"type":"text","value":" will contain ","position":{"start":{"line":59,"column":19,"offset":1846},"end":{"line":59,"column":33,"offset":1860},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"all","position":{"start":{"line":59,"column":35,"offset":1862},"end":{"line":59,"column":38,"offset":1865},"indent":[]}}],"position":{"start":{"line":59,"column":33,"offset":1860},"end":{"line":59,"column":40,"offset":1867},"indent":[]}},{"type":"text","value":" of the code for this example application.","position":{"start":{"line":59,"column":40,"offset":1867},"end":{"line":59,"column":82,"offset":1909},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1812},"end":{"line":59,"column":82,"offset":1909},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Step 3: Define your GraphQL schema","position":{"start":{"line":61,"column":4,"offset":1914},"end":{"line":61,"column":38,"offset":1948},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":1911},"end":{"line":61,"column":38,"offset":1948},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Every GraphQL server (including Apollo Server) uses a ","position":{"start":{"line":63,"column":1,"offset":1950},"end":{"line":63,"column":55,"offset":2004},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"schema","position":{"start":{"line":63,"column":57,"offset":2006},"end":{"line":63,"column":63,"offset":2012},"indent":[]}}],"position":{"start":{"line":63,"column":55,"offset":2004},"end":{"line":63,"column":65,"offset":2014},"indent":[]}},{"type":"text","value":"\nto define the structure of data that clients can query.\nIn this example, we'll create a server for querying a collection\nof books by title and author.","position":{"start":{"line":63,"column":65,"offset":2014},"end":{"line":66,"column":30,"offset":2165},"indent":[1,1,1]}}],"position":{"start":{"line":63,"column":1,"offset":1950},"end":{"line":66,"column":30,"offset":2165},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Open ","position":{"start":{"line":68,"column":1,"offset":2167},"end":{"line":68,"column":6,"offset":2172},"indent":[]}},{"type":"inlineCode","value":"index.js","position":{"start":{"line":68,"column":6,"offset":2172},"end":{"line":68,"column":16,"offset":2182},"indent":[]}},{"type":"text","value":" in your preferred editor and paste the following into it:","position":{"start":{"line":68,"column":16,"offset":2182},"end":{"line":68,"column":74,"offset":2240},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":2167},"end":{"line":68,"column":74,"offset":2240},"indent":[]}},{"type":"code","lang":"js:title=index.js","meta":null,"value":"const { ApolloServer, gql } = require('apollo-server');\n\n// A schema is a collection of type definitions (hence \"typeDefs\")\n// that together define the \"shape\" of queries that are executed against\n// your data.\nconst typeDefs = gql`\n  # Comments in GraphQL strings (such as this one) start with the hash (#) symbol.\n\n  # This \"Book\" type defines the queryable fields for every book in our data source.\n  type Book {\n    title: String\n    author: String\n  }\n\n  # The \"Query\" type is special: it lists all of the available queries that\n  # clients can execute, along with the return type for each. In this\n  # case, the \"books\" query returns an array of zero or more Books (defined above).\n  type Query {\n    books: [Book]\n  }\n`;","position":{"start":{"line":70,"column":1,"offset":2242},"end":{"line":92,"column":4,"offset":2994},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This snippet defines a simple, valid GraphQL schema. Clients will be able to execute\na query named ","position":{"start":{"line":94,"column":1,"offset":2996},"end":{"line":95,"column":15,"offset":3095},"indent":[1]}},{"type":"inlineCode","value":"books","position":{"start":{"line":95,"column":15,"offset":3095},"end":{"line":95,"column":22,"offset":3102},"indent":[]}},{"type":"text","value":", and our server will return an array of zero or more ","position":{"start":{"line":95,"column":22,"offset":3102},"end":{"line":95,"column":76,"offset":3156},"indent":[]}},{"type":"inlineCode","value":"Book","position":{"start":{"line":95,"column":76,"offset":3156},"end":{"line":95,"column":82,"offset":3162},"indent":[]}},{"type":"text","value":"s.","position":{"start":{"line":95,"column":82,"offset":3162},"end":{"line":95,"column":84,"offset":3164},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":2996},"end":{"line":95,"column":84,"offset":3164},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Step 4: Define your data set","position":{"start":{"line":97,"column":4,"offset":3169},"end":{"line":97,"column":32,"offset":3197},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":3166},"end":{"line":97,"column":32,"offset":3197},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Now that we've defined the ","position":{"start":{"line":99,"column":1,"offset":3199},"end":{"line":99,"column":28,"offset":3226},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"structure","position":{"start":{"line":99,"column":29,"offset":3227},"end":{"line":99,"column":38,"offset":3236},"indent":[]}}],"position":{"start":{"line":99,"column":28,"offset":3226},"end":{"line":99,"column":39,"offset":3237},"indent":[]}},{"type":"text","value":" of our data, we can define the data itself.\nApollo Server can fetch data from any source you connect to (including\na database, a REST API, a static object storage service, or even another GraphQL\nserver). For the purposes of this tutorial, we'll just hardcode some example data.","position":{"start":{"line":99,"column":39,"offset":3237},"end":{"line":102,"column":83,"offset":3516},"indent":[1,1,1]}}],"position":{"start":{"line":99,"column":1,"offset":3199},"end":{"line":102,"column":83,"offset":3516},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Add the following to the bottom of ","position":{"start":{"line":104,"column":1,"offset":3518},"end":{"line":104,"column":36,"offset":3553},"indent":[]}},{"type":"inlineCode","value":"index.js","position":{"start":{"line":104,"column":36,"offset":3553},"end":{"line":104,"column":46,"offset":3563},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":104,"column":46,"offset":3563},"end":{"line":104,"column":47,"offset":3564},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":3518},"end":{"line":104,"column":47,"offset":3564},"indent":[]}},{"type":"code","lang":"js:title=index.js","meta":null,"value":"const books = [\n  {\n    title: 'The Awakening',\n    author: 'Kate Chopin',\n  },\n  {\n    title: 'City of Glass',\n    author: 'Paul Auster',\n  },\n];","position":{"start":{"line":106,"column":1,"offset":3566},"end":{"line":117,"column":4,"offset":3737},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This snippet defines a simple data set that clients can query. Notice that the two objects in the array each match the structure of the ","position":{"start":{"line":119,"column":1,"offset":3739},"end":{"line":119,"column":137,"offset":3875},"indent":[]}},{"type":"inlineCode","value":"Book","position":{"start":{"line":119,"column":137,"offset":3875},"end":{"line":119,"column":143,"offset":3881},"indent":[]}},{"type":"text","value":" type we defined in our schema.","position":{"start":{"line":119,"column":143,"offset":3881},"end":{"line":119,"column":174,"offset":3912},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":3739},"end":{"line":119,"column":174,"offset":3912},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Step 5: Define a resolver","position":{"start":{"line":121,"column":4,"offset":3917},"end":{"line":121,"column":29,"offset":3942},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":3914},"end":{"line":121,"column":29,"offset":3942},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We've defined our data set, but Apollo Server doesn't know that it should ","position":{"start":{"line":123,"column":1,"offset":3944},"end":{"line":123,"column":75,"offset":4018},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"use","position":{"start":{"line":123,"column":76,"offset":4019},"end":{"line":123,"column":79,"offset":4022},"indent":[]}}],"position":{"start":{"line":123,"column":75,"offset":4018},"end":{"line":123,"column":80,"offset":4023},"indent":[]}},{"type":"text","value":" that data set when it's executing a query. To fix this, we create a ","position":{"start":{"line":123,"column":80,"offset":4023},"end":{"line":123,"column":149,"offset":4092},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"resolver","position":{"start":{"line":123,"column":151,"offset":4094},"end":{"line":123,"column":159,"offset":4102},"indent":[]}}],"position":{"start":{"line":123,"column":149,"offset":4092},"end":{"line":123,"column":161,"offset":4104},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":123,"column":161,"offset":4104},"end":{"line":123,"column":162,"offset":4105},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":3944},"end":{"line":123,"column":162,"offset":4105},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Resolvers tell Apollo Server ","position":{"start":{"line":125,"column":1,"offset":4107},"end":{"line":125,"column":30,"offset":4136},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"how","position":{"start":{"line":125,"column":31,"offset":4137},"end":{"line":125,"column":34,"offset":4140},"indent":[]}}],"position":{"start":{"line":125,"column":30,"offset":4136},"end":{"line":125,"column":35,"offset":4141},"indent":[]}},{"type":"text","value":" to fetch the data associated with a particular type. Because our ","position":{"start":{"line":125,"column":35,"offset":4141},"end":{"line":125,"column":101,"offset":4207},"indent":[]}},{"type":"inlineCode","value":"Book","position":{"start":{"line":125,"column":101,"offset":4207},"end":{"line":125,"column":107,"offset":4213},"indent":[]}},{"type":"text","value":" array is hardcoded, the corresponding resolver is straightforward.","position":{"start":{"line":125,"column":107,"offset":4213},"end":{"line":125,"column":174,"offset":4280},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":4107},"end":{"line":125,"column":174,"offset":4280},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Add the following to the bottom of ","position":{"start":{"line":127,"column":1,"offset":4282},"end":{"line":127,"column":36,"offset":4317},"indent":[]}},{"type":"inlineCode","value":"index.js","position":{"start":{"line":127,"column":36,"offset":4317},"end":{"line":127,"column":46,"offset":4327},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":127,"column":46,"offset":4327},"end":{"line":127,"column":47,"offset":4328},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":4282},"end":{"line":127,"column":47,"offset":4328},"indent":[]}},{"type":"code","lang":"js:title=index.js","meta":null,"value":"// Resolvers define the technique for fetching the types defined in the\n// schema. This resolver retrieves books from the \"books\" array above.\nconst resolvers = {\n  Query: {\n    books: () => books,\n  },\n};","position":{"start":{"line":129,"column":1,"offset":4330},"end":{"line":137,"column":4,"offset":4560},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Step 6: Create an instance of ","position":{"start":{"line":139,"column":4,"offset":4565},"end":{"line":139,"column":34,"offset":4595},"indent":[]}},{"type":"inlineCode","value":"ApolloServer","position":{"start":{"line":139,"column":34,"offset":4595},"end":{"line":139,"column":48,"offset":4609},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":4562},"end":{"line":139,"column":48,"offset":4609},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We've defined our schema, data set, and resolver. Now we just need to provide\nthis information to Apollo Server when we initialize it.","position":{"start":{"line":141,"column":1,"offset":4611},"end":{"line":142,"column":57,"offset":4745},"indent":[1]}}],"position":{"start":{"line":141,"column":1,"offset":4611},"end":{"line":142,"column":57,"offset":4745},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Add the following to the bottom of ","position":{"start":{"line":144,"column":1,"offset":4747},"end":{"line":144,"column":36,"offset":4782},"indent":[]}},{"type":"inlineCode","value":"index.js","position":{"start":{"line":144,"column":36,"offset":4782},"end":{"line":144,"column":46,"offset":4792},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":144,"column":46,"offset":4792},"end":{"line":144,"column":47,"offset":4793},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":4747},"end":{"line":144,"column":47,"offset":4793},"indent":[]}},{"type":"code","lang":"js:title=index.js","meta":null,"value":"// The ApolloServer constructor requires two parameters: your schema\n// definition and your set of resolvers.\nconst server = new ApolloServer({ typeDefs, resolvers });\n\n// The `listen` method launches a web server.\nserver.listen().then(({ url }) => {\n  console.log(`🚀  Server ready at ${url}`);\n});","position":{"start":{"line":146,"column":1,"offset":4795},"end":{"line":155,"column":4,"offset":5119},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Step 7: Start the server","position":{"start":{"line":157,"column":4,"offset":5124},"end":{"line":157,"column":28,"offset":5148},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":5121},"end":{"line":157,"column":28,"offset":5148},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We're ready to start our server! Run the following from your project's root\ndirectory:","position":{"start":{"line":159,"column":1,"offset":5150},"end":{"line":160,"column":11,"offset":5236},"indent":[1]}}],"position":{"start":{"line":159,"column":1,"offset":5150},"end":{"line":160,"column":11,"offset":5236},"indent":[1]}},{"type":"code","lang":"bash","meta":null,"value":"node index.js","position":{"start":{"line":162,"column":1,"offset":5238},"end":{"line":164,"column":4,"offset":5263},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You should see the following output:","position":{"start":{"line":166,"column":1,"offset":5265},"end":{"line":166,"column":37,"offset":5301},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":5265},"end":{"line":166,"column":37,"offset":5301},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"🚀 Server ready at http://localhost:4000/","position":{"start":{"line":168,"column":1,"offset":5303},"end":{"line":170,"column":4,"offset":5352},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We're up and running!","position":{"start":{"line":172,"column":1,"offset":5354},"end":{"line":172,"column":22,"offset":5375},"indent":[]}}],"position":{"start":{"line":172,"column":1,"offset":5354},"end":{"line":172,"column":22,"offset":5375},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Step 8: Execute your first query","position":{"start":{"line":174,"column":4,"offset":5380},"end":{"line":174,"column":36,"offset":5412},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":5377},"end":{"line":174,"column":36,"offset":5412},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can now execute GraphQL queries on our server. To execute our first query, we can use ","position":{"start":{"line":176,"column":1,"offset":5414},"end":{"line":176,"column":90,"offset":5503},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Apollo Sandbox","position":{"start":{"line":176,"column":92,"offset":5505},"end":{"line":176,"column":106,"offset":5519},"indent":[]}}],"position":{"start":{"line":176,"column":90,"offset":5503},"end":{"line":176,"column":108,"offset":5521},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":176,"column":108,"offset":5521},"end":{"line":176,"column":109,"offset":5522},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":5414},"end":{"line":176,"column":109,"offset":5522},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Visit ","position":{"start":{"line":178,"column":1,"offset":5524},"end":{"line":178,"column":7,"offset":5530},"indent":[]}},{"type":"inlineCode","value":"http://localhost:4000","position":{"start":{"line":178,"column":7,"offset":5530},"end":{"line":178,"column":30,"offset":5553},"indent":[]}},{"type":"text","value":" in your browser. Apollo Server's default landing page appears:","position":{"start":{"line":178,"column":30,"offset":5553},"end":{"line":178,"column":93,"offset":5616},"indent":[]}}],"position":{"start":{"line":178,"column":1,"offset":5524},"end":{"line":178,"column":93,"offset":5616},"indent":[]}},{"type":"jsx","value":"<img class=\"screenshot\" src=\"./images/as-landing-page.jpg\" alt=\"Apollo Server default landing page\" width=\"350\"/>","position":{"start":{"line":180,"column":1,"offset":5618},"end":{"line":180,"column":114,"offset":5731},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Click ","position":{"start":{"line":182,"column":1,"offset":5733},"end":{"line":182,"column":7,"offset":5739},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Query your server","position":{"start":{"line":182,"column":9,"offset":5741},"end":{"line":182,"column":26,"offset":5758},"indent":[]}}],"position":{"start":{"line":182,"column":7,"offset":5739},"end":{"line":182,"column":28,"offset":5760},"indent":[]}},{"type":"text","value":" to open Sandbox.","position":{"start":{"line":182,"column":28,"offset":5760},"end":{"line":182,"column":45,"offset":5777},"indent":[]}}],"position":{"start":{"line":182,"column":1,"offset":5733},"end":{"line":182,"column":45,"offset":5777},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"You can also:","position":{"start":{"line":184,"column":3,"offset":5781},"end":{"line":184,"column":16,"offset":5794},"indent":[]}}],"position":{"start":{"line":184,"column":3,"offset":5781},"end":{"line":184,"column":16,"offset":5794},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Select ","position":{"start":{"line":186,"column":5,"offset":5801},"end":{"line":186,"column":12,"offset":5808},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Automatically redirect to Studio next time","position":{"start":{"line":186,"column":14,"offset":5810},"end":{"line":186,"column":56,"offset":5852},"indent":[]}}],"position":{"start":{"line":186,"column":12,"offset":5808},"end":{"line":186,"column":58,"offset":5854},"indent":[]}},{"type":"text","value":" if you want to open Sandbox automatically whenever you visit ","position":{"start":{"line":186,"column":58,"offset":5854},"end":{"line":186,"column":120,"offset":5916},"indent":[]}},{"type":"inlineCode","value":"localhost:4000","position":{"start":{"line":186,"column":120,"offset":5916},"end":{"line":186,"column":136,"offset":5932},"indent":[]}}],"position":{"start":{"line":186,"column":5,"offset":5801},"end":{"line":186,"column":136,"offset":5932},"indent":[]}}],"position":{"start":{"line":186,"column":3,"offset":5799},"end":{"line":186,"column":136,"offset":5932},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Open Sandbox directly at ","position":{"start":{"line":187,"column":5,"offset":5937},"end":{"line":187,"column":30,"offset":5962},"indent":[]}},{"type":"link","title":null,"url":"https://studio.apollographql.com/sandbox","children":[{"type":"text","value":"studio.apollographql.com/sandbox","position":{"start":{"line":187,"column":31,"offset":5963},"end":{"line":187,"column":63,"offset":5995},"indent":[]}}],"position":{"start":{"line":187,"column":30,"offset":5962},"end":{"line":187,"column":106,"offset":6038},"indent":[]}}],"position":{"start":{"line":187,"column":5,"offset":5937},"end":{"line":187,"column":106,"offset":6038},"indent":[]}}],"position":{"start":{"line":187,"column":3,"offset":5935},"end":{"line":187,"column":106,"offset":6038},"indent":[]}}],"position":{"start":{"line":186,"column":3,"offset":5799},"end":{"line":187,"column":106,"offset":6038},"indent":[3]}}],"position":{"start":{"line":184,"column":1,"offset":5779},"end":{"line":187,"column":106,"offset":6038},"indent":[1,1,1]}},{"type":"jsx","value":"<img class=\"screenshot\" src=\"./images/sandbox.jpg\" alt=\"Apollo Sandbox\"/>","position":{"start":{"line":189,"column":1,"offset":6040},"end":{"line":189,"column":74,"offset":6113},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The Sandbox UI includes:","position":{"start":{"line":191,"column":1,"offset":6115},"end":{"line":191,"column":25,"offset":6139},"indent":[]}}],"position":{"start":{"line":191,"column":1,"offset":6115},"end":{"line":191,"column":25,"offset":6139},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"An Operations panel for writing and executing queries (in the middle)","position":{"start":{"line":193,"column":3,"offset":6143},"end":{"line":193,"column":72,"offset":6212},"indent":[]}}],"position":{"start":{"line":193,"column":3,"offset":6143},"end":{"line":193,"column":72,"offset":6212},"indent":[]}}],"position":{"start":{"line":193,"column":1,"offset":6141},"end":{"line":193,"column":72,"offset":6212},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A Response panel for viewing query results (on the right)","position":{"start":{"line":194,"column":3,"offset":6215},"end":{"line":194,"column":60,"offset":6272},"indent":[]}}],"position":{"start":{"line":194,"column":3,"offset":6215},"end":{"line":194,"column":60,"offset":6272},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":6213},"end":{"line":194,"column":60,"offset":6272},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Tabs for schema exploration, search, and settings (on the left)","position":{"start":{"line":195,"column":3,"offset":6275},"end":{"line":195,"column":66,"offset":6338},"indent":[]}}],"position":{"start":{"line":195,"column":3,"offset":6275},"end":{"line":195,"column":66,"offset":6338},"indent":[]}}],"position":{"start":{"line":195,"column":1,"offset":6273},"end":{"line":195,"column":66,"offset":6338},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A URL bar for connecting to other GraphQL servers (in the upper left)","position":{"start":{"line":196,"column":3,"offset":6341},"end":{"line":196,"column":72,"offset":6410},"indent":[]}}],"position":{"start":{"line":196,"column":3,"offset":6341},"end":{"line":196,"column":72,"offset":6410},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":6339},"end":{"line":196,"column":72,"offset":6410},"indent":[]}}],"position":{"start":{"line":193,"column":1,"offset":6141},"end":{"line":196,"column":72,"offset":6410},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Our server supports a single query named ","position":{"start":{"line":198,"column":1,"offset":6412},"end":{"line":198,"column":42,"offset":6453},"indent":[]}},{"type":"inlineCode","value":"books","position":{"start":{"line":198,"column":42,"offset":6453},"end":{"line":198,"column":49,"offset":6460},"indent":[]}},{"type":"text","value":". Let's execute it!","position":{"start":{"line":198,"column":49,"offset":6460},"end":{"line":198,"column":68,"offset":6479},"indent":[]}}],"position":{"start":{"line":198,"column":1,"offset":6412},"end":{"line":198,"column":68,"offset":6479},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here's a GraphQL ","position":{"start":{"line":200,"column":1,"offset":6481},"end":{"line":200,"column":18,"offset":6498},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"query string","position":{"start":{"line":200,"column":20,"offset":6500},"end":{"line":200,"column":32,"offset":6512},"indent":[]}}],"position":{"start":{"line":200,"column":18,"offset":6498},"end":{"line":200,"column":34,"offset":6514},"indent":[]}},{"type":"text","value":" for executing the ","position":{"start":{"line":200,"column":34,"offset":6514},"end":{"line":200,"column":53,"offset":6533},"indent":[]}},{"type":"inlineCode","value":"books","position":{"start":{"line":200,"column":53,"offset":6533},"end":{"line":200,"column":60,"offset":6540},"indent":[]}},{"type":"text","value":" query:","position":{"start":{"line":200,"column":60,"offset":6540},"end":{"line":200,"column":67,"offset":6547},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":6481},"end":{"line":200,"column":67,"offset":6547},"indent":[]}},{"type":"code","lang":"graphql","meta":null,"value":"query GetBooks {\n  books {\n    title\n    author\n  }\n}","position":{"start":{"line":202,"column":1,"offset":6549},"end":{"line":209,"column":4,"offset":6617},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Paste this string into the Operations panel and click the blue button in the upper right. The results (from our hardcoded data set) appear in the Response panel:","position":{"start":{"line":211,"column":1,"offset":6619},"end":{"line":211,"column":162,"offset":6780},"indent":[]}}],"position":{"start":{"line":211,"column":1,"offset":6619},"end":{"line":211,"column":162,"offset":6780},"indent":[]}},{"type":"jsx","value":"<img class=\"screenshot\" src=\"./images/sandbox-response.jpg\" width=\"400\" alt=\"Sandbox response panel\"/>","position":{"start":{"line":213,"column":1,"offset":6782},"end":{"line":213,"column":103,"offset":6884},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":215,"column":5,"offset":6890},"end":{"line":215,"column":10,"offset":6895},"indent":[]}}],"position":{"start":{"line":215,"column":3,"offset":6888},"end":{"line":215,"column":12,"offset":6897},"indent":[]}},{"type":"text","value":" If your server is deployed to an environment where ","position":{"start":{"line":215,"column":12,"offset":6897},"end":{"line":215,"column":64,"offset":6949},"indent":[]}},{"type":"inlineCode","value":"NODE_ENV","position":{"start":{"line":215,"column":64,"offset":6949},"end":{"line":215,"column":74,"offset":6959},"indent":[]}},{"type":"text","value":" is set to ","position":{"start":{"line":215,"column":74,"offset":6959},"end":{"line":215,"column":85,"offset":6970},"indent":[]}},{"type":"inlineCode","value":"production","position":{"start":{"line":215,"column":85,"offset":6970},"end":{"line":215,"column":97,"offset":6982},"indent":[]}},{"type":"text","value":", introspection is ","position":{"start":{"line":215,"column":97,"offset":6982},"end":{"line":215,"column":116,"offset":7001},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"disabled","position":{"start":{"line":215,"column":118,"offset":7003},"end":{"line":215,"column":126,"offset":7011},"indent":[]}}],"position":{"start":{"line":215,"column":116,"offset":7001},"end":{"line":215,"column":128,"offset":7013},"indent":[]}},{"type":"text","value":" by default. This prevents Apollo Sandbox from working properly. To enable introspection, set ","position":{"start":{"line":215,"column":128,"offset":7013},"end":{"line":215,"column":222,"offset":7107},"indent":[]}},{"type":"inlineCode","value":"introspection: true","position":{"start":{"line":215,"column":222,"offset":7107},"end":{"line":215,"column":243,"offset":7128},"indent":[]}},{"type":"text","value":" in ","position":{"start":{"line":215,"column":243,"offset":7128},"end":{"line":215,"column":247,"offset":7132},"indent":[]}},{"type":"link","title":null,"url":"./api/apollo-server/#constructor","children":[{"type":"text","value":"the options to ","position":{"start":{"line":215,"column":248,"offset":7133},"end":{"line":215,"column":263,"offset":7148},"indent":[]}},{"type":"inlineCode","value":"ApolloServer","position":{"start":{"line":215,"column":263,"offset":7148},"end":{"line":215,"column":277,"offset":7162},"indent":[]}},{"type":"text","value":"'s constructor","position":{"start":{"line":215,"column":277,"offset":7162},"end":{"line":215,"column":291,"offset":7176},"indent":[]}}],"position":{"start":{"line":215,"column":247,"offset":7132},"end":{"line":215,"column":326,"offset":7211},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":215,"column":326,"offset":7211},"end":{"line":215,"column":327,"offset":7212},"indent":[]}}],"position":{"start":{"line":215,"column":3,"offset":6888},"end":{"line":215,"column":327,"offset":7212},"indent":[]}}],"position":{"start":{"line":215,"column":1,"offset":6886},"end":{"line":215,"column":327,"offset":7212},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"One of the most important concepts of GraphQL is that clients can choose to query ","position":{"start":{"line":217,"column":1,"offset":7214},"end":{"line":217,"column":83,"offset":7296},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"only for the fields they need","position":{"start":{"line":217,"column":84,"offset":7297},"end":{"line":217,"column":113,"offset":7326},"indent":[]}}],"position":{"start":{"line":217,"column":83,"offset":7296},"end":{"line":217,"column":114,"offset":7327},"indent":[]}},{"type":"text","value":". Delete ","position":{"start":{"line":217,"column":114,"offset":7327},"end":{"line":217,"column":123,"offset":7336},"indent":[]}},{"type":"inlineCode","value":"author","position":{"start":{"line":217,"column":123,"offset":7336},"end":{"line":217,"column":131,"offset":7344},"indent":[]}},{"type":"text","value":" from the query string and execute it again. The response updates to include only the ","position":{"start":{"line":217,"column":131,"offset":7344},"end":{"line":217,"column":217,"offset":7430},"indent":[]}},{"type":"inlineCode","value":"title","position":{"start":{"line":217,"column":217,"offset":7430},"end":{"line":217,"column":224,"offset":7437},"indent":[]}},{"type":"text","value":" field for each book!","position":{"start":{"line":217,"column":224,"offset":7437},"end":{"line":217,"column":245,"offset":7458},"indent":[]}}],"position":{"start":{"line":217,"column":1,"offset":7214},"end":{"line":217,"column":245,"offset":7458},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Combined example","position":{"start":{"line":219,"column":4,"offset":7463},"end":{"line":219,"column":20,"offset":7479},"indent":[]}}],"position":{"start":{"line":219,"column":1,"offset":7460},"end":{"line":219,"column":20,"offset":7479},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can view and fork this complete example on CodeSandbox:","position":{"start":{"line":221,"column":1,"offset":7481},"end":{"line":221,"column":60,"offset":7540},"indent":[]}}],"position":{"start":{"line":221,"column":1,"offset":7481},"end":{"line":221,"column":60,"offset":7540},"indent":[]}},{"type":"jsx","value":"<a href=\"https://codesandbox.io/s/github/apollographql/docs-examples/tree/main/apollo-server/v3/getting-started?fontsize=14&hidenavigation=1&theme=dark\">\n  <img alt=\"Edit server-getting-started\" src=\"https://codesandbox.io/static/img/play-codesandbox.svg\" />\n</a>","position":{"start":{"line":223,"column":1,"offset":7542},"end":{"line":225,"column":5,"offset":7805},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Next steps","position":{"start":{"line":227,"column":4,"offset":7810},"end":{"line":227,"column":14,"offset":7820},"indent":[]}}],"position":{"start":{"line":227,"column":1,"offset":7807},"end":{"line":227,"column":14,"offset":7820},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This example application is a great starting point for working with\nApollo Server. Check out the following resources to learn more about the basics\nof schemas, resolvers, and deployment:","position":{"start":{"line":229,"column":1,"offset":7822},"end":{"line":231,"column":39,"offset":8008},"indent":[1,1]}}],"position":{"start":{"line":229,"column":1,"offset":7822},"end":{"line":231,"column":39,"offset":8008},"indent":[1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"/schema/schema/","children":[{"type":"text","value":"Schema basics","position":{"start":{"line":233,"column":4,"offset":8013},"end":{"line":233,"column":17,"offset":8026},"indent":[]}}],"position":{"start":{"line":233,"column":3,"offset":8012},"end":{"line":233,"column":35,"offset":8044},"indent":[]}}],"position":{"start":{"line":233,"column":3,"offset":8012},"end":{"line":233,"column":35,"offset":8044},"indent":[]}}],"position":{"start":{"line":233,"column":1,"offset":8010},"end":{"line":233,"column":35,"offset":8044},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"/data/resolvers/","children":[{"type":"text","value":"Resolvers","position":{"start":{"line":234,"column":4,"offset":8048},"end":{"line":234,"column":13,"offset":8057},"indent":[]}}],"position":{"start":{"line":234,"column":3,"offset":8047},"end":{"line":234,"column":32,"offset":8076},"indent":[]}}],"position":{"start":{"line":234,"column":3,"offset":8047},"end":{"line":234,"column":32,"offset":8076},"indent":[]}}],"position":{"start":{"line":234,"column":1,"offset":8045},"end":{"line":234,"column":32,"offset":8076},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"/deployment/heroku/","children":[{"type":"text","value":"Deploying with Heroku","position":{"start":{"line":235,"column":4,"offset":8080},"end":{"line":235,"column":25,"offset":8101},"indent":[]}}],"position":{"start":{"line":235,"column":3,"offset":8079},"end":{"line":235,"column":47,"offset":8123},"indent":[]}}],"position":{"start":{"line":235,"column":3,"offset":8079},"end":{"line":235,"column":47,"offset":8123},"indent":[]}}],"position":{"start":{"line":235,"column":1,"offset":8077},"end":{"line":235,"column":47,"offset":8123},"indent":[]}}],"position":{"start":{"line":233,"column":1,"offset":8010},"end":{"line":235,"column":47,"offset":8123},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Get started with Apollo Server\",\"sidebar_title\":\"Get started\"}","position":{"start":{"line":238,"column":1,"offset":8126},"end":{"line":238,"column":101,"offset":8226},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":238,"column":101,"offset":8226}}},"scopeImports":["import {\n  ExpansionPanel,\n} from 'gatsby-theme-apollo-docs/src/components/expansion-panel';","import * as React from 'react'"],"scopeIdentifiers":["ExpansionPanel","React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Get started with Apollo Server\",\n  \"sidebar_title\": \"Get started\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This tutorial helps you:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Obtain a basic understanding of GraphQL principles\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Define a GraphQL \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"schema\"), \" that represents the structure of your data set\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Run an instance of Apollo Server that lets you execute queries against your schema\")), mdx(\"p\", null, \"This tutorial assumes that you are familiar with the command line and\\nJavaScript, and that you have a recent version of Node.js (12+) installed.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"This tutorial walks you through installing and configuring Apollo Server.\\nIf you're just getting started with GraphQL or the Apollo\\nplatform, we recommend first completing the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.apollographql.com/docs/tutorial/introduction/\"\n  }, \"full-stack tutorial\"), \".\")), mdx(\"h2\", {\n    \"id\": \"step-1-create-a-new-project\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#step-1-create-a-new-project\",\n    \"aria-label\": \"step 1 create a new project permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Step 1: Create a new project\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"From your preferred development directory, create a directory for a new project\\nand \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"cd\"), \" into it:\"), mdx(\"div\", {\n    parentName: \"li\",\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-bash line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"mkdir\"), \" graphql-server-example\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token builtin class-name\"\n  }, \"cd\"), \" graphql-server-example\"), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }))))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Initialize a new Node.js project with \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"npm\"), \" (or another package manager you\\nprefer, such as Yarn):\"), mdx(\"div\", {\n    parentName: \"li\",\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-bash line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"npm\"), \" init --yes\"), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  })))))), mdx(\"p\", null, \"Your project directory now contains a \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"package.json\"), \" file.\"), mdx(\"h2\", {\n    \"id\": \"step-2-install-dependencies\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#step-2-install-dependencies\",\n    \"aria-label\": \"step 2 install dependencies permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Step 2: Install dependencies\"), mdx(\"p\", null, \"Applications that run Apollo Server require two top-level dependencies:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://npm.im/apollo-server\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"apollo-server\")), \" is the core library for Apollo Server itself, which helps you define the shape of your data and how to fetch it.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://npm.im/graphql\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"graphql\")), \" is the library used to build a GraphQL schema and execute queries against it.\")), mdx(\"p\", null, \"Run the following command to install both of these dependencies and save them in\\nyour project's \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"node_modules\"), \" directory:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-bash line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"npm\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"install\"), \" apollo-server graphql\"), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"Also create an empty \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"index.js\"), \" file in your project's root directory:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-bash line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"touch\"), \" index.js\"), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \" To keep things\\nsimple, \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"index.js\"), \" will contain \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"all\"), \" of the code for this example application.\"), mdx(\"h2\", {\n    \"id\": \"step-3-define-your-graphql-schema\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#step-3-define-your-graphql-schema\",\n    \"aria-label\": \"step 3 define your graphql schema permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Step 3: Define your GraphQL schema\"), mdx(\"p\", null, \"Every GraphQL server (including Apollo Server) uses a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"schema\"), \"\\nto define the structure of data that clients can query.\\nIn this example, we'll create a server for querying a collection\\nof books by title and author.\"), mdx(\"p\", null, \"Open \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"index.js\"), \" in your preferred editor and paste the following into it:\"), mdx(\"div\", {\n    \"className\": \"gatsby-code-title\"\n  }, \"index.js\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" ApolloServer\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" gql \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"require\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'apollo-server'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// A schema is a collection of type definitions (hence \\\"typeDefs\\\")\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// that together define the \\\"shape\\\" of queries that are executed against\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// your data.\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" typeDefs \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" gql\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\n  # Comments in GraphQL strings (such as this one) start with the hash (#) symbol.\\n\\n  # This \\\"Book\\\" type defines the queryable fields for every book in our data source.\\n  type Book {\\n    title: String\\n    author: String\\n  }\\n\\n  # The \\\"Query\\\" type is special: it lists all of the available queries that\\n  # clients can execute, along with the return type for each. In this\\n  # case, the \\\"books\\\" query returns an array of zero or more Books (defined above).\\n  type Query {\\n    books: [Book]\\n  }\\n\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"This snippet defines a simple, valid GraphQL schema. Clients will be able to execute\\na query named \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"books\"), \", and our server will return an array of zero or more \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Book\"), \"s.\"), mdx(\"h2\", {\n    \"id\": \"step-4-define-your-data-set\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#step-4-define-your-data-set\",\n    \"aria-label\": \"step 4 define your data set permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Step 4: Define your data set\"), mdx(\"p\", null, \"Now that we've defined the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"structure\"), \" of our data, we can define the data itself.\\nApollo Server can fetch data from any source you connect to (including\\na database, a REST API, a static object storage service, or even another GraphQL\\nserver). For the purposes of this tutorial, we'll just hardcode some example data.\"), mdx(\"p\", null, \"Add the following to the bottom of \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"index.js\"), \":\"), mdx(\"div\", {\n    \"className\": \"gatsby-code-title\"\n  }, \"index.js\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" books \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"title\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'The Awakening'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"author\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'Kate Chopin'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"title\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'City of Glass'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"author\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'Paul Auster'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"This snippet defines a simple data set that clients can query. Notice that the two objects in the array each match the structure of the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Book\"), \" type we defined in our schema.\"), mdx(\"h2\", {\n    \"id\": \"step-5-define-a-resolver\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#step-5-define-a-resolver\",\n    \"aria-label\": \"step 5 define a resolver permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Step 5: Define a resolver\"), mdx(\"p\", null, \"We've defined our data set, but Apollo Server doesn't know that it should \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"use\"), \" that data set when it's executing a query. To fix this, we create a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"resolver\"), \".\"), mdx(\"p\", null, \"Resolvers tell Apollo Server \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"how\"), \" to fetch the data associated with a particular type. Because our \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Book\"), \" array is hardcoded, the corresponding resolver is straightforward.\"), mdx(\"p\", null, \"Add the following to the bottom of \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"index.js\"), \":\"), mdx(\"div\", {\n    \"className\": \"gatsby-code-title\"\n  }, \"index.js\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// Resolvers define the technique for fetching the types defined in the\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// schema. This resolver retrieves books from the \\\"books\\\" array above.\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" resolvers \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"Query\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function-variable function\"\n  }, \"books\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" books\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h2\", {\n    \"id\": \"step-6-create-an-instance-of-apolloserver\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#step-6-create-an-instance-of-apolloserver\",\n    \"aria-label\": \"step 6 create an instance of apolloserver permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Step 6: Create an instance of \", mdx(\"code\", {\n    parentName: \"h2\",\n    \"className\": \"language-text\"\n  }, \"ApolloServer\")), mdx(\"p\", null, \"We've defined our schema, data set, and resolver. Now we just need to provide\\nthis information to Apollo Server when we initialize it.\"), mdx(\"p\", null, \"Add the following to the bottom of \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"index.js\"), \":\"), mdx(\"div\", {\n    \"className\": \"gatsby-code-title\"\n  }, \"index.js\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// The ApolloServer constructor requires two parameters: your schema\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// definition and your set of resolvers.\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" server \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"ApolloServer\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" typeDefs\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" resolvers \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// The `listen` method launches a web server.\"), \"\\nserver\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"listen\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"then\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" url \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  console\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"log\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\uD83D\\uDE80  Server ready at \"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"${\"), \"url\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h2\", {\n    \"id\": \"step-7-start-the-server\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#step-7-start-the-server\",\n    \"aria-label\": \"step 7 start the server permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Step 7: Start the server\"), mdx(\"p\", null, \"We're ready to start our server! Run the following from your project's root\\ndirectory:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-bash line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"node\"), \" index.js\"), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"You should see the following output:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"\\uD83D\\uDE80 Server ready at http://localhost:4000/\"), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"We're up and running!\"), mdx(\"h2\", {\n    \"id\": \"step-8-execute-your-first-query\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#step-8-execute-your-first-query\",\n    \"aria-label\": \"step 8 execute your first query permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Step 8: Execute your first query\"), mdx(\"p\", null, \"We can now execute GraphQL queries on our server. To execute our first query, we can use \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Apollo Sandbox\"), \".\"), mdx(\"p\", null, \"Visit \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"http://localhost:4000\"), \" in your browser. Apollo Server's default landing page appears:\"), mdx(\"img\", {\n    className: \"screenshot\",\n    src: \"/db1146d295220a862a1374847b4a1d43/as-landing-page.jpg\",\n    alt: \"Apollo Server default landing page\",\n    width: \"350\"\n  }), mdx(\"p\", null, \"Click \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Query your server\"), \" to open Sandbox.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"You can also:\"), mdx(\"ul\", {\n    parentName: \"blockquote\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Select \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Automatically redirect to Studio next time\"), \" if you want to open Sandbox automatically whenever you visit \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"localhost:4000\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Open Sandbox directly at \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://studio.apollographql.com/sandbox\"\n  }, \"studio.apollographql.com/sandbox\")))), mdx(\"img\", {\n    className: \"screenshot\",\n    src: \"/b14e5c6ad1ceddecb0da4b576e2a28f9/sandbox.jpg\",\n    alt: \"Apollo Sandbox\"\n  }), mdx(\"p\", null, \"The Sandbox UI includes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"An Operations panel for writing and executing queries (in the middle)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A Response panel for viewing query results (on the right)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tabs for schema exploration, search, and settings (on the left)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A URL bar for connecting to other GraphQL servers (in the upper left)\")), mdx(\"p\", null, \"Our server supports a single query named \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"books\"), \". Let's execute it!\"), mdx(\"p\", null, \"Here's a GraphQL \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"query string\"), \" for executing the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"books\"), \" query:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"graphql\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-graphql line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-graphql\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"query\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token definition-query function\"\n  }, \"GetBooks\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token object\"\n  }, \"books\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"title\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"author\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"Paste this string into the Operations panel and click the blue button in the upper right. The results (from our hardcoded data set) appear in the Response panel:\"), mdx(\"img\", {\n    className: \"screenshot\",\n    src: \"/ad1aa4a3273b7466d557da98855a3e0a/sandbox-response.jpg\",\n    width: \"400\",\n    alt: \"Sandbox response panel\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note:\"), \" If your server is deployed to an environment where \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"NODE_ENV\"), \" is set to \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"production\"), \", introspection is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"disabled\"), \" by default. This prevents Apollo Sandbox from working properly. To enable introspection, set \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"introspection: true\"), \" in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/api/apollo-server/#constructor\"\n  }, \"the options to \", mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"ApolloServer\"), \"'s constructor\"), \".\")), mdx(\"p\", null, \"One of the most important concepts of GraphQL is that clients can choose to query \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"only for the fields they need\"), \". Delete \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"author\"), \" from the query string and execute it again. The response updates to include only the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"title\"), \" field for each book!\"), mdx(\"h2\", {\n    \"id\": \"combined-example\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#combined-example\",\n    \"aria-label\": \"combined example permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Combined example\"), mdx(\"p\", null, \"You can view and fork this complete example on CodeSandbox:\"), mdx(\"a\", {\n    href: \"https://codesandbox.io/s/github/apollographql/docs-examples/tree/main/apollo-server/v3/getting-started?fontsize=14&hidenavigation=1&theme=dark\"\n  }, mdx(\"img\", {\n    alt: \"Edit server-getting-started\",\n    src: \"https://codesandbox.io/static/img/play-codesandbox.svg\"\n  })), mdx(\"h2\", {\n    \"id\": \"next-steps\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#next-steps\",\n    \"aria-label\": \"next steps permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Next steps\"), mdx(\"p\", null, \"This example application is a great starting point for working with\\nApollo Server. Check out the following resources to learn more about the basics\\nof schemas, resolvers, and deployment:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/schema/schema/\"\n  }, \"Schema basics\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/data/resolvers/\"\n  }, \"Resolvers\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/deployment/heroku/\"\n  }, \"Deploying with Heroku\"))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport {\n  ExpansionPanel,\n} from 'gatsby-theme-apollo-docs/src/components/expansion-panel';\nexport const _frontmatter = {\n  \"title\": \"Get started with Apollo Server\",\n  \"sidebar_title\": \"Get started\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`This tutorial helps you:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Obtain a basic understanding of GraphQL principles`}</li>\n      <li parentName=\"ul\">{`Define a GraphQL `}<strong parentName=\"li\">{`schema`}</strong>{` that represents the structure of your data set`}</li>\n      <li parentName=\"ul\">{`Run an instance of Apollo Server that lets you execute queries against your schema`}</li>\n    </ul>\n    <p>{`This tutorial assumes that you are familiar with the command line and\nJavaScript, and that you have a recent version of Node.js (12+) installed.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`This tutorial walks you through installing and configuring Apollo Server.\nIf you're just getting started with GraphQL or the Apollo\nplatform, we recommend first completing the `}<a parentName=\"p\" {...{\n          \"href\": \"https://www.apollographql.com/docs/tutorial/introduction/\"\n        }}>{`full-stack tutorial`}</a>{`.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"step-1-create-a-new-project\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#step-1-create-a-new-project\",\n        \"aria-label\": \"step 1 create a new project permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Step 1: Create a new project`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`From your preferred development directory, create a directory for a new project\nand `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`cd`}</code>{` into it:`}</p>\n        <div parentName=\"li\" {...{\n          \"className\": \"gatsby-highlight\",\n          \"data-language\": \"bash\"\n        }}><pre parentName=\"div\" {...{\n            \"style\": {\n              \"counterReset\": \"linenumber NaN\"\n            },\n            \"className\": \"language-bash line-numbers\"\n          }}><code parentName=\"pre\" {...{\n              \"className\": \"language-bash\"\n            }}><span parentName=\"code\" {...{\n                \"className\": \"token function\"\n              }}>{`mkdir`}</span>{` graphql-server-example\n`}<span parentName=\"code\" {...{\n                \"className\": \"token builtin class-name\"\n              }}>{`cd`}</span>{` graphql-server-example`}</code><span parentName=\"pre\" {...{\n              \"aria-hidden\": \"true\",\n              \"className\": \"line-numbers-rows\",\n              \"style\": {\n                \"whiteSpace\": \"normal\",\n                \"width\": \"auto\",\n                \"left\": \"0\"\n              }\n            }}><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Initialize a new Node.js project with `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`npm`}</code>{` (or another package manager you\nprefer, such as Yarn):`}</p>\n        <div parentName=\"li\" {...{\n          \"className\": \"gatsby-highlight\",\n          \"data-language\": \"bash\"\n        }}><pre parentName=\"div\" {...{\n            \"style\": {\n              \"counterReset\": \"linenumber NaN\"\n            },\n            \"className\": \"language-bash line-numbers\"\n          }}><code parentName=\"pre\" {...{\n              \"className\": \"language-bash\"\n            }}><span parentName=\"code\" {...{\n                \"className\": \"token function\"\n              }}>{`npm`}</span>{` init --yes`}</code><span parentName=\"pre\" {...{\n              \"aria-hidden\": \"true\",\n              \"className\": \"line-numbers-rows\",\n              \"style\": {\n                \"whiteSpace\": \"normal\",\n                \"width\": \"auto\",\n                \"left\": \"0\"\n              }\n            }}><span parentName=\"span\"></span></span></pre></div>\n      </li>\n    </ol>\n    <p>{`Your project directory now contains a `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`package.json`}</code>{` file.`}</p>\n    <h2 {...{\n      \"id\": \"step-2-install-dependencies\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#step-2-install-dependencies\",\n        \"aria-label\": \"step 2 install dependencies permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Step 2: Install dependencies`}</h2>\n    <p>{`Applications that run Apollo Server require two top-level dependencies:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://npm.im/apollo-server\"\n        }}><code parentName=\"a\" {...{\n            \"className\": \"language-text\"\n          }}>{`apollo-server`}</code></a>{` is the core library for Apollo Server itself, which helps you define the shape of your data and how to fetch it.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://npm.im/graphql\"\n        }}><code parentName=\"a\" {...{\n            \"className\": \"language-text\"\n          }}>{`graphql`}</code></a>{` is the library used to build a GraphQL schema and execute queries against it.`}</li>\n    </ul>\n    <p>{`Run the following command to install both of these dependencies and save them in\nyour project's `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`node_modules`}</code>{` directory:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"bash\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-bash line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-bash\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`npm`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`install`}</span>{` apollo-server graphql`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span></span></pre></div>\n    <p>{`Also create an empty `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`index.js`}</code>{` file in your project's root directory:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"bash\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-bash line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-bash\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`touch`}</span>{` index.js`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span></span></pre></div>\n    <p>{` To keep things\nsimple, `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`index.js`}</code>{` will contain `}<strong parentName=\"p\">{`all`}</strong>{` of the code for this example application.`}</p>\n    <h2 {...{\n      \"id\": \"step-3-define-your-graphql-schema\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#step-3-define-your-graphql-schema\",\n        \"aria-label\": \"step 3 define your graphql schema permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Step 3: Define your GraphQL schema`}</h2>\n    <p>{`Every GraphQL server (including Apollo Server) uses a `}<strong parentName=\"p\">{`schema`}</strong>{`\nto define the structure of data that clients can query.\nIn this example, we'll create a server for querying a collection\nof books by title and author.`}</p>\n    <p>{`Open `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`index.js`}</code>{` in your preferred editor and paste the following into it:`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title\"\n    }}>{`index.js`}</div>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"js\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-js line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` ApolloServer`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` gql `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`require`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'apollo-server'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// A schema is a collection of type definitions (hence \"typeDefs\")`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// that together define the \"shape\" of queries that are executed against`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// your data.`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` typeDefs `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` gql`}<span parentName=\"code\" {...{\n            \"className\": \"token template-string\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`\n  # Comments in GraphQL strings (such as this one) start with the hash (#) symbol.\n\n  # This \"Book\" type defines the queryable fields for every book in our data source.\n  type Book {\n    title: String\n    author: String\n  }\n\n  # The \"Query\" type is special: it lists all of the available queries that\n  # clients can execute, along with the return type for each. In this\n  # case, the \"books\" query returns an array of zero or more Books (defined above).\n  type Query {\n    books: [Book]\n  }\n`}</span><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`This snippet defines a simple, valid GraphQL schema. Clients will be able to execute\na query named `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`books`}</code>{`, and our server will return an array of zero or more `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Book`}</code>{`s.`}</p>\n    <h2 {...{\n      \"id\": \"step-4-define-your-data-set\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#step-4-define-your-data-set\",\n        \"aria-label\": \"step 4 define your data set permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Step 4: Define your data set`}</h2>\n    <p>{`Now that we've defined the `}<em parentName=\"p\">{`structure`}</em>{` of our data, we can define the data itself.\nApollo Server can fetch data from any source you connect to (including\na database, a REST API, a static object storage service, or even another GraphQL\nserver). For the purposes of this tutorial, we'll just hardcode some example data.`}</p>\n    <p>{`Add the following to the bottom of `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`index.js`}</code>{`:`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title\"\n    }}>{`index.js`}</div>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"js\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-js line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` books `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`title`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'The Awakening'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`author`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'Kate Chopin'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`title`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'City of Glass'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`author`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'Paul Auster'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`This snippet defines a simple data set that clients can query. Notice that the two objects in the array each match the structure of the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Book`}</code>{` type we defined in our schema.`}</p>\n    <h2 {...{\n      \"id\": \"step-5-define-a-resolver\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#step-5-define-a-resolver\",\n        \"aria-label\": \"step 5 define a resolver permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Step 5: Define a resolver`}</h2>\n    <p>{`We've defined our data set, but Apollo Server doesn't know that it should `}<em parentName=\"p\">{`use`}</em>{` that data set when it's executing a query. To fix this, we create a `}<strong parentName=\"p\">{`resolver`}</strong>{`.`}</p>\n    <p>{`Resolvers tell Apollo Server `}<em parentName=\"p\">{`how`}</em>{` to fetch the data associated with a particular type. Because our `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Book`}</code>{` array is hardcoded, the corresponding resolver is straightforward.`}</p>\n    <p>{`Add the following to the bottom of `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`index.js`}</code>{`:`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title\"\n    }}>{`index.js`}</div>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"js\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-js line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// Resolvers define the technique for fetching the types defined in the`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// schema. This resolver retrieves books from the \"books\" array above.`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` resolvers `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token literal-property property\"\n          }}>{`Query`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token function-variable function\"\n          }}>{`books`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=>`}</span>{` books`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <h2 {...{\n      \"id\": \"step-6-create-an-instance-of-apolloserver\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#step-6-create-an-instance-of-apolloserver\",\n        \"aria-label\": \"step 6 create an instance of apolloserver permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Step 6: Create an instance of `}<code parentName=\"h2\" {...{\n        \"className\": \"language-text\"\n      }}>{`ApolloServer`}</code></h2>\n    <p>{`We've defined our schema, data set, and resolver. Now we just need to provide\nthis information to Apollo Server when we initialize it.`}</p>\n    <p>{`Add the following to the bottom of `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`index.js`}</code>{`:`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title\"\n    }}>{`index.js`}</div>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"js\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-js line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// The ApolloServer constructor requires two parameters: your schema`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// definition and your set of resolvers.`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` server `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`new`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`ApolloServer`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` typeDefs`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` resolvers `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// The \\`listen\\` method launches a web server.`}</span>{`\nserver`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`listen`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`then`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`{`}</span>{` url `}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`}`}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=>`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  console`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`log`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token template-string\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`🚀  Server ready at `}</span><span parentName=\"span\" {...{\n              \"className\": \"token interpolation\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token interpolation-punctuation punctuation\"\n              }}>{`\\${`}</span>{`url`}<span parentName=\"span\" {...{\n                \"className\": \"token interpolation-punctuation punctuation\"\n              }}>{`}`}</span></span><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <h2 {...{\n      \"id\": \"step-7-start-the-server\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#step-7-start-the-server\",\n        \"aria-label\": \"step 7 start the server permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Step 7: Start the server`}</h2>\n    <p>{`We're ready to start our server! Run the following from your project's root\ndirectory:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"bash\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-bash line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-bash\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`node`}</span>{` index.js`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span></span></pre></div>\n    <p>{`You should see the following output:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-text line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`🚀 Server ready at http://localhost:4000/`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span></span></pre></div>\n    <p>{`We're up and running!`}</p>\n    <h2 {...{\n      \"id\": \"step-8-execute-your-first-query\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#step-8-execute-your-first-query\",\n        \"aria-label\": \"step 8 execute your first query permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Step 8: Execute your first query`}</h2>\n    <p>{`We can now execute GraphQL queries on our server. To execute our first query, we can use `}<strong parentName=\"p\">{`Apollo Sandbox`}</strong>{`.`}</p>\n    <p>{`Visit `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`http://localhost:4000`}</code>{` in your browser. Apollo Server's default landing page appears:`}</p>\n    <img class=\"screenshot\" src=\"/db1146d295220a862a1374847b4a1d43/as-landing-page.jpg\" alt=\"Apollo Server default landing page\" width=\"350\" />\n    <p>{`Click `}<strong parentName=\"p\">{`Query your server`}</strong>{` to open Sandbox.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`You can also:`}</p>\n      <ul parentName=\"blockquote\">\n        <li parentName=\"ul\">{`Select `}<strong parentName=\"li\">{`Automatically redirect to Studio next time`}</strong>{` if you want to open Sandbox automatically whenever you visit `}<code parentName=\"li\" {...{\n            \"className\": \"language-text\"\n          }}>{`localhost:4000`}</code></li>\n        <li parentName=\"ul\">{`Open Sandbox directly at `}<a parentName=\"li\" {...{\n            \"href\": \"https://studio.apollographql.com/sandbox\"\n          }}>{`studio.apollographql.com/sandbox`}</a></li>\n      </ul>\n    </blockquote>\n    <img class=\"screenshot\" src=\"/b14e5c6ad1ceddecb0da4b576e2a28f9/sandbox.jpg\" alt=\"Apollo Sandbox\" />\n    <p>{`The Sandbox UI includes:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`An Operations panel for writing and executing queries (in the middle)`}</li>\n      <li parentName=\"ul\">{`A Response panel for viewing query results (on the right)`}</li>\n      <li parentName=\"ul\">{`Tabs for schema exploration, search, and settings (on the left)`}</li>\n      <li parentName=\"ul\">{`A URL bar for connecting to other GraphQL servers (in the upper left)`}</li>\n    </ul>\n    <p>{`Our server supports a single query named `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`books`}</code>{`. Let's execute it!`}</p>\n    <p>{`Here's a GraphQL `}<strong parentName=\"p\">{`query string`}</strong>{` for executing the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`books`}</code>{` query:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"graphql\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-graphql line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-graphql\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`query`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token definition-query function\"\n          }}>{`GetBooks`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token object\"\n          }}>{`books`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token property\"\n          }}>{`title`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token property\"\n          }}>{`author`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span></code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`Paste this string into the Operations panel and click the blue button in the upper right. The results (from our hardcoded data set) appear in the Response panel:`}</p>\n    <img class=\"screenshot\" src=\"/ad1aa4a3273b7466d557da98855a3e0a/sandbox-response.jpg\" width=\"400\" alt=\"Sandbox response panel\" />\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Note:`}</strong>{` If your server is deployed to an environment where `}<code parentName=\"p\" {...{\n          \"className\": \"language-text\"\n        }}>{`NODE_ENV`}</code>{` is set to `}<code parentName=\"p\" {...{\n          \"className\": \"language-text\"\n        }}>{`production`}</code>{`, introspection is `}<strong parentName=\"p\">{`disabled`}</strong>{` by default. This prevents Apollo Sandbox from working properly. To enable introspection, set `}<code parentName=\"p\" {...{\n          \"className\": \"language-text\"\n        }}>{`introspection: true`}</code>{` in `}<a parentName=\"p\" {...{\n          \"href\": \"/api/apollo-server/#constructor\"\n        }}>{`the options to `}<code parentName=\"a\" {...{\n            \"className\": \"language-text\"\n          }}>{`ApolloServer`}</code>{`'s constructor`}</a>{`.`}</p>\n    </blockquote>\n    <p>{`One of the most important concepts of GraphQL is that clients can choose to query `}<em parentName=\"p\">{`only for the fields they need`}</em>{`. Delete `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`author`}</code>{` from the query string and execute it again. The response updates to include only the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`title`}</code>{` field for each book!`}</p>\n    <h2 {...{\n      \"id\": \"combined-example\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#combined-example\",\n        \"aria-label\": \"combined example permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Combined example`}</h2>\n    <p>{`You can view and fork this complete example on CodeSandbox:`}</p>\n    <a href=\"https://codesandbox.io/s/github/apollographql/docs-examples/tree/main/apollo-server/v3/getting-started?fontsize=14&hidenavigation=1&theme=dark\">\n  <img alt=\"Edit server-getting-started\" src=\"https://codesandbox.io/static/img/play-codesandbox.svg\" />\n    </a>\n    <h2 {...{\n      \"id\": \"next-steps\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#next-steps\",\n        \"aria-label\": \"next steps permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Next steps`}</h2>\n    <p>{`This example application is a great starting point for working with\nApollo Server. Check out the following resources to learn more about the basics\nof schemas, resolvers, and deployment:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/schema/schema/\"\n        }}>{`Schema basics`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/data/resolvers/\"\n        }}>{`Resolvers`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/deployment/heroku/\"\n        }}>{`Deploying with Heroku`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}