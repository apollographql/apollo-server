{"expireTime":9007200901521014000,"key":"transformer-remark-markdown-html-ast-dff36ff5a3fd0d8904e5443b38f19624-gatsby-remark-autolink-headersgatsby-remark-copy-linked-filesgatsby-remark-mermaidgatsby-remark-code-titlesgatsby-remark-prismjsgatsby-remark-rewrite-relative-linksgatsby-remark-check-links-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Your GraphQL API probably needs to control which users can see and interact with the various data it provides.","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":111,"offset":111}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":111,"offset":111}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Authentication","position":{"start":{"line":4,"column":5,"offset":117},"end":{"line":4,"column":19,"offset":131}}}],"position":{"start":{"line":4,"column":3,"offset":115},"end":{"line":4,"column":21,"offset":133}}},{"type":"text","value":" is determining whether a given user is logged in, and subsequently determining ","position":{"start":{"line":4,"column":21,"offset":133},"end":{"line":4,"column":101,"offset":213}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"which","position":{"start":{"line":4,"column":102,"offset":214},"end":{"line":4,"column":107,"offset":219}}}],"position":{"start":{"line":4,"column":101,"offset":213},"end":{"line":4,"column":108,"offset":220}}},{"type":"text","value":" user someone is.","position":{"start":{"line":4,"column":108,"offset":220},"end":{"line":4,"column":125,"offset":237}}}],"position":{"start":{"line":4,"column":1,"offset":113},"end":{"line":4,"column":125,"offset":237}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Authorization","position":{"start":{"line":5,"column":5,"offset":242},"end":{"line":5,"column":18,"offset":255}}}],"position":{"start":{"line":5,"column":3,"offset":240},"end":{"line":5,"column":20,"offset":257}}},{"type":"text","value":" is then determining what a given user has permission to do or see.","position":{"start":{"line":5,"column":20,"offset":257},"end":{"line":5,"column":87,"offset":324}}}],"position":{"start":{"line":5,"column":1,"offset":238},"end":{"line":5,"column":87,"offset":324}}},{"type":"text","value":"\n"}],"position":{"start":{"line":4,"column":1,"offset":113},"end":{"line":5,"column":87,"offset":324}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"putting-authenticated-user-info-on-the-context","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#putting-authenticated-user-info-on-the-context","aria-label":"putting authenticated user info on the context permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Putting authenticated user info on the ","position":{"start":{"line":7,"column":4,"offset":329},"end":{"line":7,"column":43,"offset":368}}},{"type":"raw","value":"<code class=\"language-text\">context</code>","position":{"start":{"line":7,"column":43,"offset":368},"end":{"line":7,"column":52,"offset":377}}}],"position":{"start":{"line":7,"column":1,"offset":326},"end":{"line":7,"column":52,"offset":377}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Before we can correctly control access to data, we have to authenticate a user. There are many patterns for providing authentication credentials, including HTTP headers and JSON web tokens.","position":{"start":{"line":9,"column":1,"offset":379},"end":{"line":9,"column":190,"offset":568}}}],"position":{"start":{"line":9,"column":1,"offset":379},"end":{"line":9,"column":190,"offset":568}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The example below extracts a user token from the HTTP ","position":{"start":{"line":11,"column":1,"offset":570},"end":{"line":11,"column":55,"offset":624}}},{"type":"raw","value":"<code class=\"language-text\">Authorization</code>","position":{"start":{"line":11,"column":55,"offset":624},"end":{"line":11,"column":70,"offset":639}}},{"type":"text","value":" header included in each operation request. It then fetches the corresponding user object for that token and adds that object to ","position":{"start":{"line":11,"column":70,"offset":639},"end":{"line":11,"column":199,"offset":768}}},{"type":"element","tagName":"a","properties":{"href":"/data/resolvers/#the-context-argument"},"children":[{"type":"text","value":"the ","position":{"start":{"line":11,"column":200,"offset":769},"end":{"line":11,"column":204,"offset":773}}},{"type":"raw","value":"<code class=\"language-text\">context</code>","position":{"start":{"line":11,"column":204,"offset":773},"end":{"line":11,"column":213,"offset":782}}},{"type":"text","value":" object","position":{"start":{"line":11,"column":213,"offset":782},"end":{"line":11,"column":220,"offset":789}}}],"position":{"start":{"line":11,"column":199,"offset":768},"end":{"line":11,"column":262,"offset":831}}},{"type":"text","value":" that's passed to every executed resolver. Each resolver can then use this object to determine what data the user has access to.","position":{"start":{"line":11,"column":262,"offset":831},"end":{"line":11,"column":390,"offset":959}}}],"position":{"start":{"line":11,"column":1,"offset":570},"end":{"line":11,"column":390,"offset":959}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> ApolloServer <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'apollo-server'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApolloServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n typeDefs<span class=\"token punctuation\">,</span>\n resolvers<span class=\"token punctuation\">,</span>\n <span class=\"token function-variable function\">context</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> req <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n   <span class=\"token comment\">// Note: This example uses the `req` argument to access headers,</span>\n   <span class=\"token comment\">// but the arguments received by `context` vary by integration.</span>\n   <span class=\"token comment\">// This means they vary for Express, Koa, Lambda, etc.</span>\n   <span class=\"token comment\">//</span>\n   <span class=\"token comment\">// To find out the correct arguments for a specific integration,</span>\n   <span class=\"token comment\">// see https://www.apollographql.com/docs/apollo-server/api/apollo-server/#middleware-specific-context-fields</span>\n\n   <span class=\"token comment\">// Get the user token from the headers.</span>\n   <span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>authorization <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Try to retrieve a user with the token</span>\n   <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Add the user to the context</span>\n   <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> user <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nserver<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> url <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">🚀 Server ready at </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":13,"column":1,"offset":961},"end":{"line":41,"column":4,"offset":1801}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Because ","position":{"start":{"line":43,"column":3,"offset":1805},"end":{"line":43,"column":11,"offset":1813}}},{"type":"raw","value":"<code class=\"language-text\">context</code>","position":{"start":{"line":43,"column":11,"offset":1813},"end":{"line":43,"column":20,"offset":1822}}},{"type":"text","value":" is generated separately for every new request, we don't have to worry about cleaning up user data at the end of an operation's execution.","position":{"start":{"line":43,"column":20,"offset":1822},"end":{"line":43,"column":158,"offset":1960}}}],"position":{"start":{"line":43,"column":3,"offset":1805},"end":{"line":43,"column":158,"offset":1960}}},{"type":"text","value":"\n"}],"position":{"start":{"line":43,"column":1,"offset":1803},"end":{"line":43,"column":158,"offset":1960}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The specifics of retrieving a user will look different for each method of authentication, but the final part will look about the same every time. The authorization needs for your schema may require you to put nothing more than ","position":{"start":{"line":45,"column":1,"offset":1962},"end":{"line":45,"column":228,"offset":2189}}},{"type":"raw","value":"<code class=\"language-text\">{ loggedIn: true }</code>","position":{"start":{"line":45,"column":228,"offset":2189},"end":{"line":45,"column":248,"offset":2209}}},{"type":"text","value":" into context, but also may require an id or roles, like ","position":{"start":{"line":45,"column":248,"offset":2209},"end":{"line":45,"column":305,"offset":2266}}},{"type":"raw","value":"<code class=\"language-text\">{ user: { id: 12345, roles: ['user', 'admin'] } }</code>","position":{"start":{"line":45,"column":305,"offset":2266},"end":{"line":45,"column":356,"offset":2317}}},{"type":"text","value":".","position":{"start":{"line":45,"column":356,"offset":2317},"end":{"line":45,"column":357,"offset":2318}}}],"position":{"start":{"line":45,"column":1,"offset":1962},"end":{"line":45,"column":357,"offset":2318}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the next section, we'll look at ways to use the user information we now have to secure your schema.","position":{"start":{"line":47,"column":1,"offset":2320},"end":{"line":47,"column":103,"offset":2422}}}],"position":{"start":{"line":47,"column":1,"offset":2320},"end":{"line":47,"column":103,"offset":2422}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"authorization-methods","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#authorization-methods","aria-label":"authorization methods permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Authorization methods","position":{"start":{"line":49,"column":4,"offset":2427},"end":{"line":49,"column":25,"offset":2448}}}],"position":{"start":{"line":49,"column":1,"offset":2424},"end":{"line":49,"column":25,"offset":2448}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"api-wide-authorization","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#api-wide-authorization","aria-label":"api wide authorization permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"API-wide authorization","position":{"start":{"line":51,"column":5,"offset":2454},"end":{"line":51,"column":27,"offset":2476}}}],"position":{"start":{"line":51,"column":1,"offset":2450},"end":{"line":51,"column":27,"offset":2476}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once we have information about the user making a request, the most basic thing we can do is deny them the ability to execute a query ","position":{"start":{"line":53,"column":1,"offset":2478},"end":{"line":53,"column":134,"offset":2611}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"at all","position":{"start":{"line":53,"column":135,"offset":2612},"end":{"line":53,"column":141,"offset":2618}}}],"position":{"start":{"line":53,"column":134,"offset":2611},"end":{"line":53,"column":142,"offset":2619}}},{"type":"text","value":" based on their roles. We'll start with this all-or-nothing approach to authorization because it's the most basic.","position":{"start":{"line":53,"column":142,"offset":2619},"end":{"line":53,"column":256,"offset":2733}}}],"position":{"start":{"line":53,"column":1,"offset":2478},"end":{"line":53,"column":256,"offset":2733}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We should use this method only on highly restrictive environments that provide no public access to the API whatsoever, like an internal tool or an independent microservice that shouldn't be exposed to the public.","position":{"start":{"line":55,"column":1,"offset":2735},"end":{"line":55,"column":213,"offset":2947}}}],"position":{"start":{"line":55,"column":1,"offset":2735},"end":{"line":55,"column":213,"offset":2947}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To perform this kind of authorization, we can modify the context function:","position":{"start":{"line":57,"column":1,"offset":2949},"end":{"line":57,"column":75,"offset":3023}}}],"position":{"start":{"line":57,"column":1,"offset":2949},"end":{"line":57,"column":75,"offset":3023}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token function-variable function\">context</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> req <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n <span class=\"token comment\">// get the user token from the headers</span>\n <span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>authorization <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token comment\">// try to retrieve a user with the token</span>\n <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token comment\">// optionally block the user</span>\n <span class=\"token comment\">// we could also check user roles/permissions here</span>\n <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>user<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AuthenticationError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'you must be logged in'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token comment\">// add the user to the context</span>\n <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> user <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":59,"column":1,"offset":3025},"end":{"line":74,"column":4,"offset":3424}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The only difference from the basic context function is the check for the user. If no user exists or if lookup fails, the function throws an error and the corresponding operation is not executed.","position":{"start":{"line":76,"column":1,"offset":3426},"end":{"line":76,"column":195,"offset":3620}}}],"position":{"start":{"line":76,"column":1,"offset":3426},"end":{"line":76,"column":195,"offset":3620}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"in-resolvers","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#in-resolvers","aria-label":"in resolvers permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"In resolvers","position":{"start":{"line":78,"column":5,"offset":3626},"end":{"line":78,"column":17,"offset":3638}}}],"position":{"start":{"line":78,"column":1,"offset":3622},"end":{"line":78,"column":17,"offset":3638}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"API-wide authorization might be useful in specific instances, but more commonly, a GraphQL API has at least a few fields that are public. For example, a news site might show article previews to anyone, but restrict the full body of articles to paying customers.","position":{"start":{"line":80,"column":1,"offset":3640},"end":{"line":80,"column":262,"offset":3901}}}],"position":{"start":{"line":80,"column":1,"offset":3640},"end":{"line":80,"column":262,"offset":3901}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Luckily, GraphQL offers very granular control over data. In GraphQL servers, individual field resolvers have the ability to check user roles and make decisions as to what to return for each user. In the previous sections, we saw how to attach user information to the context object. In the rest of the article, we'll discuss how to use that context object.","position":{"start":{"line":82,"column":1,"offset":3903},"end":{"line":82,"column":357,"offset":4259}}}],"position":{"start":{"line":82,"column":1,"offset":3903},"end":{"line":82,"column":357,"offset":4259}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For our first example, let's look at a resolver that's only accessible with a valid user:","position":{"start":{"line":84,"column":1,"offset":4261},"end":{"line":84,"column":90,"offset":4350}}}],"position":{"start":{"line":84,"column":1,"offset":4261},"end":{"line":84,"column":90,"offset":4350}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token function-variable function\">users</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">parent<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">,</span> context</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n <span class=\"token comment\">// In this case, we'll pretend there is no data when</span>\n <span class=\"token comment\">// we're not logged in. Another option would be to</span>\n <span class=\"token comment\">// throw an error.</span>\n <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>context<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'bob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'jake'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":86,"column":1,"offset":4352},"end":{"line":95,"column":4,"offset":4584}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This example is a field in our schema named ","position":{"start":{"line":97,"column":1,"offset":4586},"end":{"line":97,"column":45,"offset":4630}}},{"type":"raw","value":"<code class=\"language-text\">users</code>","position":{"start":{"line":97,"column":45,"offset":4630},"end":{"line":97,"column":52,"offset":4637}}},{"type":"text","value":" that returns a list of users' names. The ","position":{"start":{"line":97,"column":52,"offset":4637},"end":{"line":97,"column":94,"offset":4679}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":97,"column":94,"offset":4679},"end":{"line":97,"column":98,"offset":4683}}},{"type":"text","value":" check on the first line of the function looks at the ","position":{"start":{"line":97,"column":98,"offset":4683},"end":{"line":97,"column":152,"offset":4737}}},{"type":"raw","value":"<code class=\"language-text\">context</code>","position":{"start":{"line":97,"column":152,"offset":4737},"end":{"line":97,"column":161,"offset":4746}}},{"type":"text","value":" generated from our request, checks for a ","position":{"start":{"line":97,"column":161,"offset":4746},"end":{"line":97,"column":203,"offset":4788}}},{"type":"raw","value":"<code class=\"language-text\">user</code>","position":{"start":{"line":97,"column":203,"offset":4788},"end":{"line":97,"column":209,"offset":4794}}},{"type":"text","value":" object, and if one doesn't exist, returns ","position":{"start":{"line":97,"column":209,"offset":4794},"end":{"line":97,"column":252,"offset":4837}}},{"type":"raw","value":"<code class=\"language-text\">null</code>","position":{"start":{"line":97,"column":252,"offset":4837},"end":{"line":97,"column":258,"offset":4843}}},{"type":"text","value":" for the whole field.","position":{"start":{"line":97,"column":258,"offset":4843},"end":{"line":97,"column":279,"offset":4864}}}],"position":{"start":{"line":97,"column":1,"offset":4586},"end":{"line":97,"column":279,"offset":4864}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One choice to make when building out our resolvers is what an unauthorized field should return. In some use cases, returning ","position":{"start":{"line":99,"column":1,"offset":4866},"end":{"line":99,"column":126,"offset":4991}}},{"type":"raw","value":"<code class=\"language-text\">null</code>","position":{"start":{"line":99,"column":126,"offset":4991},"end":{"line":99,"column":132,"offset":4997}}},{"type":"text","value":" here is perfectly valid. Alternatives to this would be to return an empty array, ","position":{"start":{"line":99,"column":132,"offset":4997},"end":{"line":99,"column":214,"offset":5079}}},{"type":"raw","value":"<code class=\"language-text\">[]</code>","position":{"start":{"line":99,"column":214,"offset":5079},"end":{"line":99,"column":218,"offset":5083}}},{"type":"text","value":" or to throw an error, telling the client that they're not allowed to access that field. For the sake of simplicity, we just returned ","position":{"start":{"line":99,"column":218,"offset":5083},"end":{"line":99,"column":352,"offset":5217}}},{"type":"raw","value":"<code class=\"language-text\">null</code>","position":{"start":{"line":99,"column":352,"offset":5217},"end":{"line":99,"column":358,"offset":5223}}},{"type":"text","value":" in this example.","position":{"start":{"line":99,"column":358,"offset":5223},"end":{"line":99,"column":375,"offset":5240}}}],"position":{"start":{"line":99,"column":1,"offset":4866},"end":{"line":99,"column":375,"offset":5240}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now let's expand that example a little further, and only allow users with an ","position":{"start":{"line":101,"column":1,"offset":5242},"end":{"line":101,"column":78,"offset":5319}}},{"type":"raw","value":"<code class=\"language-text\">admin</code>","position":{"start":{"line":101,"column":78,"offset":5319},"end":{"line":101,"column":85,"offset":5326}}},{"type":"text","value":" role to look at our user list. After all, we probably don't want just anyone to have access to all our users.","position":{"start":{"line":101,"column":85,"offset":5326},"end":{"line":101,"column":195,"offset":5436}}}],"position":{"start":{"line":101,"column":1,"offset":5242},"end":{"line":101,"column":195,"offset":5436}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token function-variable function\">users</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">parent<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">,</span> context</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>context<span class=\"token punctuation\">.</span>user <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>context<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>roles<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">return</span> context<span class=\"token punctuation\">.</span>models<span class=\"token punctuation\">.</span>User<span class=\"token punctuation\">.</span><span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":103,"column":1,"offset":5438},"end":{"line":108,"column":4,"offset":5597}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This example looks almost the same as the previous one, with one addition: it expects the ","position":{"start":{"line":110,"column":1,"offset":5599},"end":{"line":110,"column":91,"offset":5689}}},{"type":"raw","value":"<code class=\"language-text\">roles</code>","position":{"start":{"line":110,"column":91,"offset":5689},"end":{"line":110,"column":98,"offset":5696}}},{"type":"text","value":" array on a user to include an ","position":{"start":{"line":110,"column":98,"offset":5696},"end":{"line":110,"column":129,"offset":5727}}},{"type":"raw","value":"<code class=\"language-text\">admin</code>","position":{"start":{"line":110,"column":129,"offset":5727},"end":{"line":110,"column":136,"offset":5734}}},{"type":"text","value":" role. Otherwise, it returns ","position":{"start":{"line":110,"column":136,"offset":5734},"end":{"line":110,"column":165,"offset":5763}}},{"type":"raw","value":"<code class=\"language-text\">null</code>","position":{"start":{"line":110,"column":165,"offset":5763},"end":{"line":110,"column":171,"offset":5769}}},{"type":"text","value":". The benefit of doing authorization like this is that we can short-circuit our resolvers and not even call lookup functions when we don't have permission to use them, limiting the possible errors that could expose sensitive data.","position":{"start":{"line":110,"column":171,"offset":5769},"end":{"line":110,"column":401,"offset":5999}}}],"position":{"start":{"line":110,"column":1,"offset":5599},"end":{"line":110,"column":401,"offset":5999}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Because our resolvers have access to everything in the context, an important question we need to ask is how much information we want in the context. For example, we don't need the user's id, name, or age (at least not yet). It's best to keep things out of the context until they're needed, since they're easy to add back in later.","position":{"start":{"line":112,"column":1,"offset":6001},"end":{"line":112,"column":331,"offset":6331}}}],"position":{"start":{"line":112,"column":1,"offset":6001},"end":{"line":112,"column":331,"offset":6331}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"in-data-models","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#in-data-models","aria-label":"in data models permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"In data models","position":{"start":{"line":114,"column":5,"offset":6337},"end":{"line":114,"column":19,"offset":6351}}}],"position":{"start":{"line":114,"column":1,"offset":6333},"end":{"line":114,"column":19,"offset":6351}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As our server gets more complex, there will probably be multiple places in the schema that need to fetch the same kind of data. In our last example, you may have noticed the return array was replaced with a call to ","position":{"start":{"line":116,"column":1,"offset":6353},"end":{"line":116,"column":216,"offset":6568}}},{"type":"raw","value":"<code class=\"language-text\">context.models.User.getAll()</code>","position":{"start":{"line":116,"column":216,"offset":6568},"end":{"line":116,"column":246,"offset":6598}}},{"type":"text","value":".","position":{"start":{"line":116,"column":246,"offset":6598},"end":{"line":116,"column":247,"offset":6599}}}],"position":{"start":{"line":116,"column":1,"offset":6353},"end":{"line":116,"column":247,"offset":6599}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As always, we recommend moving the actual data fetching and transformation logic from your resolvers to ","position":{"start":{"line":118,"column":1,"offset":6601},"end":{"line":118,"column":105,"offset":6705}}},{"type":"element","tagName":"a","properties":{"href":"/data/data-sources/"},"children":[{"type":"text","value":"data sources","position":{"start":{"line":118,"column":106,"offset":6706},"end":{"line":118,"column":118,"offset":6718}}}],"position":{"start":{"line":118,"column":105,"offset":6705},"end":{"line":118,"column":141,"offset":6741}}},{"type":"text","value":" or model objects that each represent a concept from your application: ","position":{"start":{"line":118,"column":141,"offset":6741},"end":{"line":118,"column":212,"offset":6812}}},{"type":"raw","value":"<code class=\"language-text\">User</code>","position":{"start":{"line":118,"column":212,"offset":6812},"end":{"line":118,"column":218,"offset":6818}}},{"type":"text","value":", ","position":{"start":{"line":118,"column":218,"offset":6818},"end":{"line":118,"column":220,"offset":6820}}},{"type":"raw","value":"<code class=\"language-text\">Post</code>","position":{"start":{"line":118,"column":220,"offset":6820},"end":{"line":118,"column":226,"offset":6826}}},{"type":"text","value":", etc. This allows you to make your resolvers a thin routing layer, and put all of your business logic in one place.","position":{"start":{"line":118,"column":226,"offset":6826},"end":{"line":118,"column":342,"offset":6942}}}],"position":{"start":{"line":118,"column":1,"offset":6601},"end":{"line":118,"column":342,"offset":6942}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example, a model file for ","position":{"start":{"line":120,"column":1,"offset":6944},"end":{"line":120,"column":31,"offset":6974}}},{"type":"raw","value":"<code class=\"language-text\">User</code>","position":{"start":{"line":120,"column":31,"offset":6974},"end":{"line":120,"column":37,"offset":6980}}},{"type":"text","value":" would include all the logic for operating on users, and might look something like this:","position":{"start":{"line":120,"column":37,"offset":6980},"end":{"line":120,"column":125,"offset":7068}}}],"position":{"start":{"line":120,"column":1,"offset":6944},"end":{"line":120,"column":125,"offset":7068}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> User <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n <span class=\"token function-variable function\">getAll</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* fetching/transformation logic for all users */</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n <span class=\"token function-variable function\">getById</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* fetching/transformation logic for a single user */</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n <span class=\"token function-variable function\">getByGroupId</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* fetching/transformation logic for a group of users */</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":122,"column":1,"offset":7070},"end":{"line":128,"column":4,"offset":7336}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the following example, our schema has multiple ways to request a single user:","position":{"start":{"line":130,"column":1,"offset":7338},"end":{"line":130,"column":81,"offset":7418}}}],"position":{"start":{"line":130,"column":1,"offset":7338},"end":{"line":130,"column":81,"offset":7418}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\">type Query <span class=\"token punctuation\">{</span>\n <span class=\"token function\">user</span> <span class=\"token punctuation\">(</span>id<span class=\"token operator\">:</span> <span class=\"token constant\">ID</span><span class=\"token operator\">!</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> User\n <span class=\"token function\">article</span> <span class=\"token punctuation\">(</span>id<span class=\"token operator\">:</span> <span class=\"token constant\">ID</span><span class=\"token operator\">!</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Article\n<span class=\"token punctuation\">}</span>\n\ntype Article <span class=\"token punctuation\">{</span>\n <span class=\"token literal-property property\">author</span><span class=\"token operator\">:</span> User\n<span class=\"token punctuation\">}</span>\n\ntype User <span class=\"token punctuation\">{</span>\n <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token constant\">ID</span><span class=\"token operator\">!</span>\n <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> String<span class=\"token operator\">!</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":132,"column":1,"offset":7420},"end":{"line":146,"column":4,"offset":7565}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Rather than having the same fetching logic for a single user in two separate places, it usually makes sense to move that logic to the model file. You may have guessed, with all this talk of model files in an authorization article, that authorization is another great thing to delegate to the model, just like data fetching. You would be right.","position":{"start":{"line":148,"column":1,"offset":7567},"end":{"line":148,"column":344,"offset":7910}}}],"position":{"start":{"line":148,"column":1,"offset":7567},"end":{"line":148,"column":344,"offset":7910}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"delegating-authorization-to-models","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#delegating-authorization-to-models","aria-label":"delegating authorization to models permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Delegating authorization to models","position":{"start":{"line":150,"column":6,"offset":7917},"end":{"line":150,"column":40,"offset":7951}}}],"position":{"start":{"line":150,"column":1,"offset":7912},"end":{"line":150,"column":40,"offset":7951}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You may have noticed that our models also exist on the context, alongside the user object we added earlier. We can add the models to the context in exactly the same way as we did the user.","position":{"start":{"line":152,"column":1,"offset":7953},"end":{"line":152,"column":189,"offset":8141}}}],"position":{"start":{"line":152,"column":1,"offset":7953},"end":{"line":152,"column":189,"offset":8141}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token function-variable function\">context</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> req <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n <span class=\"token comment\">// get the user token from the headers</span>\n <span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>authentication <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token comment\">// try to retrieve a user with the token</span>\n <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token comment\">// optionally block the user</span>\n <span class=\"token comment\">// we could also check user roles/permissions here</span>\n <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>user<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AuthenticationError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'you must be logged in to query this schema'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token comment\">// add the user to the context</span>\n <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n   user<span class=\"token punctuation\">,</span>\n   <span class=\"token literal-property property\">models</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token literal-property property\">User</span><span class=\"token operator\">:</span> <span class=\"token function\">generateUserModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> user <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n     <span class=\"token operator\">...</span>\n   <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":154,"column":1,"offset":8143},"end":{"line":175,"column":4,"offset":8636}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Starting to generate our models with a function requires a small refactor, that would leave our User model looking something like this:","position":{"start":{"line":177,"column":1,"offset":8638},"end":{"line":177,"column":136,"offset":8773}}}],"position":{"start":{"line":177,"column":1,"offset":8638},"end":{"line":177,"column":136,"offset":8773}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">generateUserModel</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> user <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n <span class=\"token function-variable function\">getAll</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* fetching/transform logic for all users */</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n <span class=\"token function-variable function\">getById</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* fetching/transform logic for a single user */</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n <span class=\"token function-variable function\">getByGroupId</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* fetching/transform logic for a group of users */</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":179,"column":1,"offset":8775},"end":{"line":185,"column":4,"offset":9055}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now any model method in ","position":{"start":{"line":187,"column":1,"offset":9057},"end":{"line":187,"column":25,"offset":9081}}},{"type":"raw","value":"<code class=\"language-text\">User</code>","position":{"start":{"line":187,"column":25,"offset":9081},"end":{"line":187,"column":31,"offset":9087}}},{"type":"text","value":" has access to the same ","position":{"start":{"line":187,"column":31,"offset":9087},"end":{"line":187,"column":55,"offset":9111}}},{"type":"raw","value":"<code class=\"language-text\">user</code>","position":{"start":{"line":187,"column":55,"offset":9111},"end":{"line":187,"column":61,"offset":9117}}},{"type":"text","value":" information that resolvers already had, allowing us to refactor the ","position":{"start":{"line":187,"column":61,"offset":9117},"end":{"line":187,"column":130,"offset":9186}}},{"type":"raw","value":"<code class=\"language-text\">getAll</code>","position":{"start":{"line":187,"column":130,"offset":9186},"end":{"line":187,"column":138,"offset":9194}}},{"type":"text","value":" function to do the permissions check directly rather than having to put it in the resolver:","position":{"start":{"line":187,"column":138,"offset":9194},"end":{"line":187,"column":230,"offset":9286}}}],"position":{"start":{"line":187,"column":1,"offset":9057},"end":{"line":187,"column":230,"offset":9286}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token function-variable function\">getAll</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>user <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>user<span class=\"token punctuation\">.</span>roles<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://myurl.com/users'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":189,"column":1,"offset":9288},"end":{"line":194,"column":4,"offset":9413}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"with-custom-directives","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#with-custom-directives","aria-label":"with custom directives permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"With custom directives","position":{"start":{"line":196,"column":5,"offset":9419},"end":{"line":196,"column":27,"offset":9441}}}],"position":{"start":{"line":196,"column":1,"offset":9415},"end":{"line":196,"column":27,"offset":9441}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Another way to go about authorization is via GraphQL Schema Directives. A directive is an identifier preceded by a ","position":{"start":{"line":198,"column":1,"offset":9443},"end":{"line":198,"column":116,"offset":9558}}},{"type":"raw","value":"<code class=\"language-text\">@</code>","position":{"start":{"line":198,"column":116,"offset":9558},"end":{"line":198,"column":119,"offset":9561}}},{"type":"text","value":" character, optionally followed by a list of named arguments, which can appear after almost any form of syntax in the GraphQL query or schema languages.","position":{"start":{"line":198,"column":119,"offset":9561},"end":{"line":198,"column":271,"offset":9713}}}],"position":{"start":{"line":198,"column":1,"offset":9443},"end":{"line":198,"column":271,"offset":9713}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Check out this example of an authorization directive:","position":{"start":{"line":200,"column":1,"offset":9715},"end":{"line":200,"column":54,"offset":9768}}}],"position":{"start":{"line":200,"column":1,"offset":9715},"end":{"line":200,"column":54,"offset":9768}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> typeDefs <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  directive @auth(requires: Role = ADMIN) on OBJECT | FIELD_DEFINITION\n\n  enum Role {\n    ADMIN\n    REVIEWER\n    USER\n  }\n\n  type User @auth(requires: USER) {\n    name: String\n    banned: Boolean @auth(requires: ADMIN)\n    canPost: Boolean @auth(requires: REVIEWER)\n  }\n</span><span class=\"token template-punctuation string\">`</span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":202,"column":1,"offset":9770},"end":{"line":218,"column":4,"offset":10070}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":220,"column":1,"offset":10072},"end":{"line":220,"column":5,"offset":10076}}},{"type":"raw","value":"<code class=\"language-text\">@auth</code>","position":{"start":{"line":220,"column":5,"offset":10076},"end":{"line":220,"column":12,"offset":10083}}},{"type":"text","value":" directive can be called directly on the type, or on the fields if you want to limit access to specific fields as shown in the example above. The logic behind authorization is hidden away in the directive implementation.","position":{"start":{"line":220,"column":12,"offset":10083},"end":{"line":220,"column":232,"offset":10303}}}],"position":{"start":{"line":220,"column":1,"offset":10072},"end":{"line":220,"column":232,"offset":10303}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One way of implementing the ","position":{"start":{"line":222,"column":1,"offset":10305},"end":{"line":222,"column":29,"offset":10333}}},{"type":"raw","value":"<code class=\"language-text\">@auth</code>","position":{"start":{"line":222,"column":29,"offset":10333},"end":{"line":222,"column":36,"offset":10340}}},{"type":"text","value":" directive is by constructing your schema using the ","position":{"start":{"line":222,"column":36,"offset":10340},"end":{"line":222,"column":88,"offset":10392}}},{"type":"element","tagName":"a","properties":{"href":"https://www.graphql-tools.com/docs/schema-directives/"},"children":[{"type":"raw","value":"<code class=\"language-text\">schemaTransforms</code>","position":{"start":{"line":222,"column":89,"offset":10393},"end":{"line":222,"column":107,"offset":10411}}},{"type":"text","value":" option of the ","position":{"start":{"line":222,"column":107,"offset":10411},"end":{"line":222,"column":122,"offset":10426}}},{"type":"raw","value":"<code class=\"language-text\">makeExecutableSchema</code>","position":{"start":{"line":222,"column":122,"offset":10426},"end":{"line":222,"column":144,"offset":10448}}}],"position":{"start":{"line":222,"column":88,"offset":10392},"end":{"line":222,"column":200,"offset":10504}}},{"type":"text","value":" function from the ","position":{"start":{"line":222,"column":200,"offset":10504},"end":{"line":222,"column":219,"offset":10523}}},{"type":"element","tagName":"a","properties":{"href":"https://www.graphql-tools.com/"},"children":[{"type":"text","value":"graphql-tools","position":{"start":{"line":222,"column":220,"offset":10524},"end":{"line":222,"column":233,"offset":10537}}}],"position":{"start":{"line":222,"column":219,"offset":10523},"end":{"line":222,"column":266,"offset":10570}}},{"type":"text","value":" project. You can read the ","position":{"start":{"line":222,"column":266,"offset":10570},"end":{"line":222,"column":293,"offset":10597}}},{"type":"raw","value":"<code class=\"language-text\">graphql-tools</code>","position":{"start":{"line":222,"column":293,"offset":10597},"end":{"line":222,"column":308,"offset":10612}}},{"type":"text","value":" docs for details on how to write ","position":{"start":{"line":222,"column":308,"offset":10612},"end":{"line":222,"column":342,"offset":10646}}},{"type":"raw","value":"<code class=\"language-text\">schemaTransforms</code>","position":{"start":{"line":222,"column":342,"offset":10646},"end":{"line":222,"column":360,"offset":10664}}},{"type":"text","value":"; then just create your server with","position":{"start":{"line":222,"column":360,"offset":10664},"end":{"line":222,"column":395,"offset":10699}}}],"position":{"start":{"line":222,"column":1,"offset":10305},"end":{"line":222,"column":395,"offset":10699}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">ApolloServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">schema</span><span class=\"token operator\">:</span> <span class=\"token function\">makeExecutableSchema</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> typeDefs<span class=\"token punctuation\">,</span> resolvers<span class=\"token punctuation\">,</span> schemaTransforms <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>","position":{"start":{"line":223,"column":1,"offset":10700},"end":{"line":225,"column":4,"offset":10803}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"outside-of-graphql","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#outside-of-graphql","aria-label":"outside of graphql permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Outside of GraphQL","position":{"start":{"line":227,"column":5,"offset":10809},"end":{"line":227,"column":23,"offset":10827}}}],"position":{"start":{"line":227,"column":1,"offset":10805},"end":{"line":227,"column":23,"offset":10827}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you're using a REST API that has built-in authorization, like with an HTTP header, you have one more option. Rather than doing any authentication or authorization work in the GraphQL layer (in resolvers/models), it's possible to simply pass through the headers or cookies to your REST endpoint and let it do the work.","position":{"start":{"line":229,"column":1,"offset":10829},"end":{"line":229,"column":321,"offset":11149}}}],"position":{"start":{"line":229,"column":1,"offset":10829},"end":{"line":229,"column":321,"offset":11149}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here's an example:","position":{"start":{"line":231,"column":1,"offset":11151},"end":{"line":231,"column":19,"offset":11169}}}],"position":{"start":{"line":231,"column":1,"offset":11151},"end":{"line":231,"column":19,"offset":11169}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">// src/server.js</span>\n<span class=\"token function-variable function\">context</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> req <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n <span class=\"token comment\">// pass the request information through to the model</span>\n <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n   user<span class=\"token punctuation\">,</span>\n   <span class=\"token literal-property property\">models</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token literal-property property\">User</span><span class=\"token operator\">:</span> <span class=\"token function\">generateUserModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> req <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n     <span class=\"token operator\">...</span>\n   <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":233,"column":1,"offset":11171},"end":{"line":245,"column":4,"offset":11367}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">// src/models/user.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">generateUserModel</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> req <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n <span class=\"token function-variable function\">getAll</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://myurl.com/users'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>headers <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":247,"column":1,"offset":11369},"end":{"line":254,"column":4,"offset":11543}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If your REST endpoint is already backed by some form of authorization, this cuts down a lot of the logic that needs to get built in the GraphQL layer. This can be a great option when building a GraphQL API over an existing REST API that has everything you need already built in.","position":{"start":{"line":256,"column":1,"offset":11545},"end":{"line":256,"column":279,"offset":11823}}}],"position":{"start":{"line":256,"column":1,"offset":11545},"end":{"line":256,"column":279,"offset":11823}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":257,"column":1,"offset":11824}}}}