{"expireTime":9007200901521028000,"key":"transformer-remark-markdown-html-ast-81099120e5e4295803e75a6f3d9029e8-gatsby-remark-autolink-headersgatsby-remark-copy-linked-filesgatsby-remark-mermaidgatsby-remark-code-titlesgatsby-remark-prismjsgatsby-remark-rewrite-relative-linksgatsby-remark-check-links-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Most production environments use a load balancer or HTTP proxy (such as nginx) to perform SSL termination on behalf of web applications in that environment.","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":157,"offset":157}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":157,"offset":157}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you're using Apollo Server in an application that must perform its ","position":{"start":{"line":4,"column":1,"offset":159},"end":{"line":4,"column":71,"offset":229}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"own","position":{"start":{"line":4,"column":72,"offset":230},"end":{"line":4,"column":75,"offset":233}}}],"position":{"start":{"line":4,"column":71,"offset":229},"end":{"line":4,"column":76,"offset":234}}},{"type":"text","value":" SSL termination, you can use the ","position":{"start":{"line":4,"column":76,"offset":234},"end":{"line":4,"column":110,"offset":268}}},{"type":"raw","value":"<code class=\"language-text\">https</code>","position":{"start":{"line":4,"column":110,"offset":268},"end":{"line":4,"column":117,"offset":275}}},{"type":"text","value":" module with the ","position":{"start":{"line":4,"column":117,"offset":275},"end":{"line":4,"column":134,"offset":292}}},{"type":"raw","value":"<code class=\"language-text\">apollo-server-express</code>","position":{"start":{"line":4,"column":134,"offset":292},"end":{"line":4,"column":157,"offset":315}}},{"type":"text","value":" ","position":{"start":{"line":4,"column":157,"offset":315},"end":{"line":4,"column":158,"offset":316}}},{"type":"element","tagName":"a","properties":{"href":"/integrations/middleware/"},"children":[{"type":"text","value":"middleware\nlibrary","position":{"start":{"line":4,"column":159,"offset":317},"end":{"line":5,"column":8,"offset":335}}}],"position":{"start":{"line":4,"column":158,"offset":316},"end":{"line":5,"column":36,"offset":363}}},{"type":"text","value":".","position":{"start":{"line":5,"column":36,"offset":363},"end":{"line":5,"column":37,"offset":364}}}],"position":{"start":{"line":4,"column":1,"offset":159},"end":{"line":5,"column":37,"offset":364}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here's an example that uses HTTPS in production and HTTP in development:","position":{"start":{"line":7,"column":1,"offset":366},"end":{"line":7,"column":73,"offset":438}}}],"position":{"start":{"line":7,"column":1,"offset":366},"end":{"line":7,"column":73,"offset":438}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> express <span class=\"token keyword\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ApolloServer <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'apollo-server-express'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> typeDefs <span class=\"token keyword\">from</span> <span class=\"token string\">'./graphql/schema'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> resolvers <span class=\"token keyword\">from</span> <span class=\"token string\">'./graphql/resolvers'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> fs <span class=\"token keyword\">from</span> <span class=\"token string\">'fs'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> https <span class=\"token keyword\">from</span> <span class=\"token string\">'https'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> http <span class=\"token keyword\">from</span> <span class=\"token string\">'http'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">startApolloServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> configurations <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Note: You may need sudo to run on port 443</span>\n    <span class=\"token literal-property property\">production</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">ssl</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">port</span><span class=\"token operator\">:</span> <span class=\"token number\">443</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">hostname</span><span class=\"token operator\">:</span> <span class=\"token string\">'example.com'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">development</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">ssl</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">port</span><span class=\"token operator\">:</span> <span class=\"token number\">4000</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">hostname</span><span class=\"token operator\">:</span> <span class=\"token string\">'localhost'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> environment <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">||</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> configurations<span class=\"token punctuation\">[</span>environment<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApolloServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> typeDefs<span class=\"token punctuation\">,</span> resolvers <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> server<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  server<span class=\"token punctuation\">.</span><span class=\"token function\">applyMiddleware</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> app <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create the HTTPS or HTTP server, per configuration</span>\n  <span class=\"token keyword\">let</span> httpServer<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>ssl<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Assumes certificates are in a .ssl folder off of the package root.</span>\n    <span class=\"token comment\">// Make sure these files are secured.</span>\n    httpServer <span class=\"token operator\">=</span> https<span class=\"token punctuation\">.</span><span class=\"token function\">createServer</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./ssl/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>environment<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/server.key</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">cert</span><span class=\"token operator\">:</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./ssl/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>environment<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/server.crt</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      app<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    httpServer <span class=\"token operator\">=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">createServer</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span> <span class=\"token operator\">=></span> server<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">port</span><span class=\"token operator\">:</span> config<span class=\"token punctuation\">.</span>port <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> resolve<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'🚀 Server ready at'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">http</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>config<span class=\"token punctuation\">.</span>ssl <span class=\"token operator\">?</span> <span class=\"token string\">'s'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">://</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>config<span class=\"token punctuation\">.</span>hostname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>config<span class=\"token punctuation\">.</span>port<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>server<span class=\"token punctuation\">.</span>graphqlPath<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> server<span class=\"token punctuation\">,</span> app <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":9,"column":1,"offset":440},"end":{"line":57,"column":4,"offset":1924}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":58,"column":1,"offset":1925}}}}