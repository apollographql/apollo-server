{"expireTime":9007200901521028000,"key":"transformer-remark-markdown-html-ast-1aa0206384c7dbcaa5285b37f128a502-gatsby-remark-autolink-headersgatsby-remark-copy-linked-filesgatsby-remark-mermaidgatsby-remark-code-titlesgatsby-remark-prismjsgatsby-remark-rewrite-relative-linksgatsby-remark-check-links-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Your GraphQL server uses a ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":28,"offset":28}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"schema","position":{"start":{"line":2,"column":30,"offset":30},"end":{"line":2,"column":36,"offset":36}}}],"position":{"start":{"line":2,"column":28,"offset":28},"end":{"line":2,"column":38,"offset":38}}},{"type":"text","value":" to describe the shape of your data graph. This schema defines a hierarchy of ","position":{"start":{"line":2,"column":38,"offset":38},"end":{"line":2,"column":116,"offset":116}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"types","position":{"start":{"line":2,"column":118,"offset":118},"end":{"line":2,"column":123,"offset":123}}}],"position":{"start":{"line":2,"column":116,"offset":116},"end":{"line":2,"column":125,"offset":125}}},{"type":"text","value":" with fields that are populated from your back-end data stores. The schema also specifies exactly which ","position":{"start":{"line":2,"column":125,"offset":125},"end":{"line":2,"column":229,"offset":229}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"queries","position":{"start":{"line":2,"column":231,"offset":231},"end":{"line":2,"column":238,"offset":238}}}],"position":{"start":{"line":2,"column":229,"offset":229},"end":{"line":2,"column":240,"offset":240}}},{"type":"text","value":" and ","position":{"start":{"line":2,"column":240,"offset":240},"end":{"line":2,"column":245,"offset":245}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"mutations","position":{"start":{"line":2,"column":247,"offset":247},"end":{"line":2,"column":256,"offset":256}}}],"position":{"start":{"line":2,"column":245,"offset":245},"end":{"line":2,"column":258,"offset":258}}},{"type":"text","value":" are available for clients to execute against your data graph.","position":{"start":{"line":2,"column":258,"offset":258},"end":{"line":2,"column":320,"offset":320}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":320,"offset":320}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article describes the fundamental building blocks of a schema and how to create one for your GraphQL server.","position":{"start":{"line":4,"column":1,"offset":322},"end":{"line":4,"column":114,"offset":435}}}],"position":{"start":{"line":4,"column":1,"offset":322},"end":{"line":4,"column":114,"offset":435}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"the-schema-definition-language","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#the-schema-definition-language","aria-label":"the schema definition language permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"The schema definition language","position":{"start":{"line":6,"column":4,"offset":440},"end":{"line":6,"column":34,"offset":470}}}],"position":{"start":{"line":6,"column":1,"offset":437},"end":{"line":6,"column":34,"offset":470}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The GraphQL specification includes a human-readable ","position":{"start":{"line":8,"column":1,"offset":472},"end":{"line":8,"column":53,"offset":524}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"schema definition language","position":{"start":{"line":8,"column":55,"offset":526},"end":{"line":8,"column":81,"offset":552}}}],"position":{"start":{"line":8,"column":53,"offset":524},"end":{"line":8,"column":83,"offset":554}}},{"type":"text","value":" (or ","position":{"start":{"line":8,"column":83,"offset":554},"end":{"line":8,"column":88,"offset":559}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"SDL","position":{"start":{"line":8,"column":90,"offset":561},"end":{"line":8,"column":93,"offset":564}}}],"position":{"start":{"line":8,"column":88,"offset":559},"end":{"line":8,"column":95,"offset":566}}},{"type":"text","value":") that you use to define your schema and store it as a string.","position":{"start":{"line":8,"column":95,"offset":566},"end":{"line":8,"column":157,"offset":628}}}],"position":{"start":{"line":8,"column":1,"offset":472},"end":{"line":8,"column":157,"offset":628}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here's a short example schema that defines two object types: ","position":{"start":{"line":10,"column":1,"offset":630},"end":{"line":10,"column":62,"offset":691}}},{"type":"raw","value":"<code class=\"language-text\">Book</code>","position":{"start":{"line":10,"column":62,"offset":691},"end":{"line":10,"column":68,"offset":697}}},{"type":"text","value":" and ","position":{"start":{"line":10,"column":68,"offset":697},"end":{"line":10,"column":73,"offset":702}}},{"type":"raw","value":"<code class=\"language-text\">Author</code>","position":{"start":{"line":10,"column":73,"offset":702},"end":{"line":10,"column":81,"offset":710}}},{"type":"text","value":":","position":{"start":{"line":10,"column":81,"offset":710},"end":{"line":10,"column":82,"offset":711}}}],"position":{"start":{"line":10,"column":1,"offset":630},"end":{"line":10,"column":82,"offset":711}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Book</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">title</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span>\n  <span class=\"token attr-name\">author</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Author</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Author</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span>\n  <span class=\"token attr-name\">books</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">Book</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":12,"column":1,"offset":713},"end":{"line":22,"column":4,"offset":822}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A schema defines a collection of types and the relationships ","position":{"start":{"line":24,"column":1,"offset":824},"end":{"line":24,"column":62,"offset":885}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"between","position":{"start":{"line":24,"column":63,"offset":886},"end":{"line":24,"column":70,"offset":893}}}],"position":{"start":{"line":24,"column":62,"offset":885},"end":{"line":24,"column":71,"offset":894}}},{"type":"text","value":" those types. In the example schema above, every ","position":{"start":{"line":24,"column":71,"offset":894},"end":{"line":24,"column":120,"offset":943}}},{"type":"raw","value":"<code class=\"language-text\">Book</code>","position":{"start":{"line":24,"column":120,"offset":943},"end":{"line":24,"column":126,"offset":949}}},{"type":"text","value":" has an ","position":{"start":{"line":24,"column":126,"offset":949},"end":{"line":24,"column":134,"offset":957}}},{"type":"raw","value":"<code class=\"language-text\">author</code>","position":{"start":{"line":24,"column":134,"offset":957},"end":{"line":24,"column":142,"offset":965}}},{"type":"text","value":", and every ","position":{"start":{"line":24,"column":142,"offset":965},"end":{"line":24,"column":154,"offset":977}}},{"type":"raw","value":"<code class=\"language-text\">Author</code>","position":{"start":{"line":24,"column":154,"offset":977},"end":{"line":24,"column":162,"offset":985}}},{"type":"text","value":" has a list of ","position":{"start":{"line":24,"column":162,"offset":985},"end":{"line":24,"column":177,"offset":1000}}},{"type":"raw","value":"<code class=\"language-text\">books</code>","position":{"start":{"line":24,"column":177,"offset":1000},"end":{"line":24,"column":184,"offset":1007}}},{"type":"text","value":". By defining these type relationships in a unified schema, we enable client developers to see exactly what data is available and request a specific subset of that data with a single optimized query.","position":{"start":{"line":24,"column":184,"offset":1007},"end":{"line":24,"column":383,"offset":1206}}}],"position":{"start":{"line":24,"column":1,"offset":824},"end":{"line":24,"column":383,"offset":1206}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that the schema is ","position":{"start":{"line":26,"column":1,"offset":1208},"end":{"line":26,"column":25,"offset":1232}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"not","position":{"start":{"line":26,"column":27,"offset":1234},"end":{"line":26,"column":30,"offset":1237}}}],"position":{"start":{"line":26,"column":25,"offset":1232},"end":{"line":26,"column":32,"offset":1239}}},{"type":"text","value":" responsible for defining where data comes from or how it's stored. It is entirely implementation-agnostic.","position":{"start":{"line":26,"column":32,"offset":1239},"end":{"line":26,"column":139,"offset":1346}}}],"position":{"start":{"line":26,"column":1,"offset":1208},"end":{"line":26,"column":139,"offset":1346}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"supported-types","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#supported-types","aria-label":"supported types permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Supported types","position":{"start":{"line":28,"column":4,"offset":1351},"end":{"line":28,"column":19,"offset":1366}}}],"position":{"start":{"line":28,"column":1,"offset":1348},"end":{"line":28,"column":19,"offset":1366}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Every type definition in a GraphQL schema belongs to one of the following categories:","position":{"start":{"line":30,"column":1,"offset":1368},"end":{"line":30,"column":86,"offset":1453}}}],"position":{"start":{"line":30,"column":1,"offset":1368},"end":{"line":30,"column":86,"offset":1453}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#scalar-types"},"children":[{"type":"text","value":"Scalar types","position":{"start":{"line":32,"column":4,"offset":1458},"end":{"line":32,"column":16,"offset":1470}}}],"position":{"start":{"line":32,"column":3,"offset":1457},"end":{"line":32,"column":32,"offset":1486}}}],"position":{"start":{"line":32,"column":1,"offset":1455},"end":{"line":32,"column":32,"offset":1486}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#object-types"},"children":[{"type":"text","value":"Object types","position":{"start":{"line":33,"column":4,"offset":1490},"end":{"line":33,"column":16,"offset":1502}}}],"position":{"start":{"line":33,"column":3,"offset":1489},"end":{"line":33,"column":32,"offset":1518}}}],"position":{"start":{"line":33,"column":1,"offset":1487},"end":{"line":33,"column":32,"offset":1518}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#the-query-type"},"children":[{"type":"text","value":"The ","position":{"start":{"line":34,"column":4,"offset":1522},"end":{"line":34,"column":8,"offset":1526}}},{"type":"raw","value":"<code class=\"language-text\">Query</code>","position":{"start":{"line":34,"column":8,"offset":1526},"end":{"line":34,"column":15,"offset":1533}}},{"type":"text","value":" type","position":{"start":{"line":34,"column":15,"offset":1533},"end":{"line":34,"column":20,"offset":1538}}}],"position":{"start":{"line":34,"column":3,"offset":1521},"end":{"line":34,"column":38,"offset":1556}}}],"position":{"start":{"line":34,"column":1,"offset":1519},"end":{"line":34,"column":38,"offset":1556}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#the-mutation-type"},"children":[{"type":"text","value":"The ","position":{"start":{"line":35,"column":4,"offset":1560},"end":{"line":35,"column":8,"offset":1564}}},{"type":"raw","value":"<code class=\"language-text\">Mutation</code>","position":{"start":{"line":35,"column":8,"offset":1564},"end":{"line":35,"column":18,"offset":1574}}},{"type":"text","value":" type","position":{"start":{"line":35,"column":18,"offset":1574},"end":{"line":35,"column":23,"offset":1579}}}],"position":{"start":{"line":35,"column":3,"offset":1559},"end":{"line":35,"column":44,"offset":1600}}}],"position":{"start":{"line":35,"column":1,"offset":1557},"end":{"line":35,"column":44,"offset":1600}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#input-types"},"children":[{"type":"text","value":"Input types","position":{"start":{"line":36,"column":4,"offset":1604},"end":{"line":36,"column":15,"offset":1615}}}],"position":{"start":{"line":36,"column":3,"offset":1603},"end":{"line":36,"column":30,"offset":1630}}}],"position":{"start":{"line":36,"column":1,"offset":1601},"end":{"line":36,"column":30,"offset":1630}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#enum-types"},"children":[{"type":"text","value":"Enum types","position":{"start":{"line":37,"column":4,"offset":1634},"end":{"line":37,"column":14,"offset":1644}}}],"position":{"start":{"line":37,"column":3,"offset":1633},"end":{"line":37,"column":28,"offset":1658}}}],"position":{"start":{"line":37,"column":1,"offset":1631},"end":{"line":37,"column":28,"offset":1658}}},{"type":"text","value":"\n"}],"position":{"start":{"line":32,"column":1,"offset":1455},"end":{"line":37,"column":28,"offset":1658}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Each of these is defined in detail below.","position":{"start":{"line":39,"column":1,"offset":1660},"end":{"line":39,"column":42,"offset":1701}}}],"position":{"start":{"line":39,"column":1,"offset":1660},"end":{"line":39,"column":42,"offset":1701}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can monitor the performance and usage of each field within these declarations with ","position":{"start":{"line":41,"column":1,"offset":1703},"end":{"line":41,"column":88,"offset":1790}}},{"type":"element","tagName":"a","properties":{"href":"https://studio.apollographql.com/"},"children":[{"type":"text","value":"Apollo Studio","position":{"start":{"line":41,"column":89,"offset":1791},"end":{"line":41,"column":102,"offset":1804}}}],"position":{"start":{"line":41,"column":88,"offset":1790},"end":{"line":41,"column":138,"offset":1840}}},{"type":"text","value":", providing you with data that helps inform decisions about changes to your graph.","position":{"start":{"line":41,"column":138,"offset":1840},"end":{"line":41,"column":220,"offset":1922}}}],"position":{"start":{"line":41,"column":1,"offset":1703},"end":{"line":41,"column":220,"offset":1922}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"scalar-types","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#scalar-types","aria-label":"scalar types permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Scalar types","position":{"start":{"line":43,"column":5,"offset":1928},"end":{"line":43,"column":17,"offset":1940}}}],"position":{"start":{"line":43,"column":1,"offset":1924},"end":{"line":43,"column":17,"offset":1940}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Scalar types are similar to primitive types in your favorite programming language. They always resolve to concrete data.","position":{"start":{"line":45,"column":1,"offset":1942},"end":{"line":45,"column":121,"offset":2062}}}],"position":{"start":{"line":45,"column":1,"offset":1942},"end":{"line":45,"column":121,"offset":2062}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"GraphQL's default scalar types are:","position":{"start":{"line":47,"column":1,"offset":2064},"end":{"line":47,"column":36,"offset":2099}}}],"position":{"start":{"line":47,"column":1,"offset":2064},"end":{"line":47,"column":36,"offset":2099}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">Int</code>","position":{"start":{"line":49,"column":3,"offset":2103},"end":{"line":49,"column":8,"offset":2108}}},{"type":"text","value":": A signed 32‐bit integer","position":{"start":{"line":49,"column":8,"offset":2108},"end":{"line":49,"column":33,"offset":2133}}}],"position":{"start":{"line":49,"column":1,"offset":2101},"end":{"line":49,"column":33,"offset":2133}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">Float</code>","position":{"start":{"line":50,"column":3,"offset":2136},"end":{"line":50,"column":10,"offset":2143}}},{"type":"text","value":": A signed double-precision floating-point value","position":{"start":{"line":50,"column":10,"offset":2143},"end":{"line":50,"column":58,"offset":2191}}}],"position":{"start":{"line":50,"column":1,"offset":2134},"end":{"line":50,"column":58,"offset":2191}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">String</code>","position":{"start":{"line":51,"column":3,"offset":2194},"end":{"line":51,"column":11,"offset":2202}}},{"type":"text","value":": A UTF‐8 character sequence","position":{"start":{"line":51,"column":11,"offset":2202},"end":{"line":51,"column":39,"offset":2230}}}],"position":{"start":{"line":51,"column":1,"offset":2192},"end":{"line":51,"column":39,"offset":2230}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">Boolean</code>","position":{"start":{"line":52,"column":3,"offset":2233},"end":{"line":52,"column":12,"offset":2242}}},{"type":"text","value":": ","position":{"start":{"line":52,"column":12,"offset":2242},"end":{"line":52,"column":14,"offset":2244}}},{"type":"raw","value":"<code class=\"language-text\">true</code>","position":{"start":{"line":52,"column":14,"offset":2244},"end":{"line":52,"column":20,"offset":2250}}},{"type":"text","value":" or ","position":{"start":{"line":52,"column":20,"offset":2250},"end":{"line":52,"column":24,"offset":2254}}},{"type":"raw","value":"<code class=\"language-text\">false</code>","position":{"start":{"line":52,"column":24,"offset":2254},"end":{"line":52,"column":31,"offset":2261}}}],"position":{"start":{"line":52,"column":1,"offset":2231},"end":{"line":52,"column":31,"offset":2261}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">ID</code>","position":{"start":{"line":53,"column":3,"offset":2264},"end":{"line":53,"column":7,"offset":2268}}},{"type":"text","value":" (serialized as a ","position":{"start":{"line":53,"column":7,"offset":2268},"end":{"line":53,"column":25,"offset":2286}}},{"type":"raw","value":"<code class=\"language-text\">String</code>","position":{"start":{"line":53,"column":25,"offset":2286},"end":{"line":53,"column":33,"offset":2294}}},{"type":"text","value":"): A unique identifier that's often used to refetch an object or as the key for a cache. Although it's serialized as a ","position":{"start":{"line":53,"column":33,"offset":2294},"end":{"line":53,"column":152,"offset":2413}}},{"type":"raw","value":"<code class=\"language-text\">String</code>","position":{"start":{"line":53,"column":152,"offset":2413},"end":{"line":53,"column":160,"offset":2421}}},{"type":"text","value":", an ","position":{"start":{"line":53,"column":160,"offset":2421},"end":{"line":53,"column":165,"offset":2426}}},{"type":"raw","value":"<code class=\"language-text\">ID</code>","position":{"start":{"line":53,"column":165,"offset":2426},"end":{"line":53,"column":169,"offset":2430}}},{"type":"text","value":"  is not intended to be human‐readable.","position":{"start":{"line":53,"column":169,"offset":2430},"end":{"line":53,"column":208,"offset":2469}}}],"position":{"start":{"line":53,"column":1,"offset":2262},"end":{"line":53,"column":208,"offset":2469}}},{"type":"text","value":"\n"}],"position":{"start":{"line":49,"column":1,"offset":2101},"end":{"line":53,"column":208,"offset":2469}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"These primitive types cover the majority of use cases. For more specific use cases, you can create ","position":{"start":{"line":55,"column":1,"offset":2471},"end":{"line":55,"column":100,"offset":2570}}},{"type":"element","tagName":"a","properties":{"href":"/schema/custom-scalars/"},"children":[{"type":"text","value":"custom scalar types","position":{"start":{"line":55,"column":101,"offset":2571},"end":{"line":55,"column":120,"offset":2590}}}],"position":{"start":{"line":55,"column":100,"offset":2570},"end":{"line":55,"column":146,"offset":2616}}},{"type":"text","value":".","position":{"start":{"line":55,"column":146,"offset":2616},"end":{"line":55,"column":147,"offset":2617}}}],"position":{"start":{"line":55,"column":1,"offset":2471},"end":{"line":55,"column":147,"offset":2617}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"object-types","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#object-types","aria-label":"object types permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Object types","position":{"start":{"line":57,"column":5,"offset":2623},"end":{"line":57,"column":17,"offset":2635}}}],"position":{"start":{"line":57,"column":1,"offset":2619},"end":{"line":57,"column":17,"offset":2635}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Most of the types you define in a GraphQL schema are object types. An object type contains a collection of fields, each of which can be either a scalar type or ","position":{"start":{"line":59,"column":1,"offset":2637},"end":{"line":59,"column":161,"offset":2797}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"another","position":{"start":{"line":59,"column":162,"offset":2798},"end":{"line":59,"column":169,"offset":2805}}}],"position":{"start":{"line":59,"column":161,"offset":2797},"end":{"line":59,"column":170,"offset":2806}}},{"type":"text","value":" object type.","position":{"start":{"line":59,"column":170,"offset":2806},"end":{"line":59,"column":183,"offset":2819}}}],"position":{"start":{"line":59,"column":1,"offset":2637},"end":{"line":59,"column":183,"offset":2819}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two object types ","position":{"start":{"line":61,"column":1,"offset":2821},"end":{"line":61,"column":18,"offset":2838}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"can","position":{"start":{"line":61,"column":19,"offset":2839},"end":{"line":61,"column":22,"offset":2842}}}],"position":{"start":{"line":61,"column":18,"offset":2838},"end":{"line":61,"column":23,"offset":2843}}},{"type":"text","value":" include each other as fields, as is the case in our example schema from earlier:","position":{"start":{"line":61,"column":23,"offset":2843},"end":{"line":61,"column":104,"offset":2924}}}],"position":{"start":{"line":61,"column":1,"offset":2821},"end":{"line":61,"column":104,"offset":2924}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Book</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">title</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span>\n  <span class=\"token attr-name\">author</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Author</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Author</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span>\n  <span class=\"token attr-name\">books</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">Book</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":63,"column":1,"offset":2926},"end":{"line":73,"column":4,"offset":3035}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"the-query-type","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#the-query-type","aria-label":"the query type permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"The ","position":{"start":{"line":75,"column":5,"offset":3041},"end":{"line":75,"column":9,"offset":3045}}},{"type":"raw","value":"<code class=\"language-text\">Query</code>","position":{"start":{"line":75,"column":9,"offset":3045},"end":{"line":75,"column":16,"offset":3052}}},{"type":"text","value":" type","position":{"start":{"line":75,"column":16,"offset":3052},"end":{"line":75,"column":21,"offset":3057}}}],"position":{"start":{"line":75,"column":1,"offset":3037},"end":{"line":75,"column":21,"offset":3057}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":77,"column":1,"offset":3059},"end":{"line":77,"column":5,"offset":3063}}},{"type":"raw","value":"<code class=\"language-text\">Query</code>","position":{"start":{"line":77,"column":5,"offset":3063},"end":{"line":77,"column":12,"offset":3070}}},{"type":"text","value":" type defines all of the top-level ","position":{"start":{"line":77,"column":12,"offset":3070},"end":{"line":77,"column":47,"offset":3105}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"entry points","position":{"start":{"line":77,"column":49,"offset":3107},"end":{"line":77,"column":61,"offset":3119}}}],"position":{"start":{"line":77,"column":47,"offset":3105},"end":{"line":77,"column":63,"offset":3121}}},{"type":"text","value":" for queries that clients execute against your data graph. It resembles an ","position":{"start":{"line":77,"column":63,"offset":3121},"end":{"line":77,"column":138,"offset":3196}}},{"type":"element","tagName":"a","properties":{"href":"#object-types"},"children":[{"type":"text","value":"object type","position":{"start":{"line":77,"column":139,"offset":3197},"end":{"line":77,"column":150,"offset":3208}}}],"position":{"start":{"line":77,"column":138,"offset":3196},"end":{"line":77,"column":166,"offset":3224}}},{"type":"text","value":", but its name is always ","position":{"start":{"line":77,"column":166,"offset":3224},"end":{"line":77,"column":191,"offset":3249}}},{"type":"raw","value":"<code class=\"language-text\">Query</code>","position":{"start":{"line":77,"column":191,"offset":3249},"end":{"line":77,"column":198,"offset":3256}}},{"type":"text","value":".","position":{"start":{"line":77,"column":198,"offset":3256},"end":{"line":77,"column":199,"offset":3257}}}],"position":{"start":{"line":77,"column":1,"offset":3059},"end":{"line":77,"column":199,"offset":3257}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Each field of the ","position":{"start":{"line":79,"column":1,"offset":3259},"end":{"line":79,"column":19,"offset":3277}}},{"type":"raw","value":"<code class=\"language-text\">Query</code>","position":{"start":{"line":79,"column":19,"offset":3277},"end":{"line":79,"column":26,"offset":3284}}},{"type":"text","value":" type defines the name and return type of a different entry point. The ","position":{"start":{"line":79,"column":26,"offset":3284},"end":{"line":79,"column":97,"offset":3355}}},{"type":"raw","value":"<code class=\"language-text\">Query</code>","position":{"start":{"line":79,"column":97,"offset":3355},"end":{"line":79,"column":104,"offset":3362}}},{"type":"text","value":" type for our example schema might resemble the following:","position":{"start":{"line":79,"column":104,"offset":3362},"end":{"line":79,"column":162,"offset":3420}}}],"position":{"start":{"line":79,"column":1,"offset":3259},"end":{"line":79,"column":162,"offset":3420}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">books</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">Book</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">authors</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">Author</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":81,"column":1,"offset":3422},"end":{"line":86,"column":4,"offset":3487}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This ","position":{"start":{"line":88,"column":1,"offset":3489},"end":{"line":88,"column":6,"offset":3494}}},{"type":"raw","value":"<code class=\"language-text\">Query</code>","position":{"start":{"line":88,"column":6,"offset":3494},"end":{"line":88,"column":13,"offset":3501}}},{"type":"text","value":" type defines two fields: ","position":{"start":{"line":88,"column":13,"offset":3501},"end":{"line":88,"column":39,"offset":3527}}},{"type":"raw","value":"<code class=\"language-text\">books</code>","position":{"start":{"line":88,"column":39,"offset":3527},"end":{"line":88,"column":46,"offset":3534}}},{"type":"text","value":" and ","position":{"start":{"line":88,"column":46,"offset":3534},"end":{"line":88,"column":51,"offset":3539}}},{"type":"raw","value":"<code class=\"language-text\">authors</code>","position":{"start":{"line":88,"column":51,"offset":3539},"end":{"line":88,"column":60,"offset":3548}}},{"type":"text","value":". Each field returns a list of the corresponding type.","position":{"start":{"line":88,"column":60,"offset":3548},"end":{"line":88,"column":114,"offset":3602}}}],"position":{"start":{"line":88,"column":1,"offset":3489},"end":{"line":88,"column":114,"offset":3602}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With a REST-based API, books and authors would probably be returned by different endpoints (e.g., ","position":{"start":{"line":90,"column":1,"offset":3604},"end":{"line":90,"column":99,"offset":3702}}},{"type":"raw","value":"<code class=\"language-text\">/api/books</code>","position":{"start":{"line":90,"column":99,"offset":3702},"end":{"line":90,"column":111,"offset":3714}}},{"type":"text","value":" and ","position":{"start":{"line":90,"column":111,"offset":3714},"end":{"line":90,"column":116,"offset":3719}}},{"type":"raw","value":"<code class=\"language-text\">/api/authors</code>","position":{"start":{"line":90,"column":116,"offset":3719},"end":{"line":90,"column":130,"offset":3733}}},{"type":"text","value":"). The flexibility of GraphQL enables clients to query both resources with a single request.","position":{"start":{"line":90,"column":130,"offset":3733},"end":{"line":90,"column":222,"offset":3825}}}],"position":{"start":{"line":90,"column":1,"offset":3604},"end":{"line":90,"column":222,"offset":3825}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"structuring-a-query","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#structuring-a-query","aria-label":"structuring a query permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Structuring a query","position":{"start":{"line":92,"column":6,"offset":3832},"end":{"line":92,"column":25,"offset":3851}}}],"position":{"start":{"line":92,"column":1,"offset":3827},"end":{"line":92,"column":25,"offset":3851}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When your clients build queries to execute against your data graph, those queries match the shape of the object types you define in your schema.","position":{"start":{"line":94,"column":1,"offset":3853},"end":{"line":94,"column":145,"offset":3997}}}],"position":{"start":{"line":94,"column":1,"offset":3853},"end":{"line":94,"column":145,"offset":3997}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Based on our example schema so far, a client could execute the following query, which requests both a list of all book titles ","position":{"start":{"line":96,"column":1,"offset":3999},"end":{"line":96,"column":127,"offset":4125}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"and","position":{"start":{"line":96,"column":128,"offset":4126},"end":{"line":96,"column":131,"offset":4129}}}],"position":{"start":{"line":96,"column":127,"offset":4125},"end":{"line":96,"column":132,"offset":4130}}},{"type":"text","value":" a list of all author names:","position":{"start":{"line":96,"column":132,"offset":4130},"end":{"line":96,"column":160,"offset":4158}}}],"position":{"start":{"line":96,"column":1,"offset":3999},"end":{"line":96,"column":160,"offset":4158}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> <span class=\"token definition-query function\">GetBooksAndAuthors</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token object\">books</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">title</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token object\">authors</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">name</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":98,"column":1,"offset":4160},"end":{"line":108,"column":4,"offset":4253}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Our server would then respond to the query with results that match the query's structure, like so:","position":{"start":{"line":110,"column":1,"offset":4255},"end":{"line":110,"column":99,"offset":4353}}}],"position":{"start":{"line":110,"column":1,"offset":4255},"end":{"line":110,"column":99,"offset":4353}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-json line-numbers\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"books\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"City of Glass\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      ...\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"authors\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Paul Auster\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      ...\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":112,"column":1,"offset":4355},"end":{"line":129,"column":4,"offset":4548}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Although it might be useful in some cases to fetch these two separate lists, a client would probably prefer to fetch a single list of books, where each book's author is included in the result.","position":{"start":{"line":131,"column":1,"offset":4550},"end":{"line":131,"column":193,"offset":4742}}}],"position":{"start":{"line":131,"column":1,"offset":4550},"end":{"line":131,"column":193,"offset":4742}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Because our schema's ","position":{"start":{"line":133,"column":1,"offset":4744},"end":{"line":133,"column":22,"offset":4765}}},{"type":"raw","value":"<code class=\"language-text\">Book</code>","position":{"start":{"line":133,"column":22,"offset":4765},"end":{"line":133,"column":28,"offset":4771}}},{"type":"text","value":" type has an ","position":{"start":{"line":133,"column":28,"offset":4771},"end":{"line":133,"column":41,"offset":4784}}},{"type":"raw","value":"<code class=\"language-text\">author</code>","position":{"start":{"line":133,"column":41,"offset":4784},"end":{"line":133,"column":49,"offset":4792}}},{"type":"text","value":" field of type ","position":{"start":{"line":133,"column":49,"offset":4792},"end":{"line":133,"column":64,"offset":4807}}},{"type":"raw","value":"<code class=\"language-text\">Author</code>","position":{"start":{"line":133,"column":64,"offset":4807},"end":{"line":133,"column":72,"offset":4815}}},{"type":"text","value":", a client could instead structure their query like so:","position":{"start":{"line":133,"column":72,"offset":4815},"end":{"line":133,"column":127,"offset":4870}}}],"position":{"start":{"line":133,"column":1,"offset":4744},"end":{"line":133,"column":127,"offset":4870}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> <span class=\"token definition-query function\">GetBooks</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token object\">books</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">title</span>\n    <span class=\"token object\">author</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">name</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":135,"column":1,"offset":4872},"end":{"line":144,"column":4,"offset":4959}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"And once again, our server would respond with results that match the query's structure:","position":{"start":{"line":146,"column":1,"offset":4961},"end":{"line":146,"column":88,"offset":5048}}}],"position":{"start":{"line":146,"column":1,"offset":4961},"end":{"line":146,"column":88,"offset":5048}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-json line-numbers\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"books\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"City of Glass\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Paul Auster\"</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      ...\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":148,"column":1,"offset":5050},"end":{"line":162,"column":4,"offset":5225}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"the-mutation-type","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#the-mutation-type","aria-label":"the mutation type permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"The ","position":{"start":{"line":164,"column":5,"offset":5231},"end":{"line":164,"column":9,"offset":5235}}},{"type":"raw","value":"<code class=\"language-text\">Mutation</code>","position":{"start":{"line":164,"column":9,"offset":5235},"end":{"line":164,"column":19,"offset":5245}}},{"type":"text","value":" type","position":{"start":{"line":164,"column":19,"offset":5245},"end":{"line":164,"column":24,"offset":5250}}}],"position":{"start":{"line":164,"column":1,"offset":5227},"end":{"line":164,"column":24,"offset":5250}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":166,"column":1,"offset":5252},"end":{"line":166,"column":5,"offset":5256}}},{"type":"raw","value":"<code class=\"language-text\">Mutation</code>","position":{"start":{"line":166,"column":5,"offset":5256},"end":{"line":166,"column":15,"offset":5266}}},{"type":"text","value":" type is similar in structure and purpose to the ","position":{"start":{"line":166,"column":15,"offset":5266},"end":{"line":166,"column":64,"offset":5315}}},{"type":"element","tagName":"a","properties":{"href":"#the-query-type"},"children":[{"type":"raw","value":"<code class=\"language-text\">Query</code>","position":{"start":{"line":166,"column":65,"offset":5316},"end":{"line":166,"column":72,"offset":5323}}},{"type":"text","value":" type","position":{"start":{"line":166,"column":72,"offset":5323},"end":{"line":166,"column":77,"offset":5328}}}],"position":{"start":{"line":166,"column":64,"offset":5315},"end":{"line":166,"column":95,"offset":5346}}},{"type":"text","value":". Whereas the ","position":{"start":{"line":166,"column":95,"offset":5346},"end":{"line":166,"column":109,"offset":5360}}},{"type":"raw","value":"<code class=\"language-text\">Query</code>","position":{"start":{"line":166,"column":109,"offset":5360},"end":{"line":166,"column":116,"offset":5367}}},{"type":"text","value":" type defines entry points for ","position":{"start":{"line":166,"column":116,"offset":5367},"end":{"line":166,"column":147,"offset":5398}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"read","position":{"start":{"line":166,"column":148,"offset":5399},"end":{"line":166,"column":152,"offset":5403}}}],"position":{"start":{"line":166,"column":147,"offset":5398},"end":{"line":166,"column":153,"offset":5404}}},{"type":"text","value":" operations, the ","position":{"start":{"line":166,"column":153,"offset":5404},"end":{"line":166,"column":170,"offset":5421}}},{"type":"raw","value":"<code class=\"language-text\">Mutation</code>","position":{"start":{"line":166,"column":170,"offset":5421},"end":{"line":166,"column":180,"offset":5431}}},{"type":"text","value":" type defines entry points for ","position":{"start":{"line":166,"column":180,"offset":5431},"end":{"line":166,"column":211,"offset":5462}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"write","position":{"start":{"line":166,"column":212,"offset":5463},"end":{"line":166,"column":217,"offset":5468}}}],"position":{"start":{"line":166,"column":211,"offset":5462},"end":{"line":166,"column":218,"offset":5469}}},{"type":"text","value":" operations.","position":{"start":{"line":166,"column":218,"offset":5469},"end":{"line":166,"column":230,"offset":5481}}}],"position":{"start":{"line":166,"column":1,"offset":5252},"end":{"line":166,"column":230,"offset":5481}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Each field of the ","position":{"start":{"line":168,"column":1,"offset":5483},"end":{"line":168,"column":19,"offset":5501}}},{"type":"raw","value":"<code class=\"language-text\">Mutation</code>","position":{"start":{"line":168,"column":19,"offset":5501},"end":{"line":168,"column":29,"offset":5511}}},{"type":"text","value":" type defines the signature and return type of a different entry point. The ","position":{"start":{"line":168,"column":29,"offset":5511},"end":{"line":168,"column":105,"offset":5587}}},{"type":"raw","value":"<code class=\"language-text\">Mutation</code>","position":{"start":{"line":168,"column":105,"offset":5587},"end":{"line":168,"column":115,"offset":5597}}},{"type":"text","value":" type for our example schema might resemble the following:","position":{"start":{"line":168,"column":115,"offset":5597},"end":{"line":168,"column":173,"offset":5655}}}],"position":{"start":{"line":168,"column":1,"offset":5483},"end":{"line":168,"column":173,"offset":5655}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Mutation</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">addBook</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">title</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">author</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Book</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":170,"column":1,"offset":5657},"end":{"line":174,"column":4,"offset":5736}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This ","position":{"start":{"line":176,"column":1,"offset":5738},"end":{"line":176,"column":6,"offset":5743}}},{"type":"raw","value":"<code class=\"language-text\">Mutation</code>","position":{"start":{"line":176,"column":6,"offset":5743},"end":{"line":176,"column":16,"offset":5753}}},{"type":"text","value":" type defines a single available mutation, ","position":{"start":{"line":176,"column":16,"offset":5753},"end":{"line":176,"column":59,"offset":5796}}},{"type":"raw","value":"<code class=\"language-text\">addBook</code>","position":{"start":{"line":176,"column":59,"offset":5796},"end":{"line":176,"column":68,"offset":5805}}},{"type":"text","value":". The mutation accepts two arguments (","position":{"start":{"line":176,"column":68,"offset":5805},"end":{"line":176,"column":106,"offset":5843}}},{"type":"raw","value":"<code class=\"language-text\">title</code>","position":{"start":{"line":176,"column":106,"offset":5843},"end":{"line":176,"column":113,"offset":5850}}},{"type":"text","value":" and ","position":{"start":{"line":176,"column":113,"offset":5850},"end":{"line":176,"column":118,"offset":5855}}},{"type":"raw","value":"<code class=\"language-text\">author</code>","position":{"start":{"line":176,"column":118,"offset":5855},"end":{"line":176,"column":126,"offset":5863}}},{"type":"text","value":") and returns a newly created ","position":{"start":{"line":176,"column":126,"offset":5863},"end":{"line":176,"column":156,"offset":5893}}},{"type":"raw","value":"<code class=\"language-text\">Book</code>","position":{"start":{"line":176,"column":156,"offset":5893},"end":{"line":176,"column":162,"offset":5899}}},{"type":"text","value":" object. As you'd expect, this ","position":{"start":{"line":176,"column":162,"offset":5899},"end":{"line":176,"column":193,"offset":5930}}},{"type":"raw","value":"<code class=\"language-text\">Book</code>","position":{"start":{"line":176,"column":193,"offset":5930},"end":{"line":176,"column":199,"offset":5936}}},{"type":"text","value":" object conforms to the structure that we defined in our schema.","position":{"start":{"line":176,"column":199,"offset":5936},"end":{"line":176,"column":263,"offset":6000}}}],"position":{"start":{"line":176,"column":1,"offset":5738},"end":{"line":176,"column":263,"offset":6000}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"structuring-a-mutation","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#structuring-a-mutation","aria-label":"structuring a mutation permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Structuring a mutation","position":{"start":{"line":178,"column":6,"offset":6007},"end":{"line":178,"column":28,"offset":6029}}}],"position":{"start":{"line":178,"column":1,"offset":6002},"end":{"line":178,"column":28,"offset":6029}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Like queries, mutations match the structure of your schema's type definitions. The following mutation creates a new ","position":{"start":{"line":180,"column":1,"offset":6031},"end":{"line":180,"column":117,"offset":6147}}},{"type":"raw","value":"<code class=\"language-text\">Book</code>","position":{"start":{"line":180,"column":117,"offset":6147},"end":{"line":180,"column":123,"offset":6153}}},{"type":"text","value":" and requests certain fields of the created object as a return value:","position":{"start":{"line":180,"column":123,"offset":6153},"end":{"line":180,"column":192,"offset":6222}}}],"position":{"start":{"line":180,"column":1,"offset":6031},"end":{"line":180,"column":192,"offset":6222}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">mutation</span> <span class=\"token definition-mutation function\">CreateBook</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property-query\">addBook</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">title</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Fox in Socks\"</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">author</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Dr. Seuss\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">title</span>\n    <span class=\"token object\">author</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">name</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":182,"column":1,"offset":6224},"end":{"line":191,"column":4,"offset":6362}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As with queries, our server would respond to this mutation with a result that matches the mutation's structure, like so:","position":{"start":{"line":193,"column":1,"offset":6364},"end":{"line":193,"column":121,"offset":6484}}}],"position":{"start":{"line":193,"column":1,"offset":6364},"end":{"line":193,"column":121,"offset":6484}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-json line-numbers\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"addBook\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Fox in Socks\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Dr. Seuss\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":195,"column":1,"offset":6486},"end":{"line":206,"column":4,"offset":6625}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A single client request can include multiple mutations to execute. To prevent race conditions, mutations are executed serially in the order they're listed.","position":{"start":{"line":208,"column":1,"offset":6627},"end":{"line":208,"column":156,"offset":6782}}}],"position":{"start":{"line":208,"column":1,"offset":6627},"end":{"line":208,"column":156,"offset":6782}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#designing-mutations"},"children":[{"type":"text","value":"Learn more about designing mutations","position":{"start":{"line":210,"column":2,"offset":6785},"end":{"line":210,"column":38,"offset":6821}}}],"position":{"start":{"line":210,"column":1,"offset":6784},"end":{"line":210,"column":61,"offset":6844}}}],"position":{"start":{"line":210,"column":1,"offset":6784},"end":{"line":210,"column":61,"offset":6844}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"the-subscription-type","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#the-subscription-type","aria-label":"the subscription type permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"The ","position":{"start":{"line":212,"column":5,"offset":6850},"end":{"line":212,"column":9,"offset":6854}}},{"type":"raw","value":"<code class=\"language-text\">Subscription</code>","position":{"start":{"line":212,"column":9,"offset":6854},"end":{"line":212,"column":23,"offset":6868}}},{"type":"text","value":" type","position":{"start":{"line":212,"column":23,"offset":6868},"end":{"line":212,"column":28,"offset":6873}}}],"position":{"start":{"line":212,"column":1,"offset":6846},"end":{"line":212,"column":28,"offset":6873}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"See ","position":{"start":{"line":214,"column":1,"offset":6875},"end":{"line":214,"column":5,"offset":6879}}},{"type":"element","tagName":"a","properties":{"href":"/v2/data/subscriptions/"},"children":[{"type":"text","value":"Subscriptions","position":{"start":{"line":214,"column":6,"offset":6880},"end":{"line":214,"column":19,"offset":6893}}}],"position":{"start":{"line":214,"column":5,"offset":6879},"end":{"line":214,"column":43,"offset":6917}}},{"type":"text","value":".","position":{"start":{"line":214,"column":43,"offset":6917},"end":{"line":214,"column":44,"offset":6918}}}],"position":{"start":{"line":214,"column":1,"offset":6875},"end":{"line":214,"column":44,"offset":6918}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"input-types","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#input-types","aria-label":"input types permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Input types","position":{"start":{"line":216,"column":5,"offset":6924},"end":{"line":216,"column":16,"offset":6935}}}],"position":{"start":{"line":216,"column":1,"offset":6920},"end":{"line":216,"column":16,"offset":6935}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Input types are special object types that allow you to pass objects as arguments to queries and mutations (as opposed to passing only scalar types). Input types help keep operation signatures clean, much like how accepting a single ","position":{"start":{"line":218,"column":1,"offset":6937},"end":{"line":218,"column":233,"offset":7169}}},{"type":"raw","value":"<code class=\"language-text\">options</code>","position":{"start":{"line":218,"column":233,"offset":7169},"end":{"line":218,"column":242,"offset":7178}}},{"type":"text","value":" object in a JavaScript function can be cleaner than repeatedly adding arguments to the function's signature.","position":{"start":{"line":218,"column":242,"offset":7178},"end":{"line":218,"column":351,"offset":7287}}}],"position":{"start":{"line":218,"column":1,"offset":6937},"end":{"line":218,"column":351,"offset":7287}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Consider this mutation that creates a blog post:","position":{"start":{"line":220,"column":1,"offset":7289},"end":{"line":220,"column":49,"offset":7337}}}],"position":{"start":{"line":220,"column":1,"offset":7289},"end":{"line":220,"column":49,"offset":7337}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Mutation</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">createPost</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">title</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">body</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">mediaUrls</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token scalar\">String</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Post</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":222,"column":1,"offset":7339},"end":{"line":226,"column":4,"offset":7440}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Instead of accepting three arguments, this mutation could accept a ","position":{"start":{"line":228,"column":1,"offset":7442},"end":{"line":228,"column":68,"offset":7509}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"single","position":{"start":{"line":228,"column":69,"offset":7510},"end":{"line":228,"column":75,"offset":7516}}}],"position":{"start":{"line":228,"column":68,"offset":7509},"end":{"line":228,"column":76,"offset":7517}}},{"type":"text","value":" input type that includes all of these fields. This comes in extra handy if we decide to accept an additional argument in the future, such as an ","position":{"start":{"line":228,"column":76,"offset":7517},"end":{"line":228,"column":221,"offset":7662}}},{"type":"raw","value":"<code class=\"language-text\">author</code>","position":{"start":{"line":228,"column":221,"offset":7662},"end":{"line":228,"column":229,"offset":7670}}},{"type":"text","value":".","position":{"start":{"line":228,"column":229,"offset":7670},"end":{"line":228,"column":230,"offset":7671}}}],"position":{"start":{"line":228,"column":1,"offset":7442},"end":{"line":228,"column":230,"offset":7671}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An input type's definition is similar to an object type's, but it uses the ","position":{"start":{"line":230,"column":1,"offset":7673},"end":{"line":230,"column":76,"offset":7748}}},{"type":"raw","value":"<code class=\"language-text\">input</code>","position":{"start":{"line":230,"column":76,"offset":7748},"end":{"line":230,"column":83,"offset":7755}}},{"type":"text","value":" keyword:","position":{"start":{"line":230,"column":83,"offset":7755},"end":{"line":230,"column":92,"offset":7764}}}],"position":{"start":{"line":230,"column":1,"offset":7673},"end":{"line":230,"column":92,"offset":7764}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Mutation</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">createPost</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">post</span><span class=\"token punctuation\">:</span> <span class=\"token atom-input class-name\">PostAndMediaInput</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Post</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> <span class=\"token atom-input class-name\">PostAndMediaInput</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">title</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span>\n  <span class=\"token attr-name\">body</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span>\n  <span class=\"token attr-name\">mediaUrls</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token scalar\">String</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":232,"column":1,"offset":7766},"end":{"line":242,"column":4,"offset":7924}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Not only does this facilitate passing the ","position":{"start":{"line":244,"column":1,"offset":7926},"end":{"line":244,"column":43,"offset":7968}}},{"type":"raw","value":"<code class=\"language-text\">PostAndMediaInput</code>","position":{"start":{"line":244,"column":43,"offset":7968},"end":{"line":244,"column":62,"offset":7987}}},{"type":"text","value":" type around within our schema, it also provides a basis for annotating fields with descriptions that are automatically exposed by GraphQL-enabled tools:","position":{"start":{"line":244,"column":62,"offset":7987},"end":{"line":244,"column":215,"offset":8140}}}],"position":{"start":{"line":244,"column":1,"offset":7926},"end":{"line":244,"column":215,"offset":8140}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">input</span> <span class=\"token atom-input class-name\">PostAndMediaInput</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token description string\">\"<span class=\"token language-markdown\">A main title for the post</span>\"</span>\n  <span class=\"token attr-name\">title</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span>\n  <span class=\"token description string\">\"<span class=\"token language-markdown\">The text body of the post.</span>\"</span>\n  <span class=\"token attr-name\">body</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span>\n  <span class=\"token description string\">\"<span class=\"token language-markdown\">A list of URLs to render in the post.</span>\"</span>\n  <span class=\"token attr-name\">mediaUrls</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token scalar\">String</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":246,"column":1,"offset":8142},"end":{"line":255,"column":4,"offset":8340}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Input types can sometimes be useful when multiple operations require the exact same set of information, but you should reuse them sparingly. Operations might eventually diverge in their sets of required arguments.","position":{"start":{"line":257,"column":1,"offset":8342},"end":{"line":257,"column":214,"offset":8555}}}],"position":{"start":{"line":257,"column":1,"offset":8342},"end":{"line":257,"column":214,"offset":8555}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Do not use the same input type for both queries and mutations","position":{"start":{"line":259,"column":5,"offset":8561},"end":{"line":259,"column":66,"offset":8622}}}],"position":{"start":{"line":259,"column":3,"offset":8559},"end":{"line":259,"column":68,"offset":8624}}},{"type":"text","value":". In many cases, arguments that are ","position":{"start":{"line":259,"column":68,"offset":8624},"end":{"line":259,"column":104,"offset":8660}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"required","position":{"start":{"line":259,"column":105,"offset":8661},"end":{"line":259,"column":113,"offset":8669}}}],"position":{"start":{"line":259,"column":104,"offset":8660},"end":{"line":259,"column":114,"offset":8670}}},{"type":"text","value":" for a mutation are ","position":{"start":{"line":259,"column":114,"offset":8670},"end":{"line":259,"column":134,"offset":8690}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"optional","position":{"start":{"line":259,"column":135,"offset":8691},"end":{"line":259,"column":143,"offset":8699}}}],"position":{"start":{"line":259,"column":134,"offset":8690},"end":{"line":259,"column":144,"offset":8700}}},{"type":"text","value":" for a corresponding query.","position":{"start":{"line":259,"column":144,"offset":8700},"end":{"line":259,"column":171,"offset":8727}}}],"position":{"start":{"line":259,"column":3,"offset":8559},"end":{"line":259,"column":171,"offset":8727}}},{"type":"text","value":"\n"}],"position":{"start":{"line":259,"column":1,"offset":8557},"end":{"line":259,"column":171,"offset":8727}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"enum-types","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#enum-types","aria-label":"enum types permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Enum types","position":{"start":{"line":261,"column":5,"offset":8733},"end":{"line":261,"column":15,"offset":8743}}}],"position":{"start":{"line":261,"column":1,"offset":8729},"end":{"line":261,"column":15,"offset":8743}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An enum is similar to a scalar type, but its legal values are defined in the schema. Here's an example definition:","position":{"start":{"line":263,"column":1,"offset":8745},"end":{"line":263,"column":115,"offset":8859}}}],"position":{"start":{"line":263,"column":1,"offset":8745},"end":{"line":263,"column":115,"offset":8859}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">enum</span> <span class=\"token class-name\">AllowedColor</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">RED</span>\n  <span class=\"token constant\">GREEN</span>\n  <span class=\"token constant\">BLUE</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":265,"column":1,"offset":8861},"end":{"line":271,"column":4,"offset":8918}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Enums are most useful in situations where the user must pick from a prescribed list of options. As an additional benefit, enum values autocomplete in tools like the Apollo Studio Explorer.","position":{"start":{"line":273,"column":1,"offset":8920},"end":{"line":273,"column":189,"offset":9108}}}],"position":{"start":{"line":273,"column":1,"offset":8920},"end":{"line":273,"column":189,"offset":9108}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An enum can appear anywhere a scalar is valid (including as a field argument), because they serialize as strings:","position":{"start":{"line":275,"column":1,"offset":9110},"end":{"line":275,"column":114,"offset":9223}}}],"position":{"start":{"line":275,"column":1,"offset":9110},"end":{"line":275,"column":114,"offset":9223}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">favoriteColor</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">AllowedColor</span> <span class=\"token comment\"># enum return value</span>\n  <span class=\"token attr-name\">avatar</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">borderColor</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">AllowedColor</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span> <span class=\"token comment\"># enum argument</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":277,"column":1,"offset":9225},"end":{"line":282,"column":4,"offset":9364}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A query might then look like this:","position":{"start":{"line":284,"column":1,"offset":9366},"end":{"line":284,"column":35,"offset":9400}}}],"position":{"start":{"line":284,"column":1,"offset":9366},"end":{"line":284,"column":35,"offset":9400}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> <span class=\"token definition-query function\">GetAvatar</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property-query\">avatar</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">borderColor</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">RED</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":286,"column":1,"offset":9402},"end":{"line":290,"column":4,"offset":9463}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"internal-values-advanced","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#internal-values-advanced","aria-label":"internal values advanced permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Internal values (advanced)","position":{"start":{"line":292,"column":6,"offset":9470},"end":{"line":292,"column":32,"offset":9496}}}],"position":{"start":{"line":292,"column":1,"offset":9465},"end":{"line":292,"column":32,"offset":9496}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Sometimes, a backend forces a different value for an enum internally than in the public API. You can set each enum value's corresponding ","position":{"start":{"line":294,"column":1,"offset":9498},"end":{"line":294,"column":138,"offset":9635}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"internal","position":{"start":{"line":294,"column":139,"offset":9636},"end":{"line":294,"column":147,"offset":9644}}}],"position":{"start":{"line":294,"column":138,"offset":9635},"end":{"line":294,"column":148,"offset":9645}}},{"type":"text","value":" value in the ","position":{"start":{"line":294,"column":148,"offset":9645},"end":{"line":294,"column":162,"offset":9659}}},{"type":"element","tagName":"a","properties":{"href":"/v2/data/resolvers/#defining-a-resolver"},"children":[{"type":"text","value":"resolver map","position":{"start":{"line":294,"column":163,"offset":9660},"end":{"line":294,"column":175,"offset":9672}}}],"position":{"start":{"line":294,"column":162,"offset":9659},"end":{"line":294,"column":216,"offset":9713}}},{"type":"text","value":" you provide to Apollo Server.","position":{"start":{"line":294,"column":216,"offset":9713},"end":{"line":294,"column":246,"offset":9743}}}],"position":{"start":{"line":294,"column":1,"offset":9498},"end":{"line":294,"column":246,"offset":9743}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This feature usually isn't required unless another library in your application expects enum values in a different form.","position":{"start":{"line":296,"column":3,"offset":9747},"end":{"line":296,"column":122,"offset":9866}}}],"position":{"start":{"line":296,"column":3,"offset":9747},"end":{"line":296,"column":122,"offset":9866}}},{"type":"text","value":"\n"}],"position":{"start":{"line":296,"column":1,"offset":9745},"end":{"line":296,"column":122,"offset":9866}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The following example uses color hex codes for each ","position":{"start":{"line":298,"column":1,"offset":9868},"end":{"line":298,"column":53,"offset":9920}}},{"type":"raw","value":"<code class=\"language-text\">AllowedColor</code>","position":{"start":{"line":298,"column":53,"offset":9920},"end":{"line":298,"column":67,"offset":9934}}},{"type":"text","value":"'s internal value:","position":{"start":{"line":298,"column":67,"offset":9934},"end":{"line":298,"column":85,"offset":9952}}}],"position":{"start":{"line":298,"column":1,"offset":9868},"end":{"line":298,"column":85,"offset":9952}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> resolvers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">AllowedColor</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">RED</span><span class=\"token operator\">:</span> <span class=\"token string\">'#f00'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">GREEN</span><span class=\"token operator\">:</span> <span class=\"token string\">'#0f0'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">BLUE</span><span class=\"token operator\">:</span> <span class=\"token string\">'#00f'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ...other resolver definitions...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":300,"column":1,"offset":9954},"end":{"line":309,"column":4,"offset":10100}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"These internal values don't change the public API at all. Apollo Server resolvers accept these values instead of the schema values, as shown:","position":{"start":{"line":311,"column":1,"offset":10102},"end":{"line":311,"column":142,"offset":10243}}}],"position":{"start":{"line":311,"column":1,"offset":10102},"end":{"line":311,"column":142,"offset":10243}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> resolvers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">AllowedColor</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">RED</span><span class=\"token operator\">:</span> <span class=\"token string\">'#f00'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">GREEN</span><span class=\"token operator\">:</span> <span class=\"token string\">'#0f0'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">BLUE</span><span class=\"token operator\">:</span> <span class=\"token string\">'#00f'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">Query</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">favoriteColor</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">'#f00'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">avatar</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">parent<span class=\"token punctuation\">,</span> args</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// args.borderColor is '#f00', '#0f0', or '#00f'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":313,"column":1,"offset":10245},"end":{"line":327,"column":4,"offset":10496}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"union-and-interface-types","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#union-and-interface-types","aria-label":"union and interface types permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Union and interface types","position":{"start":{"line":329,"column":5,"offset":10502},"end":{"line":329,"column":30,"offset":10527}}}],"position":{"start":{"line":329,"column":1,"offset":10498},"end":{"line":329,"column":30,"offset":10527}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"See ","position":{"start":{"line":331,"column":1,"offset":10529},"end":{"line":331,"column":5,"offset":10533}}},{"type":"element","tagName":"a","properties":{"href":"/v2/schema/unions-interfaces/"},"children":[{"type":"text","value":"Unions and interfaces","position":{"start":{"line":331,"column":6,"offset":10534},"end":{"line":331,"column":27,"offset":10555}}}],"position":{"start":{"line":331,"column":5,"offset":10533},"end":{"line":331,"column":50,"offset":10578}}},{"type":"text","value":".","position":{"start":{"line":331,"column":50,"offset":10578},"end":{"line":331,"column":51,"offset":10579}}}],"position":{"start":{"line":331,"column":1,"offset":10529},"end":{"line":331,"column":51,"offset":10579}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"growing-with-a-schema","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#growing-with-a-schema","aria-label":"growing with a schema permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Growing with a schema","position":{"start":{"line":333,"column":4,"offset":10584},"end":{"line":333,"column":25,"offset":10605}}}],"position":{"start":{"line":333,"column":1,"offset":10581},"end":{"line":333,"column":25,"offset":10605}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As your organization grows and evolves, your data graph grows and evolves with it. New products and features introduce new schema types and fields. To track these changes over time, you should maintain your schema's definition in version control.","position":{"start":{"line":335,"column":1,"offset":10607},"end":{"line":335,"column":247,"offset":10853}}}],"position":{"start":{"line":335,"column":1,"offset":10607},"end":{"line":335,"column":247,"offset":10853}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Most ","position":{"start":{"line":337,"column":1,"offset":10855},"end":{"line":337,"column":6,"offset":10860}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"additive","position":{"start":{"line":337,"column":7,"offset":10861},"end":{"line":337,"column":15,"offset":10869}}}],"position":{"start":{"line":337,"column":6,"offset":10860},"end":{"line":337,"column":16,"offset":10870}}},{"type":"text","value":" changes to a schema are safe and backward compatible. However, changes that remove or alter ","position":{"start":{"line":337,"column":16,"offset":10870},"end":{"line":337,"column":109,"offset":10963}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"existing","position":{"start":{"line":337,"column":110,"offset":10964},"end":{"line":337,"column":118,"offset":10972}}}],"position":{"start":{"line":337,"column":109,"offset":10963},"end":{"line":337,"column":119,"offset":10973}}},{"type":"text","value":" behavior might be ","position":{"start":{"line":337,"column":119,"offset":10973},"end":{"line":337,"column":138,"offset":10992}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"breaking","position":{"start":{"line":337,"column":139,"offset":10993},"end":{"line":337,"column":147,"offset":11001}}}],"position":{"start":{"line":337,"column":138,"offset":10992},"end":{"line":337,"column":148,"offset":11002}}},{"type":"text","value":" changes for one or more of your existing clients. All of the following schema changes are potentially breaking changes:","position":{"start":{"line":337,"column":148,"offset":11002},"end":{"line":337,"column":268,"offset":11122}}}],"position":{"start":{"line":337,"column":1,"offset":10855},"end":{"line":337,"column":268,"offset":11122}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Removing a type or field","position":{"start":{"line":339,"column":3,"offset":11126},"end":{"line":339,"column":27,"offset":11150}}}],"position":{"start":{"line":339,"column":1,"offset":11124},"end":{"line":339,"column":27,"offset":11150}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Renaming a type or field","position":{"start":{"line":340,"column":3,"offset":11153},"end":{"line":340,"column":27,"offset":11177}}}],"position":{"start":{"line":340,"column":1,"offset":11151},"end":{"line":340,"column":27,"offset":11177}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Adding nullability to a field","position":{"start":{"line":341,"column":3,"offset":11180},"end":{"line":341,"column":32,"offset":11209}}}],"position":{"start":{"line":341,"column":1,"offset":11178},"end":{"line":341,"column":32,"offset":11209}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Removing a field's arguments","position":{"start":{"line":342,"column":3,"offset":11212},"end":{"line":342,"column":31,"offset":11240}}}],"position":{"start":{"line":342,"column":1,"offset":11210},"end":{"line":342,"column":31,"offset":11240}}},{"type":"text","value":"\n"}],"position":{"start":{"line":339,"column":1,"offset":11124},"end":{"line":342,"column":31,"offset":11240}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A graph management tool such as ","position":{"start":{"line":344,"column":1,"offset":11242},"end":{"line":344,"column":33,"offset":11274}}},{"type":"element","tagName":"a","properties":{"href":"https://studio.apollographql.com/"},"children":[{"type":"text","value":"Apollo Studio","position":{"start":{"line":344,"column":34,"offset":11275},"end":{"line":344,"column":47,"offset":11288}}}],"position":{"start":{"line":344,"column":33,"offset":11274},"end":{"line":344,"column":83,"offset":11324}}},{"type":"text","value":" helps you understand whether a potential schema change will impact any of your active clients. Studio also provides field-level performance metrics, schema history tracking, and advanced security via operation safelisting.","position":{"start":{"line":344,"column":83,"offset":11324},"end":{"line":344,"column":306,"offset":11547}}}],"position":{"start":{"line":344,"column":1,"offset":11242},"end":{"line":344,"column":306,"offset":11547}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"documentation-strings","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#documentation-strings","aria-label":"documentation strings permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Documentation strings","position":{"start":{"line":346,"column":4,"offset":11552},"end":{"line":346,"column":25,"offset":11573}}}],"position":{"start":{"line":346,"column":1,"offset":11549},"end":{"line":346,"column":25,"offset":11573}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"GraphQL's schema definition language (SDL) supports markdown-enabled documentation strings. These help consumers of your data graph discover fields and learn how to use them.","position":{"start":{"line":348,"column":1,"offset":11575},"end":{"line":348,"column":175,"offset":11749}}}],"position":{"start":{"line":348,"column":1,"offset":11575},"end":{"line":348,"column":175,"offset":11749}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The following snippet shows how to use both single-line string literals and multi-line blocks:","position":{"start":{"line":350,"column":1,"offset":11751},"end":{"line":350,"column":95,"offset":11845}}}],"position":{"start":{"line":350,"column":1,"offset":11751},"end":{"line":350,"column":95,"offset":11845}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token description string\">\"<span class=\"token language-markdown\">Description for the type</span>\"</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">MyObjectType</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token description string\">\"\"\"<span class=\"token language-markdown\">\n  Description for field\n  Supports **multi-line** description for your [API](http://example.com)!\n  </span>\"\"\"</span>\n  <span class=\"token attr-name\">myField</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span>\n\n  <span class=\"token property-query\">otherField</span><span class=\"token punctuation\">(</span>\n    <span class=\"token description string\">\"<span class=\"token language-markdown\">Description for argument</span>\"</span>\n    <span class=\"token attr-name\">arg</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">Int</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":352,"column":1,"offset":11847},"end":{"line":366,"column":4,"offset":12102}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A well-documented schema offers an enhanced development experience since GraphQL development tools (such as the\n","position":{"start":{"line":368,"column":1,"offset":12104},"end":{"line":369,"column":1,"offset":12216}}},{"type":"element","tagName":"a","properties":{"href":"https://marketplace.visualstudio.com/items?itemName=apollographql.vscode-apollo"},"children":[{"type":"text","value":"Apollo VS Code extension","position":{"start":{"line":369,"column":2,"offset":12217},"end":{"line":369,"column":26,"offset":12241}}}],"position":{"start":{"line":369,"column":1,"offset":12216},"end":{"line":369,"column":108,"offset":12323}}},{"type":"text","value":"\nand GraphQL Playground) auto-complete field names along with descriptions when they're provided. Furthermore, ","position":{"start":{"line":369,"column":108,"offset":12323},"end":{"line":370,"column":111,"offset":12434}}},{"type":"element","tagName":"a","properties":{"href":"https://studio.apollographql.com/"},"children":[{"type":"text","value":"Apollo Studio","position":{"start":{"line":370,"column":112,"offset":12435},"end":{"line":370,"column":125,"offset":12448}}}],"position":{"start":{"line":370,"column":111,"offset":12434},"end":{"line":370,"column":161,"offset":12484}}},{"type":"text","value":" displays descriptions alongside field-usage and performance details when using its metrics reporting and client-awareness features.","position":{"start":{"line":370,"column":161,"offset":12484},"end":{"line":370,"column":293,"offset":12616}}}],"position":{"start":{"line":368,"column":1,"offset":12104},"end":{"line":370,"column":293,"offset":12616}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"naming-conventions","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#naming-conventions","aria-label":"naming conventions permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Naming conventions","position":{"start":{"line":372,"column":4,"offset":12621},"end":{"line":372,"column":22,"offset":12639}}}],"position":{"start":{"line":372,"column":1,"offset":12618},"end":{"line":372,"column":22,"offset":12639}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The GraphQL specification is flexible and doesn't impose specific naming guidelines. However, it's helpful to establish a set of conventions to ensure consistency across your organization. We recommend the following:","position":{"start":{"line":374,"column":1,"offset":12641},"end":{"line":374,"column":217,"offset":12857}}}],"position":{"start":{"line":374,"column":1,"offset":12641},"end":{"line":374,"column":217,"offset":12857}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Field names","position":{"start":{"line":376,"column":5,"offset":12863},"end":{"line":376,"column":16,"offset":12874}}}],"position":{"start":{"line":376,"column":3,"offset":12861},"end":{"line":376,"column":18,"offset":12876}}},{"type":"text","value":" should use ","position":{"start":{"line":376,"column":18,"offset":12876},"end":{"line":376,"column":30,"offset":12888}}},{"type":"raw","value":"<code class=\"language-text\">camelCase</code>","position":{"start":{"line":376,"column":30,"offset":12888},"end":{"line":376,"column":41,"offset":12899}}},{"type":"text","value":". Many GraphQL clients are written in JavaScript, Java, Kotlin, or Swift, all of which recommend ","position":{"start":{"line":376,"column":41,"offset":12899},"end":{"line":376,"column":138,"offset":12996}}},{"type":"raw","value":"<code class=\"language-text\">camelCase</code>","position":{"start":{"line":376,"column":138,"offset":12996},"end":{"line":376,"column":149,"offset":13007}}},{"type":"text","value":" for variable names.","position":{"start":{"line":376,"column":149,"offset":13007},"end":{"line":376,"column":169,"offset":13027}}}],"position":{"start":{"line":376,"column":1,"offset":12859},"end":{"line":376,"column":169,"offset":13027}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Type names","position":{"start":{"line":377,"column":5,"offset":13032},"end":{"line":377,"column":15,"offset":13042}}}],"position":{"start":{"line":377,"column":3,"offset":13030},"end":{"line":377,"column":17,"offset":13044}}},{"type":"text","value":" should use ","position":{"start":{"line":377,"column":17,"offset":13044},"end":{"line":377,"column":29,"offset":13056}}},{"type":"raw","value":"<code class=\"language-text\">PascalCase</code>","position":{"start":{"line":377,"column":29,"offset":13056},"end":{"line":377,"column":41,"offset":13068}}},{"type":"text","value":". This matches how classes are defined in the languages mentioned above.","position":{"start":{"line":377,"column":41,"offset":13068},"end":{"line":377,"column":113,"offset":13140}}}],"position":{"start":{"line":377,"column":1,"offset":13028},"end":{"line":377,"column":113,"offset":13140}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Enum names","position":{"start":{"line":378,"column":5,"offset":13145},"end":{"line":378,"column":15,"offset":13155}}}],"position":{"start":{"line":378,"column":3,"offset":13143},"end":{"line":378,"column":17,"offset":13157}}},{"type":"text","value":" should use ","position":{"start":{"line":378,"column":17,"offset":13157},"end":{"line":378,"column":29,"offset":13169}}},{"type":"raw","value":"<code class=\"language-text\">PascalCase</code>","position":{"start":{"line":378,"column":29,"offset":13169},"end":{"line":378,"column":41,"offset":13181}}},{"type":"text","value":".","position":{"start":{"line":378,"column":41,"offset":13181},"end":{"line":378,"column":42,"offset":13182}}}],"position":{"start":{"line":378,"column":1,"offset":13141},"end":{"line":378,"column":42,"offset":13182}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Enum values","position":{"start":{"line":379,"column":5,"offset":13187},"end":{"line":379,"column":16,"offset":13198}}}],"position":{"start":{"line":379,"column":3,"offset":13185},"end":{"line":379,"column":18,"offset":13200}}},{"type":"text","value":" should use ","position":{"start":{"line":379,"column":18,"offset":13200},"end":{"line":379,"column":30,"offset":13212}}},{"type":"raw","value":"<code class=\"language-text\">ALL_CAPS</code>","position":{"start":{"line":379,"column":30,"offset":13212},"end":{"line":379,"column":40,"offset":13222}}},{"type":"text","value":", because they are similar to constants.","position":{"start":{"line":379,"column":40,"offset":13222},"end":{"line":379,"column":80,"offset":13262}}}],"position":{"start":{"line":379,"column":1,"offset":13183},"end":{"line":379,"column":80,"offset":13262}}},{"type":"text","value":"\n"}],"position":{"start":{"line":376,"column":1,"offset":12859},"end":{"line":379,"column":80,"offset":13262}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"These conventions help ensure that most clients don't need to define extra logic to transform the results returned by your server.","position":{"start":{"line":381,"column":1,"offset":13264},"end":{"line":381,"column":131,"offset":13394}}}],"position":{"start":{"line":381,"column":1,"offset":13264},"end":{"line":381,"column":131,"offset":13394}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"query-driven-schema-design","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#query-driven-schema-design","aria-label":"query driven schema design permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Query-driven schema design","position":{"start":{"line":383,"column":4,"offset":13399},"end":{"line":383,"column":30,"offset":13425}}}],"position":{"start":{"line":383,"column":1,"offset":13396},"end":{"line":383,"column":30,"offset":13425}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A GraphQL schema is most powerful when it's designed for the needs of the clients that will execute operations against it. Although you ","position":{"start":{"line":385,"column":1,"offset":13427},"end":{"line":385,"column":137,"offset":13563}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"can","position":{"start":{"line":385,"column":138,"offset":13564},"end":{"line":385,"column":141,"offset":13567}}}],"position":{"start":{"line":385,"column":137,"offset":13563},"end":{"line":385,"column":142,"offset":13568}}},{"type":"text","value":" structure your types so they match the structure of your back-end data stores, you don't have to! A single object type's fields can be populated with data from any number of different sources. ","position":{"start":{"line":385,"column":142,"offset":13568},"end":{"line":385,"column":336,"offset":13762}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Design your schema based on how data is used, not based on how it's stored.","position":{"start":{"line":385,"column":338,"offset":13764},"end":{"line":385,"column":413,"offset":13839}}}],"position":{"start":{"line":385,"column":336,"offset":13762},"end":{"line":385,"column":415,"offset":13841}}}],"position":{"start":{"line":385,"column":1,"offset":13427},"end":{"line":385,"column":415,"offset":13841}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If your data store includes a field or relationship that your clients don't need yet, omit it from your schema. It's easier and safer to add a new field to a schema than it is to remove an existing field that some of your clients are using.","position":{"start":{"line":387,"column":1,"offset":13843},"end":{"line":387,"column":241,"offset":14083}}}],"position":{"start":{"line":387,"column":1,"offset":13843},"end":{"line":387,"column":241,"offset":14083}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"example-of-a-query-driven-schema","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#example-of-a-query-driven-schema","aria-label":"example of a query driven schema permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Example of a query-driven schema","position":{"start":{"line":389,"column":5,"offset":14089},"end":{"line":389,"column":37,"offset":14121}}}],"position":{"start":{"line":389,"column":1,"offset":14085},"end":{"line":389,"column":37,"offset":14121}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's say we're creating a web app that lists upcoming events in our area. We want the app to show the name, date, and location of each event, along with the weather forecast for it.","position":{"start":{"line":391,"column":1,"offset":14123},"end":{"line":391,"column":183,"offset":14305}}}],"position":{"start":{"line":391,"column":1,"offset":14123},"end":{"line":391,"column":183,"offset":14305}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this case, we want our web app to be able to execute a query with a structure similar to the following:","position":{"start":{"line":393,"column":1,"offset":14307},"end":{"line":393,"column":107,"offset":14413}}}],"position":{"start":{"line":393,"column":1,"offset":14307},"end":{"line":393,"column":107,"offset":14413}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> <span class=\"token definition-query function\">EventList</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token object\">upcomingEvents</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">name</span>\n    <span class=\"token property\">date</span>\n    <span class=\"token object\">location</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">name</span>\n      <span class=\"token object\">weather</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">temperature</span>\n        <span class=\"token property\">description</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":395,"column":1,"offset":14415},"end":{"line":409,"column":4,"offset":14586}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Because we know this is the structure of data that would be helpful for our client, that can inform the structure of our schema:","position":{"start":{"line":411,"column":1,"offset":14588},"end":{"line":411,"column":129,"offset":14716}}}],"position":{"start":{"line":411,"column":1,"offset":14588},"end":{"line":411,"column":129,"offset":14716}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">upcomingEvents</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">Event</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Event</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span>\n  <span class=\"token attr-name\">date</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span>\n  <span class=\"token attr-name\">location</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Location</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Location</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span>\n  <span class=\"token attr-name\">weather</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">WeatherInfo</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">WeatherInfo</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">temperature</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">Float</span>\n  <span class=\"token attr-name\">description</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":413,"column":1,"offset":14718},"end":{"line":433,"column":4,"offset":14962}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As mentioned, each of these types can be populated with data from a different data source (or ","position":{"start":{"line":435,"column":1,"offset":14964},"end":{"line":435,"column":95,"offset":15058}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"multiple","position":{"start":{"line":435,"column":96,"offset":15059},"end":{"line":435,"column":104,"offset":15067}}}],"position":{"start":{"line":435,"column":95,"offset":15058},"end":{"line":435,"column":105,"offset":15068}}},{"type":"text","value":" data sources). For example, the ","position":{"start":{"line":435,"column":105,"offset":15068},"end":{"line":435,"column":138,"offset":15101}}},{"type":"raw","value":"<code class=\"language-text\">Event</code>","position":{"start":{"line":435,"column":138,"offset":15101},"end":{"line":435,"column":145,"offset":15108}}},{"type":"text","value":" type's ","position":{"start":{"line":435,"column":145,"offset":15108},"end":{"line":435,"column":153,"offset":15116}}},{"type":"raw","value":"<code class=\"language-text\">name</code>","position":{"start":{"line":435,"column":153,"offset":15116},"end":{"line":435,"column":159,"offset":15122}}},{"type":"text","value":" and ","position":{"start":{"line":435,"column":159,"offset":15122},"end":{"line":435,"column":164,"offset":15127}}},{"type":"raw","value":"<code class=\"language-text\">date</code>","position":{"start":{"line":435,"column":164,"offset":15127},"end":{"line":435,"column":170,"offset":15133}}},{"type":"text","value":" might be populated with data from our back-end database, whereas the ","position":{"start":{"line":435,"column":170,"offset":15133},"end":{"line":435,"column":240,"offset":15203}}},{"type":"raw","value":"<code class=\"language-text\">WeatherInfo</code>","position":{"start":{"line":435,"column":240,"offset":15203},"end":{"line":435,"column":253,"offset":15216}}},{"type":"text","value":" type might be populated with data from a third-party weather API.","position":{"start":{"line":435,"column":253,"offset":15216},"end":{"line":435,"column":319,"offset":15282}}}],"position":{"start":{"line":435,"column":1,"offset":14964},"end":{"line":435,"column":319,"offset":15282}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"designing-mutations","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#designing-mutations","aria-label":"designing mutations permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Designing mutations","position":{"start":{"line":437,"column":4,"offset":15287},"end":{"line":437,"column":23,"offset":15306}}}],"position":{"start":{"line":437,"column":1,"offset":15284},"end":{"line":437,"column":23,"offset":15306}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In GraphQL, it's ","position":{"start":{"line":439,"column":1,"offset":15308},"end":{"line":439,"column":18,"offset":15325}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"recommended","position":{"start":{"line":439,"column":19,"offset":15326},"end":{"line":439,"column":30,"offset":15337}}}],"position":{"start":{"line":439,"column":18,"offset":15325},"end":{"line":439,"column":31,"offset":15338}}},{"type":"text","value":" for every mutation's response to include the data that the mutation modified. This enables clients to obtain the latest persisted data without needing to send a followup query.","position":{"start":{"line":439,"column":31,"offset":15338},"end":{"line":439,"column":208,"offset":15515}}}],"position":{"start":{"line":439,"column":1,"offset":15308},"end":{"line":439,"column":208,"offset":15515}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A schema that supports updating the ","position":{"start":{"line":441,"column":1,"offset":15517},"end":{"line":441,"column":37,"offset":15553}}},{"type":"raw","value":"<code class=\"language-text\">email</code>","position":{"start":{"line":441,"column":37,"offset":15553},"end":{"line":441,"column":44,"offset":15560}}},{"type":"text","value":" of a ","position":{"start":{"line":441,"column":44,"offset":15560},"end":{"line":441,"column":50,"offset":15566}}},{"type":"raw","value":"<code class=\"language-text\">User</code>","position":{"start":{"line":441,"column":50,"offset":15566},"end":{"line":441,"column":56,"offset":15572}}},{"type":"text","value":" would include the following:","position":{"start":{"line":441,"column":56,"offset":15572},"end":{"line":441,"column":85,"offset":15601}}}],"position":{"start":{"line":441,"column":1,"offset":15517},"end":{"line":441,"column":85,"offset":15601}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Mutation</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># This mutation takes id and email parameters and responds with a User</span>\n  <span class=\"token attr-name\">updateUserEmail</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">ID</span><span class=\"token operator\">!</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">email</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">User</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">ID</span><span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">email</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":443,"column":1,"offset":15603},"end":{"line":454,"column":4,"offset":15815}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A client could then execute a mutation against the schema with the following structure:","position":{"start":{"line":456,"column":1,"offset":15817},"end":{"line":456,"column":88,"offset":15904}}}],"position":{"start":{"line":456,"column":1,"offset":15817},"end":{"line":456,"column":88,"offset":15904}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">mutation</span> <span class=\"token definition-mutation function\">updateMyUser</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property-query\">updateUserEmail</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">email</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"jane@example.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">id</span>\n    <span class=\"token property\">name</span>\n    <span class=\"token property\">email</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":458,"column":1,"offset":15906},"end":{"line":466,"column":4,"offset":16029}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After the GraphQL server executes the mutation and stores the new email address for the user, it responds to the client with the following:","position":{"start":{"line":468,"column":1,"offset":16031},"end":{"line":468,"column":140,"offset":16170}}}],"position":{"start":{"line":468,"column":1,"offset":16031},"end":{"line":468,"column":140,"offset":16170}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-json line-numbers\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"updateUserEmail\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Jane Doe\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"email\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"jane@example.com\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":470,"column":1,"offset":16172},"end":{"line":480,"column":4,"offset":16311}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Although it isn't ","position":{"start":{"line":482,"column":1,"offset":16313},"end":{"line":482,"column":19,"offset":16331}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"mandatory","position":{"start":{"line":482,"column":20,"offset":16332},"end":{"line":482,"column":29,"offset":16341}}}],"position":{"start":{"line":482,"column":19,"offset":16331},"end":{"line":482,"column":30,"offset":16342}}},{"type":"text","value":" for a mutation's response to include the modified object, doing so greatly improves the efficiency of client code. And as with queries, determining which mutations would be useful for your clients helps inform the structure of your schema.","position":{"start":{"line":482,"column":30,"offset":16342},"end":{"line":482,"column":270,"offset":16582}}}],"position":{"start":{"line":482,"column":1,"offset":16313},"end":{"line":482,"column":270,"offset":16582}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"structuring-mutation-responses","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#structuring-mutation-responses","aria-label":"structuring mutation responses permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Structuring mutation responses","position":{"start":{"line":484,"column":5,"offset":16588},"end":{"line":484,"column":35,"offset":16618}}}],"position":{"start":{"line":484,"column":1,"offset":16584},"end":{"line":484,"column":35,"offset":16618}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A single mutation can modify multiple types, or multiple instances of the ","position":{"start":{"line":486,"column":1,"offset":16620},"end":{"line":486,"column":75,"offset":16694}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"same","position":{"start":{"line":486,"column":76,"offset":16695},"end":{"line":486,"column":80,"offset":16699}}}],"position":{"start":{"line":486,"column":75,"offset":16694},"end":{"line":486,"column":81,"offset":16700}}},{"type":"text","value":" type. For example, a mutation that enables a user to \"like\" a blog post might increment the ","position":{"start":{"line":486,"column":81,"offset":16700},"end":{"line":486,"column":174,"offset":16793}}},{"type":"raw","value":"<code class=\"language-text\">likes</code>","position":{"start":{"line":486,"column":174,"offset":16793},"end":{"line":486,"column":181,"offset":16800}}},{"type":"text","value":" count for a ","position":{"start":{"line":486,"column":181,"offset":16800},"end":{"line":486,"column":194,"offset":16813}}},{"type":"raw","value":"<code class=\"language-text\">Post</code>","position":{"start":{"line":486,"column":194,"offset":16813},"end":{"line":486,"column":200,"offset":16819}}},{"type":"text","value":" ","position":{"start":{"line":486,"column":200,"offset":16819},"end":{"line":486,"column":201,"offset":16820}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"and","position":{"start":{"line":486,"column":202,"offset":16821},"end":{"line":486,"column":205,"offset":16824}}}],"position":{"start":{"line":486,"column":201,"offset":16820},"end":{"line":486,"column":206,"offset":16825}}},{"type":"text","value":" update the ","position":{"start":{"line":486,"column":206,"offset":16825},"end":{"line":486,"column":218,"offset":16837}}},{"type":"raw","value":"<code class=\"language-text\">likedPosts</code>","position":{"start":{"line":486,"column":218,"offset":16837},"end":{"line":486,"column":230,"offset":16849}}},{"type":"text","value":" list for the ","position":{"start":{"line":486,"column":230,"offset":16849},"end":{"line":486,"column":244,"offset":16863}}},{"type":"raw","value":"<code class=\"language-text\">User</code>","position":{"start":{"line":486,"column":244,"offset":16863},"end":{"line":486,"column":250,"offset":16869}}},{"type":"text","value":". This makes it less obvious what the structure of the mutation's response should look like.","position":{"start":{"line":486,"column":250,"offset":16869},"end":{"line":486,"column":342,"offset":16961}}}],"position":{"start":{"line":486,"column":1,"offset":16620},"end":{"line":486,"column":342,"offset":16961}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Additionally, mutations are much more likely than queries to cause errors, because they modify data. A mutation might even result in a ","position":{"start":{"line":488,"column":1,"offset":16963},"end":{"line":488,"column":136,"offset":17098}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"partial","position":{"start":{"line":488,"column":137,"offset":17099},"end":{"line":488,"column":144,"offset":17106}}}],"position":{"start":{"line":488,"column":136,"offset":17098},"end":{"line":488,"column":145,"offset":17107}}},{"type":"text","value":" error, in which it successfully modifies one piece of data and fails to modify another. Regardless of the type of error, it's important that the error is communicated back to the client in a consistent way.","position":{"start":{"line":488,"column":145,"offset":17107},"end":{"line":488,"column":352,"offset":17314}}}],"position":{"start":{"line":488,"column":1,"offset":16963},"end":{"line":488,"column":352,"offset":17314}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To help resolve both of these concerns, we recommend defining a ","position":{"start":{"line":490,"column":1,"offset":17316},"end":{"line":490,"column":65,"offset":17380}}},{"type":"raw","value":"<code class=\"language-text\">MutationResponse</code>","position":{"start":{"line":490,"column":65,"offset":17380},"end":{"line":490,"column":83,"offset":17398}}},{"type":"text","value":" interface in your schema, along with a collection of object types that ","position":{"start":{"line":490,"column":83,"offset":17398},"end":{"line":490,"column":155,"offset":17470}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"implement","position":{"start":{"line":490,"column":156,"offset":17471},"end":{"line":490,"column":165,"offset":17480}}}],"position":{"start":{"line":490,"column":155,"offset":17470},"end":{"line":490,"column":166,"offset":17481}}},{"type":"text","value":" that interface (one for each of your mutations).","position":{"start":{"line":490,"column":166,"offset":17481},"end":{"line":490,"column":215,"offset":17530}}}],"position":{"start":{"line":490,"column":1,"offset":17316},"end":{"line":490,"column":215,"offset":17530}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here's what the ","position":{"start":{"line":492,"column":1,"offset":17532},"end":{"line":492,"column":17,"offset":17548}}},{"type":"raw","value":"<code class=\"language-text\">MutationResponse</code>","position":{"start":{"line":492,"column":17,"offset":17548},"end":{"line":492,"column":35,"offset":17566}}},{"type":"text","value":" interface looks like:","position":{"start":{"line":492,"column":35,"offset":17566},"end":{"line":492,"column":57,"offset":17588}}}],"position":{"start":{"line":492,"column":1,"offset":17532},"end":{"line":492,"column":57,"offset":17588}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">MutationResponse</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">code</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">success</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">Boolean</span><span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">message</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":494,"column":1,"offset":17590},"end":{"line":500,"column":4,"offset":17690}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"And here's what an implementing object type looks like:","position":{"start":{"line":502,"column":1,"offset":17692},"end":{"line":502,"column":56,"offset":17747}}}],"position":{"start":{"line":502,"column":1,"offset":17692},"end":{"line":502,"column":56,"offset":17747}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">UpdateUserEmailMutationResponse</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">MutationResponse</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">code</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">success</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">Boolean</span><span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">message</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">user</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">User</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":504,"column":1,"offset":17749},"end":{"line":511,"column":4,"offset":17900}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Our ","position":{"start":{"line":513,"column":1,"offset":17902},"end":{"line":513,"column":5,"offset":17906}}},{"type":"raw","value":"<code class=\"language-text\">updateUserEmail</code>","position":{"start":{"line":513,"column":5,"offset":17906},"end":{"line":513,"column":22,"offset":17923}}},{"type":"text","value":" mutation would specify ","position":{"start":{"line":513,"column":22,"offset":17923},"end":{"line":513,"column":46,"offset":17947}}},{"type":"raw","value":"<code class=\"language-text\">UpdateUserEmailMutationResponse</code>","position":{"start":{"line":513,"column":46,"offset":17947},"end":{"line":513,"column":79,"offset":17980}}},{"type":"text","value":" as its return type (instead of ","position":{"start":{"line":513,"column":79,"offset":17980},"end":{"line":513,"column":111,"offset":18012}}},{"type":"raw","value":"<code class=\"language-text\">User</code>","position":{"start":{"line":513,"column":111,"offset":18012},"end":{"line":513,"column":117,"offset":18018}}},{"type":"text","value":"), and the structure of its response would be the following:","position":{"start":{"line":513,"column":117,"offset":18018},"end":{"line":513,"column":177,"offset":18078}}}],"position":{"start":{"line":513,"column":1,"offset":17902},"end":{"line":513,"column":177,"offset":18078}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-json line-numbers\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"updateUser\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"code\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"200\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"success\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"message\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"User email was successfully updated\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"user\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Jane Doe\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"email\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"jane@example.com\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":515,"column":1,"offset":18080},"end":{"line":530,"column":4,"offset":18344}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let’s break this down field by field:","position":{"start":{"line":532,"column":1,"offset":18346},"end":{"line":532,"column":38,"offset":18383}}}],"position":{"start":{"line":532,"column":1,"offset":18346},"end":{"line":532,"column":38,"offset":18383}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">code</code>","position":{"start":{"line":534,"column":3,"offset":18387},"end":{"line":534,"column":9,"offset":18393}}},{"type":"text","value":" is a string that represents the status of the data transfer. Think of it like an HTTP status code.","position":{"start":{"line":534,"column":9,"offset":18393},"end":{"line":534,"column":108,"offset":18492}}}],"position":{"start":{"line":534,"column":1,"offset":18385},"end":{"line":534,"column":108,"offset":18492}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">success</code>","position":{"start":{"line":535,"column":3,"offset":18495},"end":{"line":535,"column":12,"offset":18504}}},{"type":"text","value":" is a boolean that indicates whether the mutation was successful. This allows a coarse check by the client to know if there were failures.","position":{"start":{"line":535,"column":12,"offset":18504},"end":{"line":535,"column":150,"offset":18642}}}],"position":{"start":{"line":535,"column":1,"offset":18493},"end":{"line":535,"column":150,"offset":18642}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">message</code>","position":{"start":{"line":536,"column":3,"offset":18645},"end":{"line":536,"column":12,"offset":18654}}},{"type":"text","value":" is a human-readable string that describes the result of the mutation. It is intended to be used in the UI of the product.","position":{"start":{"line":536,"column":12,"offset":18654},"end":{"line":536,"column":134,"offset":18776}}}],"position":{"start":{"line":536,"column":1,"offset":18643},"end":{"line":536,"column":134,"offset":18776}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">user</code>","position":{"start":{"line":537,"column":3,"offset":18779},"end":{"line":537,"column":9,"offset":18785}}},{"type":"text","value":" is added by the implementing type ","position":{"start":{"line":537,"column":9,"offset":18785},"end":{"line":537,"column":44,"offset":18820}}},{"type":"raw","value":"<code class=\"language-text\">UpdateUserEmailMutationResponse</code>","position":{"start":{"line":537,"column":44,"offset":18820},"end":{"line":537,"column":77,"offset":18853}}},{"type":"text","value":" to return the newly updated user to the client.","position":{"start":{"line":537,"column":77,"offset":18853},"end":{"line":537,"column":125,"offset":18901}}}],"position":{"start":{"line":537,"column":1,"offset":18777},"end":{"line":537,"column":125,"offset":18901}}},{"type":"text","value":"\n"}],"position":{"start":{"line":534,"column":1,"offset":18385},"end":{"line":537,"column":125,"offset":18901}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If a mutation modifies ","position":{"start":{"line":539,"column":1,"offset":18903},"end":{"line":539,"column":24,"offset":18926}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"multiple","position":{"start":{"line":539,"column":25,"offset":18927},"end":{"line":539,"column":33,"offset":18935}}}],"position":{"start":{"line":539,"column":24,"offset":18926},"end":{"line":539,"column":34,"offset":18936}}},{"type":"text","value":" types (like our earlier example of \"liking\" a blog post), its implementing type can include a separate field for each type that's modified:","position":{"start":{"line":539,"column":34,"offset":18936},"end":{"line":539,"column":174,"offset":19076}}}],"position":{"start":{"line":539,"column":1,"offset":18903},"end":{"line":539,"column":174,"offset":19076}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">LikePostMutationResponse</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">MutationResponse</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">code</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">success</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">Boolean</span><span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">message</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">post</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Post</span>\n  <span class=\"token attr-name\">user</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">User</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":541,"column":1,"offset":19078},"end":{"line":549,"column":4,"offset":19235}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Because our hypothetical ","position":{"start":{"line":551,"column":1,"offset":19237},"end":{"line":551,"column":26,"offset":19262}}},{"type":"raw","value":"<code class=\"language-text\">likePost</code>","position":{"start":{"line":551,"column":26,"offset":19262},"end":{"line":551,"column":36,"offset":19272}}},{"type":"text","value":" mutation modifies fields on both a ","position":{"start":{"line":551,"column":36,"offset":19272},"end":{"line":551,"column":72,"offset":19308}}},{"type":"raw","value":"<code class=\"language-text\">Post</code>","position":{"start":{"line":551,"column":72,"offset":19308},"end":{"line":551,"column":78,"offset":19314}}},{"type":"text","value":" and a ","position":{"start":{"line":551,"column":78,"offset":19314},"end":{"line":551,"column":85,"offset":19321}}},{"type":"raw","value":"<code class=\"language-text\">User</code>","position":{"start":{"line":551,"column":85,"offset":19321},"end":{"line":551,"column":91,"offset":19327}}},{"type":"text","value":", its response object includes fields for both of those types. A response has the following structure:","position":{"start":{"line":551,"column":91,"offset":19327},"end":{"line":551,"column":193,"offset":19429}}}],"position":{"start":{"line":551,"column":1,"offset":19237},"end":{"line":551,"column":193,"offset":19429}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-json line-numbers\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"likePost\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"code\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"200\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"success\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"message\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Thanks!\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"post\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"123\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">5040</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"user\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"likedPosts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":553,"column":1,"offset":19431},"end":{"line":570,"column":4,"offset":19680}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Following this pattern provides a client with helpful, detailed information about the result of each requested operation. Equipped with this information, developers can better react to operation failures in their client code.","position":{"start":{"line":572,"column":1,"offset":19682},"end":{"line":572,"column":226,"offset":19907}}}],"position":{"start":{"line":572,"column":1,"offset":19682},"end":{"line":572,"column":226,"offset":19907}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":573,"column":1,"offset":19908}}}}