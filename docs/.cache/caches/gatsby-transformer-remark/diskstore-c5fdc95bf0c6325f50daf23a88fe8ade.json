{"expireTime":9007200901521026000,"key":"transformer-remark-markdown-html-ast-7d43dad2ab63f6ce638371ed6757db65-gatsby-remark-autolink-headersgatsby-remark-copy-linked-filesgatsby-remark-mermaidgatsby-remark-code-titlesgatsby-remark-prismjsgatsby-remark-rewrite-relative-linksgatsby-remark-check-links-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Health checks are often used by load balancers to determine if a server is available and ready to start serving traffic.  By default, Apollo Server provides a health check endpoint at ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":185,"offset":185}}},{"type":"raw","value":"<code class=\"language-text\">/.well-known/apollo/server-health</code>","position":{"start":{"line":2,"column":185,"offset":185},"end":{"line":2,"column":220,"offset":220}}},{"type":"text","value":" which returns a 200 status code if the server has started.","position":{"start":{"line":2,"column":220,"offset":220},"end":{"line":2,"column":279,"offset":279}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":279,"offset":279}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This basic health check may not be comprehensive enough for some applications and depending on individual circumstances, it may be beneficial to provide a more thorough implementation by defining an ","position":{"start":{"line":4,"column":1,"offset":281},"end":{"line":4,"column":200,"offset":480}}},{"type":"raw","value":"<code class=\"language-text\">onHealthCheck</code>","position":{"start":{"line":4,"column":200,"offset":480},"end":{"line":4,"column":215,"offset":495}}},{"type":"text","value":" function to the ","position":{"start":{"line":4,"column":215,"offset":495},"end":{"line":4,"column":232,"offset":512}}},{"type":"raw","value":"<code class=\"language-text\">ApolloServer</code>","position":{"start":{"line":4,"column":232,"offset":512},"end":{"line":4,"column":246,"offset":526}}},{"type":"text","value":" constructor options.  If defined, this ","position":{"start":{"line":4,"column":246,"offset":526},"end":{"line":4,"column":286,"offset":566}}},{"type":"raw","value":"<code class=\"language-text\">onHealthCheck</code>","position":{"start":{"line":4,"column":286,"offset":566},"end":{"line":4,"column":301,"offset":581}}},{"type":"text","value":" function should return a ","position":{"start":{"line":4,"column":301,"offset":581},"end":{"line":4,"column":327,"offset":607}}},{"type":"raw","value":"<code class=\"language-text\">Promise</code>","position":{"start":{"line":4,"column":327,"offset":607},"end":{"line":4,"column":336,"offset":616}}},{"type":"text","value":" which ","position":{"start":{"line":4,"column":336,"offset":616},"end":{"line":4,"column":343,"offset":623}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rejects","position":{"start":{"line":4,"column":344,"offset":624},"end":{"line":4,"column":351,"offset":631}}}],"position":{"start":{"line":4,"column":343,"offset":623},"end":{"line":4,"column":352,"offset":632}}},{"type":"text","value":" if there is an error, or ","position":{"start":{"line":4,"column":352,"offset":632},"end":{"line":4,"column":378,"offset":658}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"resolves","position":{"start":{"line":4,"column":379,"offset":659},"end":{"line":4,"column":387,"offset":667}}}],"position":{"start":{"line":4,"column":378,"offset":658},"end":{"line":4,"column":388,"offset":668}}},{"type":"text","value":" if the server is deemed ","position":{"start":{"line":4,"column":388,"offset":668},"end":{"line":4,"column":413,"offset":693}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"ready","position":{"start":{"line":4,"column":414,"offset":694},"end":{"line":4,"column":419,"offset":699}}}],"position":{"start":{"line":4,"column":413,"offset":693},"end":{"line":4,"column":420,"offset":700}}},{"type":"text","value":".  A ","position":{"start":{"line":4,"column":420,"offset":700},"end":{"line":4,"column":425,"offset":705}}},{"type":"raw","value":"<code class=\"language-text\">Promise</code>","position":{"start":{"line":4,"column":425,"offset":705},"end":{"line":4,"column":434,"offset":714}}},{"type":"text","value":" ","position":{"start":{"line":4,"column":434,"offset":714},"end":{"line":4,"column":435,"offset":715}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"rejection","position":{"start":{"line":4,"column":436,"offset":716},"end":{"line":4,"column":445,"offset":725}}}],"position":{"start":{"line":4,"column":435,"offset":715},"end":{"line":4,"column":446,"offset":726}}},{"type":"text","value":" will result in an HTTP status code of 503, and a ","position":{"start":{"line":4,"column":446,"offset":726},"end":{"line":4,"column":496,"offset":776}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"resolution","position":{"start":{"line":4,"column":497,"offset":777},"end":{"line":4,"column":507,"offset":787}}}],"position":{"start":{"line":4,"column":496,"offset":776},"end":{"line":4,"column":508,"offset":788}}},{"type":"text","value":" will result in an HTTP status code of 200, which is generally desired by most health-check tooling (e.g. Kubernetes, AWS, etc.).","position":{"start":{"line":4,"column":508,"offset":788},"end":{"line":4,"column":637,"offset":917}}}],"position":{"start":{"line":4,"column":1,"offset":281},"end":{"line":4,"column":637,"offset":917}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":6,"column":5,"offset":923},"end":{"line":6,"column":10,"offset":928}}}],"position":{"start":{"line":6,"column":3,"offset":921},"end":{"line":6,"column":12,"offset":930}}},{"type":"text","value":" Alternatively, the ","position":{"start":{"line":6,"column":12,"offset":930},"end":{"line":6,"column":32,"offset":950}}},{"type":"raw","value":"<code class=\"language-text\">onHealthCheck</code>","position":{"start":{"line":6,"column":32,"offset":950},"end":{"line":6,"column":47,"offset":965}}},{"type":"text","value":" can be defined as an ","position":{"start":{"line":6,"column":47,"offset":965},"end":{"line":6,"column":69,"offset":987}}},{"type":"raw","value":"<code class=\"language-text\">async</code>","position":{"start":{"line":6,"column":69,"offset":987},"end":{"line":6,"column":76,"offset":994}}},{"type":"text","value":" function which ","position":{"start":{"line":6,"column":76,"offset":994},"end":{"line":6,"column":92,"offset":1010}}},{"type":"raw","value":"<code class=\"language-text\">throw</code>","position":{"start":{"line":6,"column":92,"offset":1010},"end":{"line":6,"column":99,"offset":1017}}},{"type":"text","value":"s if it encounters an error and returns when conditions are considered normal.","position":{"start":{"line":6,"column":99,"offset":1017},"end":{"line":6,"column":177,"offset":1095}}}],"position":{"start":{"line":6,"column":3,"offset":921},"end":{"line":6,"column":177,"offset":1095}}},{"type":"text","value":"\n"}],"position":{"start":{"line":6,"column":1,"offset":919},"end":{"line":6,"column":177,"offset":1095}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> ApolloServer<span class=\"token punctuation\">,</span> gql <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'apollo-server'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Undefined for brevity.</span>\n<span class=\"token keyword\">const</span> typeDefs <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> resolvers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApolloServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  typeDefs<span class=\"token punctuation\">,</span>\n  resolvers<span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function-variable function\">onHealthCheck</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token comment\">// Replace the `true` in this conditional with more specific checks!</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nserver<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> url <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">🚀 Server ready at </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Try your health check at: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.well-known/apollo/server-health</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":8,"column":1,"offset":1097},"end":{"line":36,"column":4,"offset":1720}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":37,"column":1,"offset":1721}}}}