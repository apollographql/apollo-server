{"expireTime":9007200901521028000,"key":"transformer-remark-markdown-html-ast-30140797b950db71446d6fb080d43fff-gatsby-remark-autolink-headersgatsby-remark-copy-linked-filesgatsby-remark-mermaidgatsby-remark-code-titlesgatsby-remark-prismjsgatsby-remark-rewrite-relative-linksgatsby-remark-check-links-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The GraphQL specification includes default scalar types ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":57,"offset":57}}},{"type":"raw","value":"<code class=\"language-text\">Int</code>","position":{"start":{"line":2,"column":57,"offset":57},"end":{"line":2,"column":62,"offset":62}}},{"type":"text","value":", ","position":{"start":{"line":2,"column":62,"offset":62},"end":{"line":2,"column":64,"offset":64}}},{"type":"raw","value":"<code class=\"language-text\">Float</code>","position":{"start":{"line":2,"column":64,"offset":64},"end":{"line":2,"column":71,"offset":71}}},{"type":"text","value":", ","position":{"start":{"line":2,"column":71,"offset":71},"end":{"line":2,"column":73,"offset":73}}},{"type":"raw","value":"<code class=\"language-text\">String</code>","position":{"start":{"line":2,"column":73,"offset":73},"end":{"line":2,"column":81,"offset":81}}},{"type":"text","value":", ","position":{"start":{"line":2,"column":81,"offset":81},"end":{"line":2,"column":83,"offset":83}}},{"type":"raw","value":"<code class=\"language-text\">Boolean</code>","position":{"start":{"line":2,"column":83,"offset":83},"end":{"line":2,"column":92,"offset":92}}},{"type":"text","value":", and ","position":{"start":{"line":2,"column":92,"offset":92},"end":{"line":2,"column":98,"offset":98}}},{"type":"raw","value":"<code class=\"language-text\">ID</code>","position":{"start":{"line":2,"column":98,"offset":98},"end":{"line":2,"column":102,"offset":102}}},{"type":"text","value":". Although these scalars cover the majority of use cases, some applications need to support other atomic data types (such as ","position":{"start":{"line":2,"column":102,"offset":102},"end":{"line":2,"column":227,"offset":227}}},{"type":"raw","value":"<code class=\"language-text\">Date</code>","position":{"start":{"line":2,"column":227,"offset":227},"end":{"line":2,"column":233,"offset":233}}},{"type":"text","value":") or add validation to an existing type. To enable this, you can define custom scalar types.","position":{"start":{"line":2,"column":233,"offset":233},"end":{"line":2,"column":325,"offset":325}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":325,"offset":325}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"defining-a-custom-scalar","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#defining-a-custom-scalar","aria-label":"defining a custom scalar permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Defining a custom scalar","position":{"start":{"line":4,"column":4,"offset":330},"end":{"line":4,"column":28,"offset":354}}}],"position":{"start":{"line":4,"column":1,"offset":327},"end":{"line":4,"column":28,"offset":354}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To define a custom scalar, add it to your schema like so:","position":{"start":{"line":6,"column":1,"offset":356},"end":{"line":6,"column":58,"offset":413}}}],"position":{"start":{"line":6,"column":1,"offset":356},"end":{"line":6,"column":58,"offset":413}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">scalar</span> <span class=\"token class-name\">MyCustomScalar</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>","position":{"start":{"line":8,"column":1,"offset":415},"end":{"line":10,"column":4,"offset":451}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Object types in your schema can now contain fields of type ","position":{"start":{"line":12,"column":1,"offset":453},"end":{"line":12,"column":60,"offset":512}}},{"type":"raw","value":"<code class=\"language-text\">MyCustomScalar</code>","position":{"start":{"line":12,"column":60,"offset":512},"end":{"line":12,"column":76,"offset":528}}},{"type":"text","value":". However, Apollo Server still needs to know how to interact with values of this new scalar type.","position":{"start":{"line":12,"column":76,"offset":528},"end":{"line":12,"column":173,"offset":625}}}],"position":{"start":{"line":12,"column":1,"offset":453},"end":{"line":12,"column":173,"offset":625}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"defining-custom-scalar-logic","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#defining-custom-scalar-logic","aria-label":"defining custom scalar logic permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Defining custom scalar logic","position":{"start":{"line":14,"column":4,"offset":630},"end":{"line":14,"column":32,"offset":658}}}],"position":{"start":{"line":14,"column":1,"offset":627},"end":{"line":14,"column":32,"offset":658}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After you define a custom scalar type, you need to define how Apollo Server interacts with it. In particular, you need to define:","position":{"start":{"line":16,"column":1,"offset":660},"end":{"line":16,"column":130,"offset":789}}}],"position":{"start":{"line":16,"column":1,"offset":660},"end":{"line":16,"column":130,"offset":789}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"How the scalar's value is represented in your backend","position":{"start":{"line":18,"column":3,"offset":793},"end":{"line":18,"column":56,"offset":846}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"This is often the representation used by the driver for your backing data store.","position":{"start":{"line":19,"column":8,"offset":854},"end":{"line":19,"column":88,"offset":934}}}],"position":{"start":{"line":19,"column":7,"offset":853},"end":{"line":19,"column":89,"offset":935}}}],"position":{"start":{"line":19,"column":5,"offset":851},"end":{"line":19,"column":89,"offset":935}}},{"type":"text","value":"\n"}],"position":{"start":{"line":19,"column":5,"offset":851},"end":{"line":19,"column":89,"offset":935}}},{"type":"text","value":"\n"}],"position":{"start":{"line":18,"column":1,"offset":791},"end":{"line":19,"column":89,"offset":935}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"How the value's back-end representation is ","position":{"start":{"line":20,"column":3,"offset":938},"end":{"line":20,"column":46,"offset":981}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"serialized","position":{"start":{"line":20,"column":48,"offset":983},"end":{"line":20,"column":58,"offset":993}}}],"position":{"start":{"line":20,"column":46,"offset":981},"end":{"line":20,"column":60,"offset":995}}},{"type":"text","value":" to a JSON-compatible type","position":{"start":{"line":20,"column":60,"offset":995},"end":{"line":20,"column":86,"offset":1021}}}],"position":{"start":{"line":20,"column":1,"offset":936},"end":{"line":20,"column":86,"offset":1021}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"How the JSON-compatible representation is ","position":{"start":{"line":21,"column":3,"offset":1024},"end":{"line":21,"column":45,"offset":1066}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"deserialized","position":{"start":{"line":21,"column":47,"offset":1068},"end":{"line":21,"column":59,"offset":1080}}}],"position":{"start":{"line":21,"column":45,"offset":1066},"end":{"line":21,"column":61,"offset":1082}}},{"type":"text","value":" to the back-end representation","position":{"start":{"line":21,"column":61,"offset":1082},"end":{"line":21,"column":92,"offset":1113}}}],"position":{"start":{"line":21,"column":1,"offset":1022},"end":{"line":21,"column":92,"offset":1113}}},{"type":"text","value":"\n"}],"position":{"start":{"line":18,"column":1,"offset":791},"end":{"line":21,"column":92,"offset":1113}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You define these interactions in an instance of the ","position":{"start":{"line":23,"column":1,"offset":1115},"end":{"line":23,"column":53,"offset":1167}}},{"type":"element","tagName":"a","properties":{"href":"http://graphql.org/graphql-js/type/#graphqlscalartype"},"children":[{"type":"raw","value":"<code class=\"language-text\">GraphQLScalarType</code>","position":{"start":{"line":23,"column":54,"offset":1168},"end":{"line":23,"column":73,"offset":1187}}}],"position":{"start":{"line":23,"column":53,"offset":1167},"end":{"line":23,"column":129,"offset":1243}}},{"type":"text","value":" class.","position":{"start":{"line":23,"column":129,"offset":1243},"end":{"line":23,"column":136,"offset":1250}}}],"position":{"start":{"line":23,"column":1,"offset":1115},"end":{"line":23,"column":136,"offset":1250}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For more information about the ","position":{"start":{"line":25,"column":3,"offset":1254},"end":{"line":25,"column":34,"offset":1285}}},{"type":"raw","value":"<code class=\"language-text\">graphql</code>","position":{"start":{"line":25,"column":34,"offset":1285},"end":{"line":25,"column":43,"offset":1294}}},{"type":"text","value":" library's type system, see the ","position":{"start":{"line":25,"column":43,"offset":1294},"end":{"line":25,"column":75,"offset":1326}}},{"type":"element","tagName":"a","properties":{"href":"http://graphql.org/graphql-js/type/"},"children":[{"type":"text","value":"official documentation","position":{"start":{"line":25,"column":76,"offset":1327},"end":{"line":25,"column":98,"offset":1349}}}],"position":{"start":{"line":25,"column":75,"offset":1326},"end":{"line":25,"column":136,"offset":1387}}},{"type":"text","value":".","position":{"start":{"line":25,"column":136,"offset":1387},"end":{"line":25,"column":137,"offset":1388}}}],"position":{"start":{"line":25,"column":3,"offset":1254},"end":{"line":25,"column":137,"offset":1388}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":1,"offset":1252},"end":{"line":25,"column":137,"offset":1388}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"example-the-date-scalar","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#example-the-date-scalar","aria-label":"example the date scalar permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Example: The ","position":{"start":{"line":27,"column":4,"offset":1393},"end":{"line":27,"column":17,"offset":1406}}},{"type":"raw","value":"<code class=\"language-text\">Date</code>","position":{"start":{"line":27,"column":17,"offset":1406},"end":{"line":27,"column":23,"offset":1412}}},{"type":"text","value":" scalar","position":{"start":{"line":27,"column":23,"offset":1412},"end":{"line":27,"column":30,"offset":1419}}}],"position":{"start":{"line":27,"column":1,"offset":1390},"end":{"line":27,"column":30,"offset":1419}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The following ","position":{"start":{"line":29,"column":1,"offset":1421},"end":{"line":29,"column":15,"offset":1435}}},{"type":"raw","value":"<code class=\"language-text\">GraphQLScalarType</code>","position":{"start":{"line":29,"column":15,"offset":1435},"end":{"line":29,"column":34,"offset":1454}}},{"type":"text","value":" object defines interactions for a custom scalar that represents a date (this is one of the most commonly implemented custom scalars). It assumes that our backend represents a date with the ","position":{"start":{"line":29,"column":34,"offset":1454},"end":{"line":29,"column":224,"offset":1644}}},{"type":"raw","value":"<code class=\"language-text\">Date</code>","position":{"start":{"line":29,"column":224,"offset":1644},"end":{"line":29,"column":230,"offset":1650}}},{"type":"text","value":" JavaScript object.","position":{"start":{"line":29,"column":230,"offset":1650},"end":{"line":29,"column":249,"offset":1669}}}],"position":{"start":{"line":29,"column":1,"offset":1421},"end":{"line":29,"column":249,"offset":1669}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> GraphQLScalarType<span class=\"token punctuation\">,</span> Kind <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'graphql'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> dateScalar <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GraphQLScalarType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Date'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">description</span><span class=\"token operator\">:</span> <span class=\"token string\">'Date custom scalar type'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Convert outgoing Date to integer for JSON</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">parseValue</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Convert incoming integer to Date</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">parseLiteral</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ast</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ast<span class=\"token punctuation\">.</span>kind <span class=\"token operator\">===</span> Kind<span class=\"token punctuation\">.</span><span class=\"token constant\">INT</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>ast<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Convert hard-coded AST string to integer and then to Date</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Invalid hard-coded value (not an integer)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":31,"column":1,"offset":1671},"end":{"line":50,"column":4,"offset":2269}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This initialization defines the following methods:","position":{"start":{"line":52,"column":1,"offset":2271},"end":{"line":52,"column":51,"offset":2321}}}],"position":{"start":{"line":52,"column":1,"offset":2271},"end":{"line":52,"column":51,"offset":2321}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">serialize</code>","position":{"start":{"line":54,"column":3,"offset":2325},"end":{"line":54,"column":14,"offset":2336}}}],"position":{"start":{"line":54,"column":1,"offset":2323},"end":{"line":54,"column":14,"offset":2336}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">parseValue</code>","position":{"start":{"line":55,"column":3,"offset":2339},"end":{"line":55,"column":15,"offset":2351}}}],"position":{"start":{"line":55,"column":1,"offset":2337},"end":{"line":55,"column":15,"offset":2351}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">parseLiteral</code>","position":{"start":{"line":56,"column":3,"offset":2354},"end":{"line":56,"column":17,"offset":2368}}}],"position":{"start":{"line":56,"column":1,"offset":2352},"end":{"line":56,"column":17,"offset":2368}}},{"type":"text","value":"\n"}],"position":{"start":{"line":54,"column":1,"offset":2323},"end":{"line":56,"column":17,"offset":2368}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Together, these methods describe how Apollo Server interacts with the scalar in every scenario.","position":{"start":{"line":58,"column":1,"offset":2370},"end":{"line":58,"column":96,"offset":2465}}}],"position":{"start":{"line":58,"column":1,"offset":2370},"end":{"line":58,"column":96,"offset":2465}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"serialize","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#serialize","aria-label":"serialize permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"raw","value":"<code class=\"language-text\">serialize</code>","position":{"start":{"line":60,"column":5,"offset":2471},"end":{"line":60,"column":16,"offset":2482}}}],"position":{"start":{"line":60,"column":1,"offset":2467},"end":{"line":60,"column":16,"offset":2482}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":62,"column":1,"offset":2484},"end":{"line":62,"column":5,"offset":2488}}},{"type":"raw","value":"<code class=\"language-text\">serialize</code>","position":{"start":{"line":62,"column":5,"offset":2488},"end":{"line":62,"column":16,"offset":2499}}},{"type":"text","value":" method converts the scalar's back-end representation to a JSON-compatible format so Apollo Server can include it in an operation response.","position":{"start":{"line":62,"column":16,"offset":2499},"end":{"line":62,"column":155,"offset":2638}}}],"position":{"start":{"line":62,"column":1,"offset":2484},"end":{"line":62,"column":155,"offset":2638}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the example above, the ","position":{"start":{"line":64,"column":1,"offset":2640},"end":{"line":64,"column":27,"offset":2666}}},{"type":"raw","value":"<code class=\"language-text\">Date</code>","position":{"start":{"line":64,"column":27,"offset":2666},"end":{"line":64,"column":33,"offset":2672}}},{"type":"text","value":" scalar is represented on the backend by the ","position":{"start":{"line":64,"column":33,"offset":2672},"end":{"line":64,"column":78,"offset":2717}}},{"type":"raw","value":"<code class=\"language-text\">Date</code>","position":{"start":{"line":64,"column":78,"offset":2717},"end":{"line":64,"column":84,"offset":2723}}},{"type":"text","value":" JavaScript object. When we send a ","position":{"start":{"line":64,"column":84,"offset":2723},"end":{"line":64,"column":119,"offset":2758}}},{"type":"raw","value":"<code class=\"language-text\">Date</code>","position":{"start":{"line":64,"column":119,"offset":2758},"end":{"line":64,"column":125,"offset":2764}}},{"type":"text","value":" scalar in a GraphQL response, we serialize it as the integer value returned by the ","position":{"start":{"line":64,"column":125,"offset":2764},"end":{"line":64,"column":209,"offset":2848}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime"},"children":[{"type":"raw","value":"<code class=\"language-text\">getTime</code>","position":{"start":{"line":64,"column":210,"offset":2849},"end":{"line":64,"column":219,"offset":2858}}},{"type":"text","value":" function","position":{"start":{"line":64,"column":219,"offset":2858},"end":{"line":64,"column":228,"offset":2867}}}],"position":{"start":{"line":64,"column":209,"offset":2848},"end":{"line":64,"column":324,"offset":2963}}},{"type":"text","value":" of a JavaScript ","position":{"start":{"line":64,"column":324,"offset":2963},"end":{"line":64,"column":341,"offset":2980}}},{"type":"raw","value":"<code class=\"language-text\">Date</code>","position":{"start":{"line":64,"column":341,"offset":2980},"end":{"line":64,"column":347,"offset":2986}}},{"type":"text","value":" object.","position":{"start":{"line":64,"column":347,"offset":2986},"end":{"line":64,"column":355,"offset":2994}}}],"position":{"start":{"line":64,"column":1,"offset":2640},"end":{"line":64,"column":355,"offset":2994}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that Apollo Client cannot automatically interpret custom scalars (","position":{"start":{"line":66,"column":3,"offset":2998},"end":{"line":66,"column":74,"offset":3069}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/apollographql/apollo-feature-requests/issues/2"},"children":[{"type":"text","value":"see issue","position":{"start":{"line":66,"column":75,"offset":3070},"end":{"line":66,"column":84,"offset":3079}}}],"position":{"start":{"line":66,"column":74,"offset":3069},"end":{"line":66,"column":152,"offset":3147}}},{"type":"text","value":"), so your client must define custom logic to deserialize this value as needed.","position":{"start":{"line":66,"column":152,"offset":3147},"end":{"line":66,"column":231,"offset":3226}}}],"position":{"start":{"line":66,"column":3,"offset":2998},"end":{"line":66,"column":231,"offset":3226}}},{"type":"text","value":"\n"}],"position":{"start":{"line":66,"column":1,"offset":2996},"end":{"line":66,"column":231,"offset":3226}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"parsevalue","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#parsevalue","aria-label":"parsevalue permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"raw","value":"<code class=\"language-text\">parseValue</code>","position":{"start":{"line":68,"column":5,"offset":3232},"end":{"line":68,"column":17,"offset":3244}}}],"position":{"start":{"line":68,"column":1,"offset":3228},"end":{"line":68,"column":17,"offset":3244}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":70,"column":1,"offset":3246},"end":{"line":70,"column":5,"offset":3250}}},{"type":"raw","value":"<code class=\"language-text\">parseValue</code>","position":{"start":{"line":70,"column":5,"offset":3250},"end":{"line":70,"column":17,"offset":3262}}},{"type":"text","value":" method converts the scalar's ","position":{"start":{"line":70,"column":17,"offset":3262},"end":{"line":70,"column":47,"offset":3292}}},{"type":"raw","value":"<code class=\"language-text\">serialize</code>","position":{"start":{"line":70,"column":47,"offset":3292},"end":{"line":70,"column":58,"offset":3303}}},{"type":"text","value":"d JSON value to its back-end representation before it's added to a resolver's ","position":{"start":{"line":70,"column":58,"offset":3303},"end":{"line":70,"column":136,"offset":3381}}},{"type":"raw","value":"<code class=\"language-text\">args</code>","position":{"start":{"line":70,"column":136,"offset":3381},"end":{"line":70,"column":142,"offset":3387}}},{"type":"text","value":".","position":{"start":{"line":70,"column":142,"offset":3387},"end":{"line":70,"column":143,"offset":3388}}}],"position":{"start":{"line":70,"column":1,"offset":3246},"end":{"line":70,"column":143,"offset":3388}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Apollo Server calls this method when the scalar is provided by a client as a ","position":{"start":{"line":72,"column":1,"offset":3390},"end":{"line":72,"column":78,"offset":3467}}},{"type":"element","tagName":"a","properties":{"href":"https://graphql.org/learn/queries/#variables"},"children":[{"type":"text","value":"GraphQL variable","position":{"start":{"line":72,"column":79,"offset":3468},"end":{"line":72,"column":95,"offset":3484}}}],"position":{"start":{"line":72,"column":78,"offset":3467},"end":{"line":72,"column":142,"offset":3531}}},{"type":"text","value":" for an argument. (When a scalar is provided as a hard-coded argument in the operation string, ","position":{"start":{"line":72,"column":142,"offset":3531},"end":{"line":72,"column":237,"offset":3626}}},{"type":"element","tagName":"a","properties":{"href":"#parseliteral"},"children":[{"type":"raw","value":"<code class=\"language-text\">parseLiteral</code>","position":{"start":{"line":72,"column":238,"offset":3627},"end":{"line":72,"column":252,"offset":3641}}}],"position":{"start":{"line":72,"column":237,"offset":3626},"end":{"line":72,"column":268,"offset":3657}}},{"type":"text","value":" is called instead.)","position":{"start":{"line":72,"column":268,"offset":3657},"end":{"line":72,"column":288,"offset":3677}}}],"position":{"start":{"line":72,"column":1,"offset":3390},"end":{"line":72,"column":288,"offset":3677}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"parseliteral","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#parseliteral","aria-label":"parseliteral permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"raw","value":"<code class=\"language-text\">parseLiteral</code>","position":{"start":{"line":74,"column":5,"offset":3683},"end":{"line":74,"column":19,"offset":3697}}}],"position":{"start":{"line":74,"column":1,"offset":3679},"end":{"line":74,"column":19,"offset":3697}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When an incoming query string includes the scalar as a hard-coded argument value, that value is part of the query document's abstract syntax tree (AST). Apollo Server calls the ","position":{"start":{"line":76,"column":1,"offset":3699},"end":{"line":76,"column":178,"offset":3876}}},{"type":"raw","value":"<code class=\"language-text\">parseLiteral</code>","position":{"start":{"line":76,"column":178,"offset":3876},"end":{"line":76,"column":192,"offset":3890}}},{"type":"text","value":" method to convert the value's AST representation (which is always a string) to the scalar's back-end representation.","position":{"start":{"line":76,"column":192,"offset":3890},"end":{"line":76,"column":309,"offset":4007}}}],"position":{"start":{"line":76,"column":1,"offset":3699},"end":{"line":76,"column":309,"offset":4007}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In ","position":{"start":{"line":78,"column":1,"offset":4009},"end":{"line":78,"column":4,"offset":4012}}},{"type":"element","tagName":"a","properties":{"href":"#example-the-date-scalar"},"children":[{"type":"text","value":"the example above","position":{"start":{"line":78,"column":5,"offset":4013},"end":{"line":78,"column":22,"offset":4030}}}],"position":{"start":{"line":78,"column":4,"offset":4012},"end":{"line":78,"column":49,"offset":4057}}},{"type":"text","value":", ","position":{"start":{"line":78,"column":49,"offset":4057},"end":{"line":78,"column":51,"offset":4059}}},{"type":"raw","value":"<code class=\"language-text\">parseLiteral</code>","position":{"start":{"line":78,"column":51,"offset":4059},"end":{"line":78,"column":65,"offset":4073}}},{"type":"text","value":" converts the AST value from a string to an integer, and ","position":{"start":{"line":78,"column":65,"offset":4073},"end":{"line":78,"column":122,"offset":4130}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"then","position":{"start":{"line":78,"column":123,"offset":4131},"end":{"line":78,"column":127,"offset":4135}}}],"position":{"start":{"line":78,"column":122,"offset":4130},"end":{"line":78,"column":128,"offset":4136}}},{"type":"text","value":" converts from integer to ","position":{"start":{"line":78,"column":128,"offset":4136},"end":{"line":78,"column":154,"offset":4162}}},{"type":"raw","value":"<code class=\"language-text\">Date</code>","position":{"start":{"line":78,"column":154,"offset":4162},"end":{"line":78,"column":160,"offset":4168}}},{"type":"text","value":" to match the result of ","position":{"start":{"line":78,"column":160,"offset":4168},"end":{"line":78,"column":184,"offset":4192}}},{"type":"raw","value":"<code class=\"language-text\">parseValue</code>","position":{"start":{"line":78,"column":184,"offset":4192},"end":{"line":78,"column":196,"offset":4204}}},{"type":"text","value":".","position":{"start":{"line":78,"column":196,"offset":4204},"end":{"line":78,"column":197,"offset":4205}}}],"position":{"start":{"line":78,"column":1,"offset":4009},"end":{"line":78,"column":197,"offset":4205}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"providing-custom-scalars-to-apollo-server","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#providing-custom-scalars-to-apollo-server","aria-label":"providing custom scalars to apollo server permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Providing custom scalars to Apollo Server","position":{"start":{"line":80,"column":4,"offset":4210},"end":{"line":80,"column":45,"offset":4251}}}],"position":{"start":{"line":80,"column":1,"offset":4207},"end":{"line":80,"column":45,"offset":4251}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After you define your ","position":{"start":{"line":82,"column":1,"offset":4253},"end":{"line":82,"column":23,"offset":4275}}},{"type":"raw","value":"<code class=\"language-text\">GraphQLScalarType</code>","position":{"start":{"line":82,"column":23,"offset":4275},"end":{"line":82,"column":42,"offset":4294}}},{"type":"text","value":" instance, you include it in the same ","position":{"start":{"line":82,"column":42,"offset":4294},"end":{"line":82,"column":80,"offset":4332}}},{"type":"element","tagName":"a","properties":{"href":"/v2/data/resolvers/#defining-a-resolver"},"children":[{"type":"text","value":"resolver map","position":{"start":{"line":82,"column":81,"offset":4333},"end":{"line":82,"column":93,"offset":4345}}}],"position":{"start":{"line":82,"column":80,"offset":4332},"end":{"line":82,"column":134,"offset":4386}}},{"type":"text","value":" that contains resolvers for your schema's other types and fields:","position":{"start":{"line":82,"column":134,"offset":4386},"end":{"line":82,"column":200,"offset":4452}}}],"position":{"start":{"line":82,"column":1,"offset":4253},"end":{"line":82,"column":200,"offset":4452}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> ApolloServer<span class=\"token punctuation\">,</span> gql <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'apollo-server'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> GraphQLScalarType<span class=\"token punctuation\">,</span> Kind <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'graphql'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> typeDefs <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"></span>\n<span class=\"token string\">  scalar Date</span>\n<span class=\"token string\"></span>\n<span class=\"token string\">  type Event {</span>\n<span class=\"token string\">    id: ID!</span>\n<span class=\"token string\">    date: Date!</span>\n<span class=\"token string\">  }</span>\n<span class=\"token string\"></span>\n<span class=\"token string\">  type Query {</span>\n<span class=\"token string\">    events: [Event!]</span>\n<span class=\"token string\">  }</span>\n<span class=\"token string\"></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> dateScalar <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GraphQLScalarType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// See definition above</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> resolvers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token literal-property property\">Date</span><span class=\"token operator\">:</span> dateScalar</span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// ...other resolver definitions...</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">const</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApolloServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  typeDefs<span class=\"token punctuation\">,</span>\n  resolvers\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":84,"column":1,"offset":4454},"end":{"line":114,"column":4,"offset":4929}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"example-restricting-integers-to-odd-values","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#example-restricting-integers-to-odd-values","aria-label":"example restricting integers to odd values permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Example: Restricting integers to odd values","position":{"start":{"line":116,"column":4,"offset":4934},"end":{"line":116,"column":47,"offset":4977}}}],"position":{"start":{"line":116,"column":1,"offset":4931},"end":{"line":116,"column":47,"offset":4977}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this example, we create a custom scalar called ","position":{"start":{"line":118,"column":1,"offset":4979},"end":{"line":118,"column":51,"offset":5029}}},{"type":"raw","value":"<code class=\"language-text\">Odd</code>","position":{"start":{"line":118,"column":51,"offset":5029},"end":{"line":118,"column":56,"offset":5034}}},{"type":"text","value":" that can only contain odd integers:","position":{"start":{"line":118,"column":56,"offset":5034},"end":{"line":118,"column":92,"offset":5070}}}],"position":{"start":{"line":118,"column":1,"offset":4979},"end":{"line":118,"column":92,"offset":5070}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> ApolloServer<span class=\"token punctuation\">,</span> gql <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'apollo-server'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> GraphQLScalarType<span class=\"token punctuation\">,</span> Kind <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'graphql'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Basic schema</span>\n<span class=\"token keyword\">const</span> typeDefs <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"></span>\n<span class=\"token string\">  scalar Odd</span>\n<span class=\"token string\"></span>\n<span class=\"token string\">  type MyType {</span>\n<span class=\"token string\">    oddValue: Odd</span>\n<span class=\"token string\">  }</span>\n<span class=\"token string\"></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Validation function</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">oddValue</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> value <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">===</span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> value <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> resolvers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token literal-property property\">Odd</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GraphQLScalarType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Odd'</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token literal-property property\">description</span><span class=\"token operator\">:</span> <span class=\"token string\">'Odd custom scalar type'</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token literal-property property\">parseValue</span><span class=\"token operator\">:</span> oddValue<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token literal-property property\">serialize</span><span class=\"token operator\">:</span> oddValue<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">parseLiteral</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ast</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ast<span class=\"token punctuation\">.</span>kind <span class=\"token operator\">===</span> Kind<span class=\"token punctuation\">.</span><span class=\"token constant\">INT</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token keyword\">return</span> <span class=\"token function\">oddValue</span><span class=\"token punctuation\">(</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>ast<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApolloServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> typeDefs<span class=\"token punctuation\">,</span> resolvers <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nserver<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> url <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">🚀 Server ready at </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":120,"column":1,"offset":5072},"end":{"line":158,"column":4,"offset":5846}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"importing-a-third-party-custom-scalar","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#importing-a-third-party-custom-scalar","aria-label":"importing a third party custom scalar permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Importing a third-party custom scalar","position":{"start":{"line":160,"column":4,"offset":5851},"end":{"line":160,"column":41,"offset":5888}}}],"position":{"start":{"line":160,"column":1,"offset":5848},"end":{"line":160,"column":41,"offset":5888}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If another library defines a custom scalar, you can import it and use it just like any other symbol.","position":{"start":{"line":162,"column":1,"offset":5890},"end":{"line":162,"column":101,"offset":5990}}}],"position":{"start":{"line":162,"column":1,"offset":5890},"end":{"line":162,"column":101,"offset":5990}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example, the ","position":{"start":{"line":164,"column":1,"offset":5992},"end":{"line":164,"column":18,"offset":6009}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/taion/graphql-type-json"},"children":[{"type":"raw","value":"<code class=\"language-text\">graphql-type-json</code>","position":{"start":{"line":164,"column":19,"offset":6010},"end":{"line":164,"column":38,"offset":6029}}}],"position":{"start":{"line":164,"column":18,"offset":6009},"end":{"line":164,"column":83,"offset":6074}}},{"type":"text","value":" package defines the ","position":{"start":{"line":164,"column":83,"offset":6074},"end":{"line":164,"column":104,"offset":6095}}},{"type":"raw","value":"<code class=\"language-text\">GraphQLJSON</code>","position":{"start":{"line":164,"column":104,"offset":6095},"end":{"line":164,"column":117,"offset":6108}}},{"type":"text","value":" object, which is an instance of ","position":{"start":{"line":164,"column":117,"offset":6108},"end":{"line":164,"column":150,"offset":6141}}},{"type":"raw","value":"<code class=\"language-text\">GraphQLScalarType</code>","position":{"start":{"line":164,"column":150,"offset":6141},"end":{"line":164,"column":169,"offset":6160}}},{"type":"text","value":". You can use this object to define a ","position":{"start":{"line":164,"column":169,"offset":6160},"end":{"line":164,"column":207,"offset":6198}}},{"type":"raw","value":"<code class=\"language-text\">JSON</code>","position":{"start":{"line":164,"column":207,"offset":6198},"end":{"line":164,"column":213,"offset":6204}}},{"type":"text","value":" scalar that accepts any value that is valid JSON.","position":{"start":{"line":164,"column":213,"offset":6204},"end":{"line":164,"column":263,"offset":6254}}}],"position":{"start":{"line":164,"column":1,"offset":5992},"end":{"line":164,"column":263,"offset":6254}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"First, install the library:","position":{"start":{"line":166,"column":1,"offset":6256},"end":{"line":166,"column":28,"offset":6283}}}],"position":{"start":{"line":166,"column":1,"offset":6256},"end":{"line":166,"column":28,"offset":6283}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> graphql-type-json</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>","position":{"start":{"line":168,"column":1,"offset":6285},"end":{"line":170,"column":4,"offset":6329}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Then ","position":{"start":{"line":172,"column":1,"offset":6331},"end":{"line":172,"column":6,"offset":6336}}},{"type":"raw","value":"<code class=\"language-text\">require</code>","position":{"start":{"line":172,"column":6,"offset":6336},"end":{"line":172,"column":15,"offset":6345}}},{"type":"text","value":" the ","position":{"start":{"line":172,"column":15,"offset":6345},"end":{"line":172,"column":20,"offset":6350}}},{"type":"raw","value":"<code class=\"language-text\">GraphQLJSON</code>","position":{"start":{"line":172,"column":20,"offset":6350},"end":{"line":172,"column":33,"offset":6363}}},{"type":"text","value":" object and add it to the resolver map as usual:","position":{"start":{"line":172,"column":33,"offset":6363},"end":{"line":172,"column":81,"offset":6411}}}],"position":{"start":{"line":172,"column":1,"offset":6331},"end":{"line":172,"column":81,"offset":6411}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> ApolloServer<span class=\"token punctuation\">,</span> gql <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'apollo-server'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> GraphQLJSON <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'graphql-type-json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> typeDefs <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  scalar JSON\n\n  type MyObject {\n    myField: JSON\n  }\n\n  type Query {\n    objects: [MyObject]\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> resolvers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">JSON</span><span class=\"token operator\">:</span> GraphQLJSON\n  <span class=\"token comment\">// ...other resolvers...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApolloServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> typeDefs<span class=\"token punctuation\">,</span> resolvers <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nserver<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> url <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">🚀 Server ready at </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":174,"column":1,"offset":6413},"end":{"line":200,"column":4,"offset":6867}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":201,"column":1,"offset":6868}}}}