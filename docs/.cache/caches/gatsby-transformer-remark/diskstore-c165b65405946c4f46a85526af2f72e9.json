{"expireTime":9007200901521021000,"key":"transformer-remark-markdown-ast-e426c69842d98d2ac60754b0061a77f2-gatsby-remark-autolink-headersgatsby-remark-copy-linked-filesgatsby-remark-mermaidgatsby-remark-code-titlesgatsby-remark-prismjsgatsby-remark-rewrite-relative-linksgatsby-remark-check-links-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Apollo Server accepts both GET and POST requests.","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":50,"offset":50}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":50,"offset":50}}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#post-requests","title":null,"children":[],"data":{"hProperties":{"aria-label":"post requests permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"POST requests","position":{"start":{"line":4,"column":4,"offset":55},"end":{"line":4,"column":17,"offset":68}}}],"position":{"start":{"line":4,"column":1,"offset":52},"end":{"line":4,"column":17,"offset":68}},"data":{"id":"post-requests","htmlAttributes":{"id":"post-requests"},"hProperties":{"id":"post-requests","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"Apollo Server accepts POST requests with a JSON body. A valid request must contain either a ","position":{"start":{"line":6,"column":1,"offset":70},"end":{"line":6,"column":93,"offset":162}}},{"type":"html","value":"<code class=\"language-text\">query</code>","position":{"start":{"line":6,"column":93,"offset":162},"end":{"line":6,"column":100,"offset":169}}},{"type":"text","value":" or an ","position":{"start":{"line":6,"column":100,"offset":169},"end":{"line":6,"column":107,"offset":176}}},{"type":"html","value":"<code class=\"language-text\">operationName</code>","position":{"start":{"line":6,"column":107,"offset":176},"end":{"line":6,"column":122,"offset":191}}},{"type":"text","value":" (or both, in case of a named query), and may include ","position":{"start":{"line":6,"column":122,"offset":191},"end":{"line":6,"column":176,"offset":245}}},{"type":"html","value":"<code class=\"language-text\">variables.</code>","position":{"start":{"line":6,"column":176,"offset":245},"end":{"line":6,"column":188,"offset":257}}},{"type":"text","value":" Here's an example for a valid body of a post request:","position":{"start":{"line":6,"column":188,"offset":257},"end":{"line":6,"column":242,"offset":311}}}],"position":{"start":{"line":6,"column":1,"offset":70},"end":{"line":6,"column":242,"offset":311}}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string-property property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"query aTest($arg1: String!) { test(who: $arg1) }\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"operationName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"aTest\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"variables\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">\"arg1\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"me\"</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":8,"column":1,"offset":313},"end":{"line":14,"column":4,"offset":449}}},{"type":"paragraph","children":[{"type":"text","value":"Variables can be an object or a JSON-encoded string. I.e. the following is equivalent to the previous query:","position":{"start":{"line":16,"column":1,"offset":451},"end":{"line":16,"column":109,"offset":559}}}],"position":{"start":{"line":16,"column":1,"offset":451},"end":{"line":16,"column":109,"offset":559}}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string-property property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"query aTest($arg1: String!) { test(who: $arg1) }\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"operationName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"aTest\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"variables\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"{ \\\"arg1\\\": \\\"me\\\" }\"</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":18,"column":1,"offset":561},"end":{"line":24,"column":4,"offset":703}}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#batching","title":null,"children":[],"data":{"hProperties":{"aria-label":"batching permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Batching","position":{"start":{"line":26,"column":5,"offset":709},"end":{"line":26,"column":13,"offset":717}}}],"position":{"start":{"line":26,"column":1,"offset":705},"end":{"line":26,"column":13,"offset":717}},"data":{"id":"batching","htmlAttributes":{"id":"batching"},"hProperties":{"id":"batching","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"A batch of queries can be sent by simply sending a JSON-encoded array of queries, e.g.","position":{"start":{"line":28,"column":1,"offset":719},"end":{"line":28,"column":87,"offset":805}}}],"position":{"start":{"line":28,"column":1,"offset":719},"end":{"line":28,"column":87,"offset":805}}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">query</span><span class=\"token operator\">:</span> <span class=\"token string\">'{ testString }'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">query</span><span class=\"token operator\">:</span> <span class=\"token string\">'query q2{ test(who: \"you\" ) }'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>","position":{"start":{"line":30,"column":1,"offset":807},"end":{"line":32,"column":4,"offset":891}}},{"type":"paragraph","children":[{"type":"text","value":"If a batch of queries is sent, the response will be an array of GraphQL responses.","position":{"start":{"line":34,"column":1,"offset":893},"end":{"line":34,"column":83,"offset":975}}}],"position":{"start":{"line":34,"column":1,"offset":893},"end":{"line":34,"column":83,"offset":975}}},{"type":"paragraph","children":[{"type":"text","value":"If Apollo Server is running under a different origin than your client, you will need to enable CORS support on the server, or proxy the GraphQL requests through a web server under the main origin.","position":{"start":{"line":36,"column":1,"offset":977},"end":{"line":36,"column":197,"offset":1173}}}],"position":{"start":{"line":36,"column":1,"offset":977},"end":{"line":36,"column":197,"offset":1173}}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#get-requests","title":null,"children":[],"data":{"hProperties":{"aria-label":"get requests permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"GET requests","position":{"start":{"line":38,"column":4,"offset":1178},"end":{"line":38,"column":16,"offset":1190}}}],"position":{"start":{"line":38,"column":1,"offset":1175},"end":{"line":38,"column":16,"offset":1190}},"data":{"id":"get-requests","htmlAttributes":{"id":"get-requests"},"hProperties":{"id":"get-requests","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"Apollo Server also accepts GET requests. A GET request must pass query and optionally variables and operationName in the URL.","position":{"start":{"line":40,"column":1,"offset":1192},"end":{"line":40,"column":126,"offset":1317}}}],"position":{"start":{"line":40,"column":1,"offset":1192},"end":{"line":40,"column":126,"offset":1317}}},{"type":"paragraph","children":[{"type":"text","value":"Here is the same query from above in a well-formatted GET request to Apollo Server:","position":{"start":{"line":42,"column":1,"offset":1319},"end":{"line":42,"column":84,"offset":1402}}}],"position":{"start":{"line":42,"column":1,"offset":1319},"end":{"line":42,"column":84,"offset":1402}}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">GET /graphql?query=query%20aTest(%24arg1%3A%20String!)%20%7B%20test(who%3A%20%24arg1)%20%7D&amp;operationName=aTest&amp;variables=me</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>","position":{"start":{"line":44,"column":1,"offset":1404},"end":{"line":46,"column":4,"offset":1536}}},{"type":"paragraph","children":[{"type":"text","value":"caveat: Mutations cannot be executed via GET requests.","position":{"start":{"line":48,"column":1,"offset":1538},"end":{"line":48,"column":55,"offset":1592}}}],"position":{"start":{"line":48,"column":1,"offset":1538},"end":{"line":48,"column":55,"offset":1592}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":49,"column":1,"offset":1593}}}}